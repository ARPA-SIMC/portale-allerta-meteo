/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerter.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import it.eng.allerter.service.persistence.GeografiaPK;

import java.io.Serializable;

/**
 * The base model interface for the Geografia service. Represents a row in the &quot;ALLERTER_Geografia&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>it.eng.allerter.model.impl.GeografiaModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>it.eng.allerter.model.impl.GeografiaImpl</code>.
 * </p>
 *
 * @author GFAVINI
 * @see Geografia
 * @generated
 */
@ProviderType
public interface GeografiaModel extends BaseModel<Geografia> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a geografia model instance should use the {@link Geografia} interface instead.
	 */

	/**
	 * Returns the primary key of this geografia.
	 *
	 * @return the primary key of this geografia
	 */
	public GeografiaPK getPrimaryKey();

	/**
	 * Sets the primary key of this geografia.
	 *
	 * @param primaryKey the primary key of this geografia
	 */
	public void setPrimaryKey(GeografiaPK primaryKey);

	/**
	 * Returns the geografia ID of this geografia.
	 *
	 * @return the geografia ID of this geografia
	 */
	@AutoEscape
	public String getGeografiaId();

	/**
	 * Sets the geografia ID of this geografia.
	 *
	 * @param geografiaId the geografia ID of this geografia
	 */
	public void setGeografiaId(String geografiaId);

	/**
	 * Returns the tipo of this geografia.
	 *
	 * @return the tipo of this geografia
	 */
	@AutoEscape
	public String getTipo();

	/**
	 * Sets the tipo of this geografia.
	 *
	 * @param tipo the tipo of this geografia
	 */
	public void setTipo(String tipo);

	/**
	 * Returns the area of this geografia.
	 *
	 * @return the area of this geografia
	 */
	@AutoEscape
	public String getArea();

	/**
	 * Sets the area of this geografia.
	 *
	 * @param area the area of this geografia
	 */
	public void setArea(String area);

	/**
	 * Returns the complessita of this geografia.
	 *
	 * @return the complessita of this geografia
	 */
	@AutoEscape
	public String getComplessita();

	/**
	 * Sets the complessita of this geografia.
	 *
	 * @param complessita the complessita of this geografia
	 */
	public void setComplessita(String complessita);

	/**
	 * Returns the geometria of this geografia.
	 *
	 * @return the geometria of this geografia
	 */
	@AutoEscape
	public String getGeometria();

	/**
	 * Sets the geometria of this geografia.
	 *
	 * @param geometria the geometria of this geografia
	 */
	public void setGeometria(String geometria);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(it.eng.allerter.model.Geografia geografia);

	@Override
	public int hashCode();

	@Override
	public CacheModel<it.eng.allerter.model.Geografia> toCacheModel();

	@Override
	public it.eng.allerter.model.Geografia toEscapedModel();

	@Override
	public it.eng.allerter.model.Geografia toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();

}