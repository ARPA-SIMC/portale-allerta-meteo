/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerter.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.allerter.model.StatoAllertamento;
import it.eng.allerter.model.StatoAllertamentoModel;
import it.eng.allerter.model.StatoAllertamentoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the StatoAllertamento service. Represents a row in the &quot;ALLERTER_StatoAllertamento&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>StatoAllertamentoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StatoAllertamentoImpl}.
 * </p>
 *
 * @author GFAVINI
 * @see StatoAllertamentoImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class StatoAllertamentoModelImpl
	extends BaseModelImpl<StatoAllertamento> implements StatoAllertamentoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a stato allertamento model instance should use the <code>StatoAllertamento</code> interface instead.
	 */
	public static final String TABLE_NAME = "ALLERTER_StatoAllertamento";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"statoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"nome", Types.VARCHAR}, {"dataInizio", Types.TIMESTAMP},
		{"dataFine", Types.TIMESTAMP}, {"parentId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nome", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dataInizio", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataFine", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("parentId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ALLERTER_StatoAllertamento (uuid_ VARCHAR(75) null,statoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,nome VARCHAR(75) null,dataInizio DATE null,dataFine DATE null,parentId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table ALLERTER_StatoAllertamento";

	public static final String ORDER_BY_JPQL =
		" ORDER BY statoAllertamento.nome ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ALLERTER_StatoAllertamento.nome ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allertaer.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.allerter.model.StatoAllertamento"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allertaer.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.allerter.model.StatoAllertamento"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.allertaer.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.allerter.model.StatoAllertamento"),
		true);

	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	public static final long GROUPID_COLUMN_BITMASK = 2L;

	public static final long NOME_COLUMN_BITMASK = 4L;

	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static StatoAllertamento toModel(StatoAllertamentoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		StatoAllertamento model = new StatoAllertamentoImpl();

		model.setUuid(soapModel.getUuid());
		model.setStatoId(soapModel.getStatoId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setNome(soapModel.getNome());
		model.setDataInizio(soapModel.getDataInizio());
		model.setDataFine(soapModel.getDataFine());
		model.setParentId(soapModel.getParentId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<StatoAllertamento> toModels(
		StatoAllertamentoSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<StatoAllertamento> models = new ArrayList<StatoAllertamento>(
			soapModels.length);

		for (StatoAllertamentoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.allertaer.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.allerter.model.StatoAllertamento"));

	public StatoAllertamentoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _statoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStatoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _statoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StatoAllertamento.class;
	}

	@Override
	public String getModelClassName() {
		return StatoAllertamento.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<StatoAllertamento, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<StatoAllertamento, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<StatoAllertamento, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((StatoAllertamento)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<StatoAllertamento, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<StatoAllertamento, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(StatoAllertamento)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<StatoAllertamento, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<StatoAllertamento, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<StatoAllertamento, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<StatoAllertamento, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<StatoAllertamento, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<StatoAllertamento, Object>>();
		Map<String, BiConsumer<StatoAllertamento, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<StatoAllertamento, ?>>();

		attributeGetterFunctions.put(
			"uuid",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getUuid();
				}

			});
		attributeSetterBiConsumers.put(
			"uuid",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object uuid) {

					statoAllertamento.setUuid((String)uuid);
				}

			});
		attributeGetterFunctions.put(
			"statoId",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getStatoId();
				}

			});
		attributeSetterBiConsumers.put(
			"statoId",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object statoId) {

					statoAllertamento.setStatoId((Long)statoId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object groupId) {

					statoAllertamento.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object companyId) {

					statoAllertamento.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object userId) {

					statoAllertamento.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object userName) {

					statoAllertamento.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object createDate) {

					statoAllertamento.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object modifiedDate) {

					statoAllertamento.setModifiedDate((Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"nome",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getNome();
				}

			});
		attributeSetterBiConsumers.put(
			"nome",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object nome) {

					statoAllertamento.setNome((String)nome);
				}

			});
		attributeGetterFunctions.put(
			"dataInizio",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getDataInizio();
				}

			});
		attributeSetterBiConsumers.put(
			"dataInizio",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object dataInizio) {

					statoAllertamento.setDataInizio((Date)dataInizio);
				}

			});
		attributeGetterFunctions.put(
			"dataFine",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getDataFine();
				}

			});
		attributeSetterBiConsumers.put(
			"dataFine",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object dataFine) {

					statoAllertamento.setDataFine((Date)dataFine);
				}

			});
		attributeGetterFunctions.put(
			"parentId",
			new Function<StatoAllertamento, Object>() {

				@Override
				public Object apply(StatoAllertamento statoAllertamento) {
					return statoAllertamento.getParentId();
				}

			});
		attributeSetterBiConsumers.put(
			"parentId",
			new BiConsumer<StatoAllertamento, Object>() {

				@Override
				public void accept(
					StatoAllertamento statoAllertamento, Object parentId) {

					statoAllertamento.setParentId((Long)parentId);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getStatoId() {
		return _statoId;
	}

	@Override
	public void setStatoId(long statoId) {
		_statoId = statoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNome() {
		if (_nome == null) {
			return "";
		}
		else {
			return _nome;
		}
	}

	@Override
	public void setNome(String nome) {
		_columnBitmask = -1L;

		if (_originalNome == null) {
			_originalNome = _nome;
		}

		_nome = nome;
	}

	public String getOriginalNome() {
		return GetterUtil.getString(_originalNome);
	}

	@JSON
	@Override
	public Date getDataInizio() {
		return _dataInizio;
	}

	@Override
	public void setDataInizio(Date dataInizio) {
		_dataInizio = dataInizio;
	}

	@JSON
	@Override
	public Date getDataFine() {
		return _dataFine;
	}

	@Override
	public void setDataFine(Date dataFine) {
		_dataFine = dataFine;
	}

	@JSON
	@Override
	public long getParentId() {
		return _parentId;
	}

	@Override
	public void setParentId(long parentId) {
		_parentId = parentId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(StatoAllertamento.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), StatoAllertamento.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StatoAllertamento toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StatoAllertamento)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StatoAllertamentoImpl statoAllertamentoImpl =
			new StatoAllertamentoImpl();

		statoAllertamentoImpl.setUuid(getUuid());
		statoAllertamentoImpl.setStatoId(getStatoId());
		statoAllertamentoImpl.setGroupId(getGroupId());
		statoAllertamentoImpl.setCompanyId(getCompanyId());
		statoAllertamentoImpl.setUserId(getUserId());
		statoAllertamentoImpl.setUserName(getUserName());
		statoAllertamentoImpl.setCreateDate(getCreateDate());
		statoAllertamentoImpl.setModifiedDate(getModifiedDate());
		statoAllertamentoImpl.setNome(getNome());
		statoAllertamentoImpl.setDataInizio(getDataInizio());
		statoAllertamentoImpl.setDataFine(getDataFine());
		statoAllertamentoImpl.setParentId(getParentId());

		statoAllertamentoImpl.resetOriginalValues();

		return statoAllertamentoImpl;
	}

	@Override
	public int compareTo(StatoAllertamento statoAllertamento) {
		int value = 0;

		value = getNome().compareTo(statoAllertamento.getNome());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StatoAllertamento)) {
			return false;
		}

		StatoAllertamento statoAllertamento = (StatoAllertamento)obj;

		long primaryKey = statoAllertamento.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		StatoAllertamentoModelImpl statoAllertamentoModelImpl = this;

		statoAllertamentoModelImpl._originalUuid =
			statoAllertamentoModelImpl._uuid;

		statoAllertamentoModelImpl._originalGroupId =
			statoAllertamentoModelImpl._groupId;

		statoAllertamentoModelImpl._setOriginalGroupId = false;

		statoAllertamentoModelImpl._originalCompanyId =
			statoAllertamentoModelImpl._companyId;

		statoAllertamentoModelImpl._setOriginalCompanyId = false;

		statoAllertamentoModelImpl._setModifiedDate = false;

		statoAllertamentoModelImpl._originalNome =
			statoAllertamentoModelImpl._nome;

		statoAllertamentoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<StatoAllertamento> toCacheModel() {
		StatoAllertamentoCacheModel statoAllertamentoCacheModel =
			new StatoAllertamentoCacheModel();

		statoAllertamentoCacheModel.uuid = getUuid();

		String uuid = statoAllertamentoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			statoAllertamentoCacheModel.uuid = null;
		}

		statoAllertamentoCacheModel.statoId = getStatoId();

		statoAllertamentoCacheModel.groupId = getGroupId();

		statoAllertamentoCacheModel.companyId = getCompanyId();

		statoAllertamentoCacheModel.userId = getUserId();

		statoAllertamentoCacheModel.userName = getUserName();

		String userName = statoAllertamentoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			statoAllertamentoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			statoAllertamentoCacheModel.createDate = createDate.getTime();
		}
		else {
			statoAllertamentoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			statoAllertamentoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			statoAllertamentoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		statoAllertamentoCacheModel.nome = getNome();

		String nome = statoAllertamentoCacheModel.nome;

		if ((nome != null) && (nome.length() == 0)) {
			statoAllertamentoCacheModel.nome = null;
		}

		Date dataInizio = getDataInizio();

		if (dataInizio != null) {
			statoAllertamentoCacheModel.dataInizio = dataInizio.getTime();
		}
		else {
			statoAllertamentoCacheModel.dataInizio = Long.MIN_VALUE;
		}

		Date dataFine = getDataFine();

		if (dataFine != null) {
			statoAllertamentoCacheModel.dataFine = dataFine.getTime();
		}
		else {
			statoAllertamentoCacheModel.dataFine = Long.MIN_VALUE;
		}

		statoAllertamentoCacheModel.parentId = getParentId();

		return statoAllertamentoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<StatoAllertamento, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<StatoAllertamento, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<StatoAllertamento, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((StatoAllertamento)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<StatoAllertamento, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<StatoAllertamento, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<StatoAllertamento, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((StatoAllertamento)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		StatoAllertamento.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		StatoAllertamento.class, ModelWrapper.class
	};

	private String _uuid;
	private String _originalUuid;
	private long _statoId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _nome;
	private String _originalNome;
	private Date _dataInizio;
	private Date _dataFine;
	private long _parentId;
	private long _columnBitmask;
	private StatoAllertamento _escapedModel;

}