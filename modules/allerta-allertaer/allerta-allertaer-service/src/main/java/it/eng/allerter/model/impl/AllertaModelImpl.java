/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerter.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.allerter.model.Allerta;
import it.eng.allerter.model.AllertaModel;
import it.eng.allerter.model.AllertaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Allerta service. Represents a row in the &quot;ALLERTER_Allerta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>AllertaModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AllertaImpl}.
 * </p>
 *
 * @author GFAVINI
 * @see AllertaImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class AllertaModelImpl
	extends BaseModelImpl<Allerta> implements AllertaModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a allerta model instance should use the <code>Allerta</code> interface instead.
	 */
	public static final String TABLE_NAME = "ALLERTER_Allerta";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"allertaId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"creatorName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"stato", Types.INTEGER},
		{"numero", Types.VARCHAR}, {"progressivo", Types.INTEGER},
		{"anno", Types.INTEGER}, {"dataEmissione", Types.TIMESTAMP},
		{"dataInizio", Types.TIMESTAMP}, {"dataFine", Types.TIMESTAMP},
		{"descrizioneMeteo", Types.VARCHAR}, {"tendenza", Types.INTEGER},
		{"note", Types.VARCHAR}, {"riferimenti", Types.VARCHAR},
		{"utenteFirmaArpaId", Types.BIGINT}, {"dataFirmaArpa", Types.TIMESTAMP},
		{"utenteFirmaProtId", Types.BIGINT}, {"dataFirmaProt", Types.TIMESTAMP},
		{"parentId", Types.BIGINT}, {"sintesi", Types.VARCHAR},
		{"link", Types.VARCHAR}, {"titolo", Types.VARCHAR},
		{"tipoAllerta", Types.BOOLEAN}, {"hash", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("allertaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("creatorName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("stato", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("numero", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("progressivo", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("anno", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("dataEmissione", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataInizio", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataFine", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("descrizioneMeteo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tendenza", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("note", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("riferimenti", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("utenteFirmaArpaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dataFirmaArpa", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("utenteFirmaProtId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dataFirmaProt", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("parentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sintesi", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("link", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("titolo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tipoAllerta", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("hash", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ALLERTER_Allerta (uuid_ VARCHAR(75) null,allertaId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,creatorName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,stato INTEGER,numero VARCHAR(75) null,progressivo INTEGER,anno INTEGER,dataEmissione DATE null,dataInizio DATE null,dataFine DATE null,descrizioneMeteo TEXT null,tendenza INTEGER,note TEXT null,riferimenti TEXT null,utenteFirmaArpaId LONG,dataFirmaArpa DATE null,utenteFirmaProtId LONG,dataFirmaProt DATE null,parentId LONG,sintesi TEXT null,link VARCHAR(256) null,titolo TEXT null,tipoAllerta BOOLEAN,hash VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table ALLERTER_Allerta";

	public static final String ORDER_BY_JPQL = " ORDER BY allerta.numero ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ALLERTER_Allerta.numero ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allertaer.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.allerter.model.Allerta"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allertaer.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.allerter.model.Allerta"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.allertaer.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.allerter.model.Allerta"),
		true);

	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	public static final long GROUPID_COLUMN_BITMASK = 2L;

	public static final long NUMERO_COLUMN_BITMASK = 4L;

	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Allerta toModel(AllertaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Allerta model = new AllertaImpl();

		model.setUuid(soapModel.getUuid());
		model.setAllertaId(soapModel.getAllertaId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreatorName(soapModel.getCreatorName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setStato(soapModel.getStato());
		model.setNumero(soapModel.getNumero());
		model.setProgressivo(soapModel.getProgressivo());
		model.setAnno(soapModel.getAnno());
		model.setDataEmissione(soapModel.getDataEmissione());
		model.setDataInizio(soapModel.getDataInizio());
		model.setDataFine(soapModel.getDataFine());
		model.setDescrizioneMeteo(soapModel.getDescrizioneMeteo());
		model.setTendenza(soapModel.getTendenza());
		model.setNote(soapModel.getNote());
		model.setRiferimenti(soapModel.getRiferimenti());
		model.setUtenteFirmaArpaId(soapModel.getUtenteFirmaArpaId());
		model.setDataFirmaArpa(soapModel.getDataFirmaArpa());
		model.setUtenteFirmaProtId(soapModel.getUtenteFirmaProtId());
		model.setDataFirmaProt(soapModel.getDataFirmaProt());
		model.setParentId(soapModel.getParentId());
		model.setSintesi(soapModel.getSintesi());
		model.setLink(soapModel.getLink());
		model.setTitolo(soapModel.getTitolo());
		model.setTipoAllerta(soapModel.isTipoAllerta());
		model.setHash(soapModel.getHash());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Allerta> toModels(AllertaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Allerta> models = new ArrayList<Allerta>(soapModels.length);

		for (AllertaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.allertaer.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.allerter.model.Allerta"));

	public AllertaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _allertaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAllertaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _allertaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Allerta.class;
	}

	@Override
	public String getModelClassName() {
		return Allerta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Allerta, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Allerta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Allerta, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Allerta)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Allerta, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Allerta, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Allerta)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Allerta, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Allerta, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<Allerta, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Allerta, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Allerta, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Allerta, Object>>();
		Map<String, BiConsumer<Allerta, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Allerta, ?>>();

		attributeGetterFunctions.put(
			"uuid",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getUuid();
				}

			});
		attributeSetterBiConsumers.put(
			"uuid",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object uuid) {
					allerta.setUuid((String)uuid);
				}

			});
		attributeGetterFunctions.put(
			"allertaId",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getAllertaId();
				}

			});
		attributeSetterBiConsumers.put(
			"allertaId",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object allertaId) {
					allerta.setAllertaId((Long)allertaId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object groupId) {
					allerta.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object companyId) {
					allerta.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object userId) {
					allerta.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object userName) {
					allerta.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"creatorName",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getCreatorName();
				}

			});
		attributeSetterBiConsumers.put(
			"creatorName",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object creatorName) {
					allerta.setCreatorName((String)creatorName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object createDate) {
					allerta.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object modifiedDate) {
					allerta.setModifiedDate((Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"stato",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getStato();
				}

			});
		attributeSetterBiConsumers.put(
			"stato",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object stato) {
					allerta.setStato((Integer)stato);
				}

			});
		attributeGetterFunctions.put(
			"numero",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getNumero();
				}

			});
		attributeSetterBiConsumers.put(
			"numero",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object numero) {
					allerta.setNumero((String)numero);
				}

			});
		attributeGetterFunctions.put(
			"progressivo",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getProgressivo();
				}

			});
		attributeSetterBiConsumers.put(
			"progressivo",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object progressivo) {
					allerta.setProgressivo((Integer)progressivo);
				}

			});
		attributeGetterFunctions.put(
			"anno",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getAnno();
				}

			});
		attributeSetterBiConsumers.put(
			"anno",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object anno) {
					allerta.setAnno((Integer)anno);
				}

			});
		attributeGetterFunctions.put(
			"dataEmissione",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getDataEmissione();
				}

			});
		attributeSetterBiConsumers.put(
			"dataEmissione",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object dataEmissione) {
					allerta.setDataEmissione((Date)dataEmissione);
				}

			});
		attributeGetterFunctions.put(
			"dataInizio",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getDataInizio();
				}

			});
		attributeSetterBiConsumers.put(
			"dataInizio",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object dataInizio) {
					allerta.setDataInizio((Date)dataInizio);
				}

			});
		attributeGetterFunctions.put(
			"dataFine",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getDataFine();
				}

			});
		attributeSetterBiConsumers.put(
			"dataFine",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object dataFine) {
					allerta.setDataFine((Date)dataFine);
				}

			});
		attributeGetterFunctions.put(
			"descrizioneMeteo",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getDescrizioneMeteo();
				}

			});
		attributeSetterBiConsumers.put(
			"descrizioneMeteo",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object descrizioneMeteo) {
					allerta.setDescrizioneMeteo((String)descrizioneMeteo);
				}

			});
		attributeGetterFunctions.put(
			"tendenza",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getTendenza();
				}

			});
		attributeSetterBiConsumers.put(
			"tendenza",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object tendenza) {
					allerta.setTendenza((Integer)tendenza);
				}

			});
		attributeGetterFunctions.put(
			"note",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getNote();
				}

			});
		attributeSetterBiConsumers.put(
			"note",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object note) {
					allerta.setNote((String)note);
				}

			});
		attributeGetterFunctions.put(
			"riferimenti",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getRiferimenti();
				}

			});
		attributeSetterBiConsumers.put(
			"riferimenti",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object riferimenti) {
					allerta.setRiferimenti((String)riferimenti);
				}

			});
		attributeGetterFunctions.put(
			"utenteFirmaArpaId",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getUtenteFirmaArpaId();
				}

			});
		attributeSetterBiConsumers.put(
			"utenteFirmaArpaId",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object utenteFirmaArpaId) {
					allerta.setUtenteFirmaArpaId((Long)utenteFirmaArpaId);
				}

			});
		attributeGetterFunctions.put(
			"dataFirmaArpa",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getDataFirmaArpa();
				}

			});
		attributeSetterBiConsumers.put(
			"dataFirmaArpa",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object dataFirmaArpa) {
					allerta.setDataFirmaArpa((Date)dataFirmaArpa);
				}

			});
		attributeGetterFunctions.put(
			"utenteFirmaProtId",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getUtenteFirmaProtId();
				}

			});
		attributeSetterBiConsumers.put(
			"utenteFirmaProtId",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object utenteFirmaProtId) {
					allerta.setUtenteFirmaProtId((Long)utenteFirmaProtId);
				}

			});
		attributeGetterFunctions.put(
			"dataFirmaProt",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getDataFirmaProt();
				}

			});
		attributeSetterBiConsumers.put(
			"dataFirmaProt",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object dataFirmaProt) {
					allerta.setDataFirmaProt((Date)dataFirmaProt);
				}

			});
		attributeGetterFunctions.put(
			"parentId",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getParentId();
				}

			});
		attributeSetterBiConsumers.put(
			"parentId",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object parentId) {
					allerta.setParentId((Long)parentId);
				}

			});
		attributeGetterFunctions.put(
			"sintesi",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getSintesi();
				}

			});
		attributeSetterBiConsumers.put(
			"sintesi",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object sintesi) {
					allerta.setSintesi((String)sintesi);
				}

			});
		attributeGetterFunctions.put(
			"link",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getLink();
				}

			});
		attributeSetterBiConsumers.put(
			"link",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object link) {
					allerta.setLink((String)link);
				}

			});
		attributeGetterFunctions.put(
			"titolo",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getTitolo();
				}

			});
		attributeSetterBiConsumers.put(
			"titolo",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object titolo) {
					allerta.setTitolo((String)titolo);
				}

			});
		attributeGetterFunctions.put(
			"tipoAllerta",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getTipoAllerta();
				}

			});
		attributeSetterBiConsumers.put(
			"tipoAllerta",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object tipoAllerta) {
					allerta.setTipoAllerta((Boolean)tipoAllerta);
				}

			});
		attributeGetterFunctions.put(
			"hash",
			new Function<Allerta, Object>() {

				@Override
				public Object apply(Allerta allerta) {
					return allerta.getHash();
				}

			});
		attributeSetterBiConsumers.put(
			"hash",
			new BiConsumer<Allerta, Object>() {

				@Override
				public void accept(Allerta allerta, Object hash) {
					allerta.setHash((String)hash);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getAllertaId() {
		return _allertaId;
	}

	@Override
	public void setAllertaId(long allertaId) {
		_allertaId = allertaId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public String getCreatorName() {
		if (_creatorName == null) {
			return "";
		}
		else {
			return _creatorName;
		}
	}

	@Override
	public void setCreatorName(String creatorName) {
		_creatorName = creatorName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getStato() {
		return _stato;
	}

	@Override
	public void setStato(int stato) {
		_stato = stato;
	}

	@JSON
	@Override
	public String getNumero() {
		if (_numero == null) {
			return "";
		}
		else {
			return _numero;
		}
	}

	@Override
	public void setNumero(String numero) {
		_columnBitmask = -1L;

		if (_originalNumero == null) {
			_originalNumero = _numero;
		}

		_numero = numero;
	}

	public String getOriginalNumero() {
		return GetterUtil.getString(_originalNumero);
	}

	@JSON
	@Override
	public int getProgressivo() {
		return _progressivo;
	}

	@Override
	public void setProgressivo(int progressivo) {
		_progressivo = progressivo;
	}

	@JSON
	@Override
	public int getAnno() {
		return _anno;
	}

	@Override
	public void setAnno(int anno) {
		_anno = anno;
	}

	@JSON
	@Override
	public Date getDataEmissione() {
		return _dataEmissione;
	}

	@Override
	public void setDataEmissione(Date dataEmissione) {
		_dataEmissione = dataEmissione;
	}

	@JSON
	@Override
	public Date getDataInizio() {
		return _dataInizio;
	}

	@Override
	public void setDataInizio(Date dataInizio) {
		_dataInizio = dataInizio;
	}

	@JSON
	@Override
	public Date getDataFine() {
		return _dataFine;
	}

	@Override
	public void setDataFine(Date dataFine) {
		_dataFine = dataFine;
	}

	@JSON
	@Override
	public String getDescrizioneMeteo() {
		if (_descrizioneMeteo == null) {
			return "";
		}
		else {
			return _descrizioneMeteo;
		}
	}

	@Override
	public void setDescrizioneMeteo(String descrizioneMeteo) {
		_descrizioneMeteo = descrizioneMeteo;
	}

	@JSON
	@Override
	public int getTendenza() {
		return _tendenza;
	}

	@Override
	public void setTendenza(int tendenza) {
		_tendenza = tendenza;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return "";
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public String getRiferimenti() {
		if (_riferimenti == null) {
			return "";
		}
		else {
			return _riferimenti;
		}
	}

	@Override
	public void setRiferimenti(String riferimenti) {
		_riferimenti = riferimenti;
	}

	@JSON
	@Override
	public long getUtenteFirmaArpaId() {
		return _utenteFirmaArpaId;
	}

	@Override
	public void setUtenteFirmaArpaId(long utenteFirmaArpaId) {
		_utenteFirmaArpaId = utenteFirmaArpaId;
	}

	@JSON
	@Override
	public Date getDataFirmaArpa() {
		return _dataFirmaArpa;
	}

	@Override
	public void setDataFirmaArpa(Date dataFirmaArpa) {
		_dataFirmaArpa = dataFirmaArpa;
	}

	@JSON
	@Override
	public long getUtenteFirmaProtId() {
		return _utenteFirmaProtId;
	}

	@Override
	public void setUtenteFirmaProtId(long utenteFirmaProtId) {
		_utenteFirmaProtId = utenteFirmaProtId;
	}

	@JSON
	@Override
	public Date getDataFirmaProt() {
		return _dataFirmaProt;
	}

	@Override
	public void setDataFirmaProt(Date dataFirmaProt) {
		_dataFirmaProt = dataFirmaProt;
	}

	@JSON
	@Override
	public long getParentId() {
		return _parentId;
	}

	@Override
	public void setParentId(long parentId) {
		_parentId = parentId;
	}

	@JSON
	@Override
	public String getSintesi() {
		if (_sintesi == null) {
			return "";
		}
		else {
			return _sintesi;
		}
	}

	@Override
	public void setSintesi(String sintesi) {
		_sintesi = sintesi;
	}

	@JSON
	@Override
	public String getLink() {
		if (_link == null) {
			return "";
		}
		else {
			return _link;
		}
	}

	@Override
	public void setLink(String link) {
		_link = link;
	}

	@JSON
	@Override
	public String getTitolo() {
		if (_titolo == null) {
			return "";
		}
		else {
			return _titolo;
		}
	}

	@Override
	public void setTitolo(String titolo) {
		_titolo = titolo;
	}

	@JSON
	@Override
	public boolean getTipoAllerta() {
		return _tipoAllerta;
	}

	@JSON
	@Override
	public boolean isTipoAllerta() {
		return _tipoAllerta;
	}

	@Override
	public void setTipoAllerta(boolean tipoAllerta) {
		_tipoAllerta = tipoAllerta;
	}

	@JSON
	@Override
	public String getHash() {
		if (_hash == null) {
			return "";
		}
		else {
			return _hash;
		}
	}

	@Override
	public void setHash(String hash) {
		_hash = hash;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(Allerta.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Allerta.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Allerta toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Allerta)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AllertaImpl allertaImpl = new AllertaImpl();

		allertaImpl.setUuid(getUuid());
		allertaImpl.setAllertaId(getAllertaId());
		allertaImpl.setGroupId(getGroupId());
		allertaImpl.setCompanyId(getCompanyId());
		allertaImpl.setUserId(getUserId());
		allertaImpl.setUserName(getUserName());
		allertaImpl.setCreatorName(getCreatorName());
		allertaImpl.setCreateDate(getCreateDate());
		allertaImpl.setModifiedDate(getModifiedDate());
		allertaImpl.setStato(getStato());
		allertaImpl.setNumero(getNumero());
		allertaImpl.setProgressivo(getProgressivo());
		allertaImpl.setAnno(getAnno());
		allertaImpl.setDataEmissione(getDataEmissione());
		allertaImpl.setDataInizio(getDataInizio());
		allertaImpl.setDataFine(getDataFine());
		allertaImpl.setDescrizioneMeteo(getDescrizioneMeteo());
		allertaImpl.setTendenza(getTendenza());
		allertaImpl.setNote(getNote());
		allertaImpl.setRiferimenti(getRiferimenti());
		allertaImpl.setUtenteFirmaArpaId(getUtenteFirmaArpaId());
		allertaImpl.setDataFirmaArpa(getDataFirmaArpa());
		allertaImpl.setUtenteFirmaProtId(getUtenteFirmaProtId());
		allertaImpl.setDataFirmaProt(getDataFirmaProt());
		allertaImpl.setParentId(getParentId());
		allertaImpl.setSintesi(getSintesi());
		allertaImpl.setLink(getLink());
		allertaImpl.setTitolo(getTitolo());
		allertaImpl.setTipoAllerta(isTipoAllerta());
		allertaImpl.setHash(getHash());

		allertaImpl.resetOriginalValues();

		return allertaImpl;
	}

	@Override
	public int compareTo(Allerta allerta) {
		int value = 0;

		value = getNumero().compareTo(allerta.getNumero());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Allerta)) {
			return false;
		}

		Allerta allerta = (Allerta)obj;

		long primaryKey = allerta.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AllertaModelImpl allertaModelImpl = this;

		allertaModelImpl._originalUuid = allertaModelImpl._uuid;

		allertaModelImpl._originalGroupId = allertaModelImpl._groupId;

		allertaModelImpl._setOriginalGroupId = false;

		allertaModelImpl._originalCompanyId = allertaModelImpl._companyId;

		allertaModelImpl._setOriginalCompanyId = false;

		allertaModelImpl._setModifiedDate = false;

		allertaModelImpl._originalNumero = allertaModelImpl._numero;

		allertaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Allerta> toCacheModel() {
		AllertaCacheModel allertaCacheModel = new AllertaCacheModel();

		allertaCacheModel.uuid = getUuid();

		String uuid = allertaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			allertaCacheModel.uuid = null;
		}

		allertaCacheModel.allertaId = getAllertaId();

		allertaCacheModel.groupId = getGroupId();

		allertaCacheModel.companyId = getCompanyId();

		allertaCacheModel.userId = getUserId();

		allertaCacheModel.userName = getUserName();

		String userName = allertaCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			allertaCacheModel.userName = null;
		}

		allertaCacheModel.creatorName = getCreatorName();

		String creatorName = allertaCacheModel.creatorName;

		if ((creatorName != null) && (creatorName.length() == 0)) {
			allertaCacheModel.creatorName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			allertaCacheModel.createDate = createDate.getTime();
		}
		else {
			allertaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			allertaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			allertaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		allertaCacheModel.stato = getStato();

		allertaCacheModel.numero = getNumero();

		String numero = allertaCacheModel.numero;

		if ((numero != null) && (numero.length() == 0)) {
			allertaCacheModel.numero = null;
		}

		allertaCacheModel.progressivo = getProgressivo();

		allertaCacheModel.anno = getAnno();

		Date dataEmissione = getDataEmissione();

		if (dataEmissione != null) {
			allertaCacheModel.dataEmissione = dataEmissione.getTime();
		}
		else {
			allertaCacheModel.dataEmissione = Long.MIN_VALUE;
		}

		Date dataInizio = getDataInizio();

		if (dataInizio != null) {
			allertaCacheModel.dataInizio = dataInizio.getTime();
		}
		else {
			allertaCacheModel.dataInizio = Long.MIN_VALUE;
		}

		Date dataFine = getDataFine();

		if (dataFine != null) {
			allertaCacheModel.dataFine = dataFine.getTime();
		}
		else {
			allertaCacheModel.dataFine = Long.MIN_VALUE;
		}

		allertaCacheModel.descrizioneMeteo = getDescrizioneMeteo();

		String descrizioneMeteo = allertaCacheModel.descrizioneMeteo;

		if ((descrizioneMeteo != null) && (descrizioneMeteo.length() == 0)) {
			allertaCacheModel.descrizioneMeteo = null;
		}

		allertaCacheModel.tendenza = getTendenza();

		allertaCacheModel.note = getNote();

		String note = allertaCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			allertaCacheModel.note = null;
		}

		allertaCacheModel.riferimenti = getRiferimenti();

		String riferimenti = allertaCacheModel.riferimenti;

		if ((riferimenti != null) && (riferimenti.length() == 0)) {
			allertaCacheModel.riferimenti = null;
		}

		allertaCacheModel.utenteFirmaArpaId = getUtenteFirmaArpaId();

		Date dataFirmaArpa = getDataFirmaArpa();

		if (dataFirmaArpa != null) {
			allertaCacheModel.dataFirmaArpa = dataFirmaArpa.getTime();
		}
		else {
			allertaCacheModel.dataFirmaArpa = Long.MIN_VALUE;
		}

		allertaCacheModel.utenteFirmaProtId = getUtenteFirmaProtId();

		Date dataFirmaProt = getDataFirmaProt();

		if (dataFirmaProt != null) {
			allertaCacheModel.dataFirmaProt = dataFirmaProt.getTime();
		}
		else {
			allertaCacheModel.dataFirmaProt = Long.MIN_VALUE;
		}

		allertaCacheModel.parentId = getParentId();

		allertaCacheModel.sintesi = getSintesi();

		String sintesi = allertaCacheModel.sintesi;

		if ((sintesi != null) && (sintesi.length() == 0)) {
			allertaCacheModel.sintesi = null;
		}

		allertaCacheModel.link = getLink();

		String link = allertaCacheModel.link;

		if ((link != null) && (link.length() == 0)) {
			allertaCacheModel.link = null;
		}

		allertaCacheModel.titolo = getTitolo();

		String titolo = allertaCacheModel.titolo;

		if ((titolo != null) && (titolo.length() == 0)) {
			allertaCacheModel.titolo = null;
		}

		allertaCacheModel.tipoAllerta = isTipoAllerta();

		allertaCacheModel.hash = getHash();

		String hash = allertaCacheModel.hash;

		if ((hash != null) && (hash.length() == 0)) {
			allertaCacheModel.hash = null;
		}

		return allertaCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Allerta, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Allerta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Allerta, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((Allerta)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Allerta, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Allerta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Allerta, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Allerta)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		Allerta.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		Allerta.class, ModelWrapper.class
	};

	private String _uuid;
	private String _originalUuid;
	private long _allertaId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private String _creatorName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _stato;
	private String _numero;
	private String _originalNumero;
	private int _progressivo;
	private int _anno;
	private Date _dataEmissione;
	private Date _dataInizio;
	private Date _dataFine;
	private String _descrizioneMeteo;
	private int _tendenza;
	private String _note;
	private String _riferimenti;
	private long _utenteFirmaArpaId;
	private Date _dataFirmaArpa;
	private long _utenteFirmaProtId;
	private Date _dataFirmaProt;
	private long _parentId;
	private String _sintesi;
	private String _link;
	private String _titolo;
	private boolean _tipoAllerta;
	private String _hash;
	private long _columnBitmask;
	private Allerta _escapedModel;

}