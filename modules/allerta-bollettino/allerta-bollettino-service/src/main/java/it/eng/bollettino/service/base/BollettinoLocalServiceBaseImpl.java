/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.bollettino.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.asset.kernel.service.persistence.AssetEntryPersistence;
import com.liferay.exportimport.kernel.lar.ExportImportHelperUtil;
import com.liferay.exportimport.kernel.lar.ManifestSummary;
import com.liferay.exportimport.kernel.lar.PortletDataContext;
import com.liferay.exportimport.kernel.lar.StagedModelDataHandlerUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ExportActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.transaction.Transactional;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import it.eng.bollettino.model.Bollettino;
import it.eng.bollettino.service.BollettinoLocalService;
import it.eng.bollettino.service.persistence.AllarmePersistence;
import it.eng.bollettino.service.persistence.AttivazioneFiumePersistence;
import it.eng.bollettino.service.persistence.BacinoPersistence;
import it.eng.bollettino.service.persistence.BollettinoBacinoPersistence;
import it.eng.bollettino.service.persistence.BollettinoFinder;
import it.eng.bollettino.service.persistence.BollettinoIconaPersistence;
import it.eng.bollettino.service.persistence.BollettinoParametroPersistence;
import it.eng.bollettino.service.persistence.BollettinoPersistence;
import it.eng.bollettino.service.persistence.BollettinoSensorePersistence;
import it.eng.bollettino.service.persistence.IconaPersistence;
import it.eng.bollettino.service.persistence.IdrometroPersistence;
import it.eng.bollettino.service.persistence.PluviometroPersistence;
import it.eng.bollettino.service.persistence.RegolaAllarmeComunePersistence;
import it.eng.bollettino.service.persistence.RegolaAllarmeCondizionePersistence;
import it.eng.bollettino.service.persistence.RegolaAllarmePersistence;
import it.eng.bollettino.service.persistence.StazionePersistence;
import it.eng.bollettino.service.persistence.StazioneVariabilePersistence;
import it.eng.bollettino.service.persistence.ValoreSensorePersistence;
import it.eng.bollettino.service.persistence.VariabilePersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the bollettino local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link it.eng.bollettino.service.impl.BollettinoLocalServiceImpl}.
 * </p>
 *
 * @author GFAVINI
 * @see it.eng.bollettino.service.impl.BollettinoLocalServiceImpl
 * @generated
 */
@ProviderType
public abstract class BollettinoLocalServiceBaseImpl
	extends BaseLocalServiceImpl
	implements BollettinoLocalService, IdentifiableOSGiService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>BollettinoLocalService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>it.eng.bollettino.service.BollettinoLocalServiceUtil</code>.
	 */

	/**
	 * Adds the bollettino to the database. Also notifies the appropriate model listeners.
	 *
	 * @param bollettino the bollettino
	 * @return the bollettino that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Bollettino addBollettino(Bollettino bollettino) {
		bollettino.setNew(true);

		return bollettinoPersistence.update(bollettino);
	}

	/**
	 * Creates a new bollettino with the primary key. Does not add the bollettino to the database.
	 *
	 * @param bollettinoId the primary key for the new bollettino
	 * @return the new bollettino
	 */
	@Override
	@Transactional(enabled = false)
	public Bollettino createBollettino(long bollettinoId) {
		return bollettinoPersistence.create(bollettinoId);
	}

	/**
	 * Deletes the bollettino with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param bollettinoId the primary key of the bollettino
	 * @return the bollettino that was removed
	 * @throws PortalException if a bollettino with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Bollettino deleteBollettino(long bollettinoId)
		throws PortalException {

		return bollettinoPersistence.remove(bollettinoId);
	}

	/**
	 * Deletes the bollettino from the database. Also notifies the appropriate model listeners.
	 *
	 * @param bollettino the bollettino
	 * @return the bollettino that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Bollettino deleteBollettino(Bollettino bollettino) {
		return bollettinoPersistence.remove(bollettino);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(
			Bollettino.class, clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return bollettinoPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.bollettino.model.impl.BollettinoModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(
		DynamicQuery dynamicQuery, int start, int end) {

		return bollettinoPersistence.findWithDynamicQuery(
			dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.bollettino.model.impl.BollettinoModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(
		DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator<T> orderByComparator) {

		return bollettinoPersistence.findWithDynamicQuery(
			dynamicQuery, start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return bollettinoPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(
		DynamicQuery dynamicQuery, Projection projection) {

		return bollettinoPersistence.countWithDynamicQuery(
			dynamicQuery, projection);
	}

	@Override
	public Bollettino fetchBollettino(long bollettinoId) {
		return bollettinoPersistence.fetchByPrimaryKey(bollettinoId);
	}

	/**
	 * Returns the bollettino matching the UUID and group.
	 *
	 * @param uuid the bollettino's UUID
	 * @param groupId the primary key of the group
	 * @return the matching bollettino, or <code>null</code> if a matching bollettino could not be found
	 */
	@Override
	public Bollettino fetchBollettinoByUuidAndGroupId(
		String uuid, long groupId) {

		return bollettinoPersistence.fetchByUUID_G(uuid, groupId);
	}

	/**
	 * Returns the bollettino with the primary key.
	 *
	 * @param bollettinoId the primary key of the bollettino
	 * @return the bollettino
	 * @throws PortalException if a bollettino with the primary key could not be found
	 */
	@Override
	public Bollettino getBollettino(long bollettinoId) throws PortalException {
		return bollettinoPersistence.findByPrimaryKey(bollettinoId);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery =
			new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(bollettinoLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(Bollettino.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("bollettinoId");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery
		getIndexableActionableDynamicQuery() {

		IndexableActionableDynamicQuery indexableActionableDynamicQuery =
			new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(
			bollettinoLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(Bollettino.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName(
			"bollettinoId");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {

		actionableDynamicQuery.setBaseLocalService(bollettinoLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(Bollettino.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("bollettinoId");
	}

	@Override
	public ExportActionableDynamicQuery getExportActionableDynamicQuery(
		final PortletDataContext portletDataContext) {

		final ExportActionableDynamicQuery exportActionableDynamicQuery =
			new ExportActionableDynamicQuery() {

				@Override
				public long performCount() throws PortalException {
					ManifestSummary manifestSummary =
						portletDataContext.getManifestSummary();

					StagedModelType stagedModelType = getStagedModelType();

					long modelAdditionCount = super.performCount();

					manifestSummary.addModelAdditionCount(
						stagedModelType, modelAdditionCount);

					long modelDeletionCount =
						ExportImportHelperUtil.getModelDeletionCount(
							portletDataContext, stagedModelType);

					manifestSummary.addModelDeletionCount(
						stagedModelType, modelDeletionCount);

					return modelAdditionCount;
				}

			};

		initActionableDynamicQuery(exportActionableDynamicQuery);

		exportActionableDynamicQuery.setAddCriteriaMethod(
			new ActionableDynamicQuery.AddCriteriaMethod() {

				@Override
				public void addCriteria(DynamicQuery dynamicQuery) {
					portletDataContext.addDateRangeCriteria(
						dynamicQuery, "modifiedDate");
				}

			});

		exportActionableDynamicQuery.setCompanyId(
			portletDataContext.getCompanyId());

		exportActionableDynamicQuery.setPerformActionMethod(
			new ActionableDynamicQuery.PerformActionMethod<Bollettino>() {

				@Override
				public void performAction(Bollettino bollettino)
					throws PortalException {

					StagedModelDataHandlerUtil.exportStagedModel(
						portletDataContext, bollettino);
				}

			});
		exportActionableDynamicQuery.setStagedModelType(
			new StagedModelType(
				PortalUtil.getClassNameId(Bollettino.class.getName())));

		return exportActionableDynamicQuery;
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {

		return bollettinoLocalService.deleteBollettino(
			(Bollettino)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {

		return bollettinoPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns all the bollettinos matching the UUID and company.
	 *
	 * @param uuid the UUID of the bollettinos
	 * @param companyId the primary key of the company
	 * @return the matching bollettinos, or an empty list if no matches were found
	 */
	@Override
	public List<Bollettino> getBollettinosByUuidAndCompanyId(
		String uuid, long companyId) {

		return bollettinoPersistence.findByUuid_C(uuid, companyId);
	}

	/**
	 * Returns a range of bollettinos matching the UUID and company.
	 *
	 * @param uuid the UUID of the bollettinos
	 * @param companyId the primary key of the company
	 * @param start the lower bound of the range of bollettinos
	 * @param end the upper bound of the range of bollettinos (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the range of matching bollettinos, or an empty list if no matches were found
	 */
	@Override
	public List<Bollettino> getBollettinosByUuidAndCompanyId(
		String uuid, long companyId, int start, int end,
		OrderByComparator<Bollettino> orderByComparator) {

		return bollettinoPersistence.findByUuid_C(
			uuid, companyId, start, end, orderByComparator);
	}

	/**
	 * Returns the bollettino matching the UUID and group.
	 *
	 * @param uuid the bollettino's UUID
	 * @param groupId the primary key of the group
	 * @return the matching bollettino
	 * @throws PortalException if a matching bollettino could not be found
	 */
	@Override
	public Bollettino getBollettinoByUuidAndGroupId(String uuid, long groupId)
		throws PortalException {

		return bollettinoPersistence.findByUUID_G(uuid, groupId);
	}

	/**
	 * Returns a range of all the bollettinos.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.bollettino.model.impl.BollettinoModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of bollettinos
	 * @param end the upper bound of the range of bollettinos (not inclusive)
	 * @return the range of bollettinos
	 */
	@Override
	public List<Bollettino> getBollettinos(int start, int end) {
		return bollettinoPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of bollettinos.
	 *
	 * @return the number of bollettinos
	 */
	@Override
	public int getBollettinosCount() {
		return bollettinoPersistence.countAll();
	}

	/**
	 * Updates the bollettino in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param bollettino the bollettino
	 * @return the bollettino that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Bollettino updateBollettino(Bollettino bollettino) {
		return bollettinoPersistence.update(bollettino);
	}

	/**
	 * Returns the allarme local service.
	 *
	 * @return the allarme local service
	 */
	public it.eng.bollettino.service.AllarmeLocalService
		getAllarmeLocalService() {

		return allarmeLocalService;
	}

	/**
	 * Sets the allarme local service.
	 *
	 * @param allarmeLocalService the allarme local service
	 */
	public void setAllarmeLocalService(
		it.eng.bollettino.service.AllarmeLocalService allarmeLocalService) {

		this.allarmeLocalService = allarmeLocalService;
	}

	/**
	 * Returns the allarme persistence.
	 *
	 * @return the allarme persistence
	 */
	public AllarmePersistence getAllarmePersistence() {
		return allarmePersistence;
	}

	/**
	 * Sets the allarme persistence.
	 *
	 * @param allarmePersistence the allarme persistence
	 */
	public void setAllarmePersistence(AllarmePersistence allarmePersistence) {
		this.allarmePersistence = allarmePersistence;
	}

	/**
	 * Returns the attivazione fiume local service.
	 *
	 * @return the attivazione fiume local service
	 */
	public it.eng.bollettino.service.AttivazioneFiumeLocalService
		getAttivazioneFiumeLocalService() {

		return attivazioneFiumeLocalService;
	}

	/**
	 * Sets the attivazione fiume local service.
	 *
	 * @param attivazioneFiumeLocalService the attivazione fiume local service
	 */
	public void setAttivazioneFiumeLocalService(
		it.eng.bollettino.service.AttivazioneFiumeLocalService
			attivazioneFiumeLocalService) {

		this.attivazioneFiumeLocalService = attivazioneFiumeLocalService;
	}

	/**
	 * Returns the attivazione fiume persistence.
	 *
	 * @return the attivazione fiume persistence
	 */
	public AttivazioneFiumePersistence getAttivazioneFiumePersistence() {
		return attivazioneFiumePersistence;
	}

	/**
	 * Sets the attivazione fiume persistence.
	 *
	 * @param attivazioneFiumePersistence the attivazione fiume persistence
	 */
	public void setAttivazioneFiumePersistence(
		AttivazioneFiumePersistence attivazioneFiumePersistence) {

		this.attivazioneFiumePersistence = attivazioneFiumePersistence;
	}

	/**
	 * Returns the bacino local service.
	 *
	 * @return the bacino local service
	 */
	public it.eng.bollettino.service.BacinoLocalService
		getBacinoLocalService() {

		return bacinoLocalService;
	}

	/**
	 * Sets the bacino local service.
	 *
	 * @param bacinoLocalService the bacino local service
	 */
	public void setBacinoLocalService(
		it.eng.bollettino.service.BacinoLocalService bacinoLocalService) {

		this.bacinoLocalService = bacinoLocalService;
	}

	/**
	 * Returns the bacino persistence.
	 *
	 * @return the bacino persistence
	 */
	public BacinoPersistence getBacinoPersistence() {
		return bacinoPersistence;
	}

	/**
	 * Sets the bacino persistence.
	 *
	 * @param bacinoPersistence the bacino persistence
	 */
	public void setBacinoPersistence(BacinoPersistence bacinoPersistence) {
		this.bacinoPersistence = bacinoPersistence;
	}

	/**
	 * Returns the bollettino local service.
	 *
	 * @return the bollettino local service
	 */
	public BollettinoLocalService getBollettinoLocalService() {
		return bollettinoLocalService;
	}

	/**
	 * Sets the bollettino local service.
	 *
	 * @param bollettinoLocalService the bollettino local service
	 */
	public void setBollettinoLocalService(
		BollettinoLocalService bollettinoLocalService) {

		this.bollettinoLocalService = bollettinoLocalService;
	}

	/**
	 * Returns the bollettino persistence.
	 *
	 * @return the bollettino persistence
	 */
	public BollettinoPersistence getBollettinoPersistence() {
		return bollettinoPersistence;
	}

	/**
	 * Sets the bollettino persistence.
	 *
	 * @param bollettinoPersistence the bollettino persistence
	 */
	public void setBollettinoPersistence(
		BollettinoPersistence bollettinoPersistence) {

		this.bollettinoPersistence = bollettinoPersistence;
	}

	/**
	 * Returns the bollettino finder.
	 *
	 * @return the bollettino finder
	 */
	public BollettinoFinder getBollettinoFinder() {
		return bollettinoFinder;
	}

	/**
	 * Sets the bollettino finder.
	 *
	 * @param bollettinoFinder the bollettino finder
	 */
	public void setBollettinoFinder(BollettinoFinder bollettinoFinder) {
		this.bollettinoFinder = bollettinoFinder;
	}

	/**
	 * Returns the bollettino bacino local service.
	 *
	 * @return the bollettino bacino local service
	 */
	public it.eng.bollettino.service.BollettinoBacinoLocalService
		getBollettinoBacinoLocalService() {

		return bollettinoBacinoLocalService;
	}

	/**
	 * Sets the bollettino bacino local service.
	 *
	 * @param bollettinoBacinoLocalService the bollettino bacino local service
	 */
	public void setBollettinoBacinoLocalService(
		it.eng.bollettino.service.BollettinoBacinoLocalService
			bollettinoBacinoLocalService) {

		this.bollettinoBacinoLocalService = bollettinoBacinoLocalService;
	}

	/**
	 * Returns the bollettino bacino persistence.
	 *
	 * @return the bollettino bacino persistence
	 */
	public BollettinoBacinoPersistence getBollettinoBacinoPersistence() {
		return bollettinoBacinoPersistence;
	}

	/**
	 * Sets the bollettino bacino persistence.
	 *
	 * @param bollettinoBacinoPersistence the bollettino bacino persistence
	 */
	public void setBollettinoBacinoPersistence(
		BollettinoBacinoPersistence bollettinoBacinoPersistence) {

		this.bollettinoBacinoPersistence = bollettinoBacinoPersistence;
	}

	/**
	 * Returns the bollettino icona local service.
	 *
	 * @return the bollettino icona local service
	 */
	public it.eng.bollettino.service.BollettinoIconaLocalService
		getBollettinoIconaLocalService() {

		return bollettinoIconaLocalService;
	}

	/**
	 * Sets the bollettino icona local service.
	 *
	 * @param bollettinoIconaLocalService the bollettino icona local service
	 */
	public void setBollettinoIconaLocalService(
		it.eng.bollettino.service.BollettinoIconaLocalService
			bollettinoIconaLocalService) {

		this.bollettinoIconaLocalService = bollettinoIconaLocalService;
	}

	/**
	 * Returns the bollettino icona persistence.
	 *
	 * @return the bollettino icona persistence
	 */
	public BollettinoIconaPersistence getBollettinoIconaPersistence() {
		return bollettinoIconaPersistence;
	}

	/**
	 * Sets the bollettino icona persistence.
	 *
	 * @param bollettinoIconaPersistence the bollettino icona persistence
	 */
	public void setBollettinoIconaPersistence(
		BollettinoIconaPersistence bollettinoIconaPersistence) {

		this.bollettinoIconaPersistence = bollettinoIconaPersistence;
	}

	/**
	 * Returns the bollettino parametro local service.
	 *
	 * @return the bollettino parametro local service
	 */
	public it.eng.bollettino.service.BollettinoParametroLocalService
		getBollettinoParametroLocalService() {

		return bollettinoParametroLocalService;
	}

	/**
	 * Sets the bollettino parametro local service.
	 *
	 * @param bollettinoParametroLocalService the bollettino parametro local service
	 */
	public void setBollettinoParametroLocalService(
		it.eng.bollettino.service.BollettinoParametroLocalService
			bollettinoParametroLocalService) {

		this.bollettinoParametroLocalService = bollettinoParametroLocalService;
	}

	/**
	 * Returns the bollettino parametro persistence.
	 *
	 * @return the bollettino parametro persistence
	 */
	public BollettinoParametroPersistence getBollettinoParametroPersistence() {
		return bollettinoParametroPersistence;
	}

	/**
	 * Sets the bollettino parametro persistence.
	 *
	 * @param bollettinoParametroPersistence the bollettino parametro persistence
	 */
	public void setBollettinoParametroPersistence(
		BollettinoParametroPersistence bollettinoParametroPersistence) {

		this.bollettinoParametroPersistence = bollettinoParametroPersistence;
	}

	/**
	 * Returns the bollettino sensore local service.
	 *
	 * @return the bollettino sensore local service
	 */
	public it.eng.bollettino.service.BollettinoSensoreLocalService
		getBollettinoSensoreLocalService() {

		return bollettinoSensoreLocalService;
	}

	/**
	 * Sets the bollettino sensore local service.
	 *
	 * @param bollettinoSensoreLocalService the bollettino sensore local service
	 */
	public void setBollettinoSensoreLocalService(
		it.eng.bollettino.service.BollettinoSensoreLocalService
			bollettinoSensoreLocalService) {

		this.bollettinoSensoreLocalService = bollettinoSensoreLocalService;
	}

	/**
	 * Returns the bollettino sensore persistence.
	 *
	 * @return the bollettino sensore persistence
	 */
	public BollettinoSensorePersistence getBollettinoSensorePersistence() {
		return bollettinoSensorePersistence;
	}

	/**
	 * Sets the bollettino sensore persistence.
	 *
	 * @param bollettinoSensorePersistence the bollettino sensore persistence
	 */
	public void setBollettinoSensorePersistence(
		BollettinoSensorePersistence bollettinoSensorePersistence) {

		this.bollettinoSensorePersistence = bollettinoSensorePersistence;
	}

	/**
	 * Returns the icona local service.
	 *
	 * @return the icona local service
	 */
	public it.eng.bollettino.service.IconaLocalService getIconaLocalService() {
		return iconaLocalService;
	}

	/**
	 * Sets the icona local service.
	 *
	 * @param iconaLocalService the icona local service
	 */
	public void setIconaLocalService(
		it.eng.bollettino.service.IconaLocalService iconaLocalService) {

		this.iconaLocalService = iconaLocalService;
	}

	/**
	 * Returns the icona persistence.
	 *
	 * @return the icona persistence
	 */
	public IconaPersistence getIconaPersistence() {
		return iconaPersistence;
	}

	/**
	 * Sets the icona persistence.
	 *
	 * @param iconaPersistence the icona persistence
	 */
	public void setIconaPersistence(IconaPersistence iconaPersistence) {
		this.iconaPersistence = iconaPersistence;
	}

	/**
	 * Returns the idrometro local service.
	 *
	 * @return the idrometro local service
	 */
	public it.eng.bollettino.service.IdrometroLocalService
		getIdrometroLocalService() {

		return idrometroLocalService;
	}

	/**
	 * Sets the idrometro local service.
	 *
	 * @param idrometroLocalService the idrometro local service
	 */
	public void setIdrometroLocalService(
		it.eng.bollettino.service.IdrometroLocalService idrometroLocalService) {

		this.idrometroLocalService = idrometroLocalService;
	}

	/**
	 * Returns the idrometro persistence.
	 *
	 * @return the idrometro persistence
	 */
	public IdrometroPersistence getIdrometroPersistence() {
		return idrometroPersistence;
	}

	/**
	 * Sets the idrometro persistence.
	 *
	 * @param idrometroPersistence the idrometro persistence
	 */
	public void setIdrometroPersistence(
		IdrometroPersistence idrometroPersistence) {

		this.idrometroPersistence = idrometroPersistence;
	}

	/**
	 * Returns the pluviometro local service.
	 *
	 * @return the pluviometro local service
	 */
	public it.eng.bollettino.service.PluviometroLocalService
		getPluviometroLocalService() {

		return pluviometroLocalService;
	}

	/**
	 * Sets the pluviometro local service.
	 *
	 * @param pluviometroLocalService the pluviometro local service
	 */
	public void setPluviometroLocalService(
		it.eng.bollettino.service.PluviometroLocalService
			pluviometroLocalService) {

		this.pluviometroLocalService = pluviometroLocalService;
	}

	/**
	 * Returns the pluviometro persistence.
	 *
	 * @return the pluviometro persistence
	 */
	public PluviometroPersistence getPluviometroPersistence() {
		return pluviometroPersistence;
	}

	/**
	 * Sets the pluviometro persistence.
	 *
	 * @param pluviometroPersistence the pluviometro persistence
	 */
	public void setPluviometroPersistence(
		PluviometroPersistence pluviometroPersistence) {

		this.pluviometroPersistence = pluviometroPersistence;
	}

	/**
	 * Returns the regola allarme local service.
	 *
	 * @return the regola allarme local service
	 */
	public it.eng.bollettino.service.RegolaAllarmeLocalService
		getRegolaAllarmeLocalService() {

		return regolaAllarmeLocalService;
	}

	/**
	 * Sets the regola allarme local service.
	 *
	 * @param regolaAllarmeLocalService the regola allarme local service
	 */
	public void setRegolaAllarmeLocalService(
		it.eng.bollettino.service.RegolaAllarmeLocalService
			regolaAllarmeLocalService) {

		this.regolaAllarmeLocalService = regolaAllarmeLocalService;
	}

	/**
	 * Returns the regola allarme persistence.
	 *
	 * @return the regola allarme persistence
	 */
	public RegolaAllarmePersistence getRegolaAllarmePersistence() {
		return regolaAllarmePersistence;
	}

	/**
	 * Sets the regola allarme persistence.
	 *
	 * @param regolaAllarmePersistence the regola allarme persistence
	 */
	public void setRegolaAllarmePersistence(
		RegolaAllarmePersistence regolaAllarmePersistence) {

		this.regolaAllarmePersistence = regolaAllarmePersistence;
	}

	/**
	 * Returns the regola allarme comune local service.
	 *
	 * @return the regola allarme comune local service
	 */
	public it.eng.bollettino.service.RegolaAllarmeComuneLocalService
		getRegolaAllarmeComuneLocalService() {

		return regolaAllarmeComuneLocalService;
	}

	/**
	 * Sets the regola allarme comune local service.
	 *
	 * @param regolaAllarmeComuneLocalService the regola allarme comune local service
	 */
	public void setRegolaAllarmeComuneLocalService(
		it.eng.bollettino.service.RegolaAllarmeComuneLocalService
			regolaAllarmeComuneLocalService) {

		this.regolaAllarmeComuneLocalService = regolaAllarmeComuneLocalService;
	}

	/**
	 * Returns the regola allarme comune persistence.
	 *
	 * @return the regola allarme comune persistence
	 */
	public RegolaAllarmeComunePersistence getRegolaAllarmeComunePersistence() {
		return regolaAllarmeComunePersistence;
	}

	/**
	 * Sets the regola allarme comune persistence.
	 *
	 * @param regolaAllarmeComunePersistence the regola allarme comune persistence
	 */
	public void setRegolaAllarmeComunePersistence(
		RegolaAllarmeComunePersistence regolaAllarmeComunePersistence) {

		this.regolaAllarmeComunePersistence = regolaAllarmeComunePersistence;
	}

	/**
	 * Returns the regola allarme condizione local service.
	 *
	 * @return the regola allarme condizione local service
	 */
	public it.eng.bollettino.service.RegolaAllarmeCondizioneLocalService
		getRegolaAllarmeCondizioneLocalService() {

		return regolaAllarmeCondizioneLocalService;
	}

	/**
	 * Sets the regola allarme condizione local service.
	 *
	 * @param regolaAllarmeCondizioneLocalService the regola allarme condizione local service
	 */
	public void setRegolaAllarmeCondizioneLocalService(
		it.eng.bollettino.service.RegolaAllarmeCondizioneLocalService
			regolaAllarmeCondizioneLocalService) {

		this.regolaAllarmeCondizioneLocalService =
			regolaAllarmeCondizioneLocalService;
	}

	/**
	 * Returns the regola allarme condizione persistence.
	 *
	 * @return the regola allarme condizione persistence
	 */
	public RegolaAllarmeCondizionePersistence
		getRegolaAllarmeCondizionePersistence() {

		return regolaAllarmeCondizionePersistence;
	}

	/**
	 * Sets the regola allarme condizione persistence.
	 *
	 * @param regolaAllarmeCondizionePersistence the regola allarme condizione persistence
	 */
	public void setRegolaAllarmeCondizionePersistence(
		RegolaAllarmeCondizionePersistence regolaAllarmeCondizionePersistence) {

		this.regolaAllarmeCondizionePersistence =
			regolaAllarmeCondizionePersistence;
	}

	/**
	 * Returns the stazione local service.
	 *
	 * @return the stazione local service
	 */
	public it.eng.bollettino.service.StazioneLocalService
		getStazioneLocalService() {

		return stazioneLocalService;
	}

	/**
	 * Sets the stazione local service.
	 *
	 * @param stazioneLocalService the stazione local service
	 */
	public void setStazioneLocalService(
		it.eng.bollettino.service.StazioneLocalService stazioneLocalService) {

		this.stazioneLocalService = stazioneLocalService;
	}

	/**
	 * Returns the stazione persistence.
	 *
	 * @return the stazione persistence
	 */
	public StazionePersistence getStazionePersistence() {
		return stazionePersistence;
	}

	/**
	 * Sets the stazione persistence.
	 *
	 * @param stazionePersistence the stazione persistence
	 */
	public void setStazionePersistence(
		StazionePersistence stazionePersistence) {

		this.stazionePersistence = stazionePersistence;
	}

	/**
	 * Returns the stazione variabile local service.
	 *
	 * @return the stazione variabile local service
	 */
	public it.eng.bollettino.service.StazioneVariabileLocalService
		getStazioneVariabileLocalService() {

		return stazioneVariabileLocalService;
	}

	/**
	 * Sets the stazione variabile local service.
	 *
	 * @param stazioneVariabileLocalService the stazione variabile local service
	 */
	public void setStazioneVariabileLocalService(
		it.eng.bollettino.service.StazioneVariabileLocalService
			stazioneVariabileLocalService) {

		this.stazioneVariabileLocalService = stazioneVariabileLocalService;
	}

	/**
	 * Returns the stazione variabile persistence.
	 *
	 * @return the stazione variabile persistence
	 */
	public StazioneVariabilePersistence getStazioneVariabilePersistence() {
		return stazioneVariabilePersistence;
	}

	/**
	 * Sets the stazione variabile persistence.
	 *
	 * @param stazioneVariabilePersistence the stazione variabile persistence
	 */
	public void setStazioneVariabilePersistence(
		StazioneVariabilePersistence stazioneVariabilePersistence) {

		this.stazioneVariabilePersistence = stazioneVariabilePersistence;
	}

	/**
	 * Returns the valore sensore local service.
	 *
	 * @return the valore sensore local service
	 */
	public it.eng.bollettino.service.ValoreSensoreLocalService
		getValoreSensoreLocalService() {

		return valoreSensoreLocalService;
	}

	/**
	 * Sets the valore sensore local service.
	 *
	 * @param valoreSensoreLocalService the valore sensore local service
	 */
	public void setValoreSensoreLocalService(
		it.eng.bollettino.service.ValoreSensoreLocalService
			valoreSensoreLocalService) {

		this.valoreSensoreLocalService = valoreSensoreLocalService;
	}

	/**
	 * Returns the valore sensore persistence.
	 *
	 * @return the valore sensore persistence
	 */
	public ValoreSensorePersistence getValoreSensorePersistence() {
		return valoreSensorePersistence;
	}

	/**
	 * Sets the valore sensore persistence.
	 *
	 * @param valoreSensorePersistence the valore sensore persistence
	 */
	public void setValoreSensorePersistence(
		ValoreSensorePersistence valoreSensorePersistence) {

		this.valoreSensorePersistence = valoreSensorePersistence;
	}

	/**
	 * Returns the variabile local service.
	 *
	 * @return the variabile local service
	 */
	public it.eng.bollettino.service.VariabileLocalService
		getVariabileLocalService() {

		return variabileLocalService;
	}

	/**
	 * Sets the variabile local service.
	 *
	 * @param variabileLocalService the variabile local service
	 */
	public void setVariabileLocalService(
		it.eng.bollettino.service.VariabileLocalService variabileLocalService) {

		this.variabileLocalService = variabileLocalService;
	}

	/**
	 * Returns the variabile persistence.
	 *
	 * @return the variabile persistence
	 */
	public VariabilePersistence getVariabilePersistence() {
		return variabilePersistence;
	}

	/**
	 * Sets the variabile persistence.
	 *
	 * @param variabilePersistence the variabile persistence
	 */
	public void setVariabilePersistence(
		VariabilePersistence variabilePersistence) {

		this.variabilePersistence = variabilePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService
		getCounterLocalService() {

		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService
			counterLocalService) {

		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService
		getClassNameLocalService() {

		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService
			classNameLocalService) {

		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {

		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService
		getResourceLocalService() {

		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService
			resourceLocalService) {

		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService
		getUserLocalService() {

		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {

		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the asset entry local service.
	 *
	 * @return the asset entry local service
	 */
	public com.liferay.asset.kernel.service.AssetEntryLocalService
		getAssetEntryLocalService() {

		return assetEntryLocalService;
	}

	/**
	 * Sets the asset entry local service.
	 *
	 * @param assetEntryLocalService the asset entry local service
	 */
	public void setAssetEntryLocalService(
		com.liferay.asset.kernel.service.AssetEntryLocalService
			assetEntryLocalService) {

		this.assetEntryLocalService = assetEntryLocalService;
	}

	/**
	 * Returns the asset entry persistence.
	 *
	 * @return the asset entry persistence
	 */
	public AssetEntryPersistence getAssetEntryPersistence() {
		return assetEntryPersistence;
	}

	/**
	 * Sets the asset entry persistence.
	 *
	 * @param assetEntryPersistence the asset entry persistence
	 */
	public void setAssetEntryPersistence(
		AssetEntryPersistence assetEntryPersistence) {

		this.assetEntryPersistence = assetEntryPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register(
			"it.eng.bollettino.model.Bollettino", bollettinoLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"it.eng.bollettino.model.Bollettino");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return BollettinoLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return Bollettino.class;
	}

	protected String getModelClassName() {
		return Bollettino.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = bollettinoPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = it.eng.bollettino.service.AllarmeLocalService.class)
	protected it.eng.bollettino.service.AllarmeLocalService allarmeLocalService;

	@BeanReference(type = AllarmePersistence.class)
	protected AllarmePersistence allarmePersistence;

	@BeanReference(
		type = it.eng.bollettino.service.AttivazioneFiumeLocalService.class
	)
	protected it.eng.bollettino.service.AttivazioneFiumeLocalService
		attivazioneFiumeLocalService;

	@BeanReference(type = AttivazioneFiumePersistence.class)
	protected AttivazioneFiumePersistence attivazioneFiumePersistence;

	@BeanReference(type = it.eng.bollettino.service.BacinoLocalService.class)
	protected it.eng.bollettino.service.BacinoLocalService bacinoLocalService;

	@BeanReference(type = BacinoPersistence.class)
	protected BacinoPersistence bacinoPersistence;

	@BeanReference(type = BollettinoLocalService.class)
	protected BollettinoLocalService bollettinoLocalService;

	@BeanReference(type = BollettinoPersistence.class)
	protected BollettinoPersistence bollettinoPersistence;

	@BeanReference(type = BollettinoFinder.class)
	protected BollettinoFinder bollettinoFinder;

	@BeanReference(
		type = it.eng.bollettino.service.BollettinoBacinoLocalService.class
	)
	protected it.eng.bollettino.service.BollettinoBacinoLocalService
		bollettinoBacinoLocalService;

	@BeanReference(type = BollettinoBacinoPersistence.class)
	protected BollettinoBacinoPersistence bollettinoBacinoPersistence;

	@BeanReference(
		type = it.eng.bollettino.service.BollettinoIconaLocalService.class
	)
	protected it.eng.bollettino.service.BollettinoIconaLocalService
		bollettinoIconaLocalService;

	@BeanReference(type = BollettinoIconaPersistence.class)
	protected BollettinoIconaPersistence bollettinoIconaPersistence;

	@BeanReference(
		type = it.eng.bollettino.service.BollettinoParametroLocalService.class
	)
	protected it.eng.bollettino.service.BollettinoParametroLocalService
		bollettinoParametroLocalService;

	@BeanReference(type = BollettinoParametroPersistence.class)
	protected BollettinoParametroPersistence bollettinoParametroPersistence;

	@BeanReference(
		type = it.eng.bollettino.service.BollettinoSensoreLocalService.class
	)
	protected it.eng.bollettino.service.BollettinoSensoreLocalService
		bollettinoSensoreLocalService;

	@BeanReference(type = BollettinoSensorePersistence.class)
	protected BollettinoSensorePersistence bollettinoSensorePersistence;

	@BeanReference(type = it.eng.bollettino.service.IconaLocalService.class)
	protected it.eng.bollettino.service.IconaLocalService iconaLocalService;

	@BeanReference(type = IconaPersistence.class)
	protected IconaPersistence iconaPersistence;

	@BeanReference(type = it.eng.bollettino.service.IdrometroLocalService.class)
	protected it.eng.bollettino.service.IdrometroLocalService
		idrometroLocalService;

	@BeanReference(type = IdrometroPersistence.class)
	protected IdrometroPersistence idrometroPersistence;

	@BeanReference(
		type = it.eng.bollettino.service.PluviometroLocalService.class
	)
	protected it.eng.bollettino.service.PluviometroLocalService
		pluviometroLocalService;

	@BeanReference(type = PluviometroPersistence.class)
	protected PluviometroPersistence pluviometroPersistence;

	@BeanReference(
		type = it.eng.bollettino.service.RegolaAllarmeLocalService.class
	)
	protected it.eng.bollettino.service.RegolaAllarmeLocalService
		regolaAllarmeLocalService;

	@BeanReference(type = RegolaAllarmePersistence.class)
	protected RegolaAllarmePersistence regolaAllarmePersistence;

	@BeanReference(
		type = it.eng.bollettino.service.RegolaAllarmeComuneLocalService.class
	)
	protected it.eng.bollettino.service.RegolaAllarmeComuneLocalService
		regolaAllarmeComuneLocalService;

	@BeanReference(type = RegolaAllarmeComunePersistence.class)
	protected RegolaAllarmeComunePersistence regolaAllarmeComunePersistence;

	@BeanReference(
		type = it.eng.bollettino.service.RegolaAllarmeCondizioneLocalService.class
	)
	protected it.eng.bollettino.service.RegolaAllarmeCondizioneLocalService
		regolaAllarmeCondizioneLocalService;

	@BeanReference(type = RegolaAllarmeCondizionePersistence.class)
	protected RegolaAllarmeCondizionePersistence
		regolaAllarmeCondizionePersistence;

	@BeanReference(type = it.eng.bollettino.service.StazioneLocalService.class)
	protected it.eng.bollettino.service.StazioneLocalService
		stazioneLocalService;

	@BeanReference(type = StazionePersistence.class)
	protected StazionePersistence stazionePersistence;

	@BeanReference(
		type = it.eng.bollettino.service.StazioneVariabileLocalService.class
	)
	protected it.eng.bollettino.service.StazioneVariabileLocalService
		stazioneVariabileLocalService;

	@BeanReference(type = StazioneVariabilePersistence.class)
	protected StazioneVariabilePersistence stazioneVariabilePersistence;

	@BeanReference(
		type = it.eng.bollettino.service.ValoreSensoreLocalService.class
	)
	protected it.eng.bollettino.service.ValoreSensoreLocalService
		valoreSensoreLocalService;

	@BeanReference(type = ValoreSensorePersistence.class)
	protected ValoreSensorePersistence valoreSensorePersistence;

	@BeanReference(type = it.eng.bollettino.service.VariabileLocalService.class)
	protected it.eng.bollettino.service.VariabileLocalService
		variabileLocalService;

	@BeanReference(type = VariabilePersistence.class)
	protected VariabilePersistence variabilePersistence;

	@ServiceReference(
		type = com.liferay.counter.kernel.service.CounterLocalService.class
	)
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ClassNameLocalService.class
	)
	protected com.liferay.portal.kernel.service.ClassNameLocalService
		classNameLocalService;

	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ResourceLocalService.class
	)
	protected com.liferay.portal.kernel.service.ResourceLocalService
		resourceLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.UserLocalService.class
	)
	protected com.liferay.portal.kernel.service.UserLocalService
		userLocalService;

	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;

	@ServiceReference(
		type = com.liferay.asset.kernel.service.AssetEntryLocalService.class
	)
	protected com.liferay.asset.kernel.service.AssetEntryLocalService
		assetEntryLocalService;

	@ServiceReference(type = AssetEntryPersistence.class)
	protected AssetEntryPersistence assetEntryPersistence;

	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry
		persistedModelLocalServiceRegistry;

}