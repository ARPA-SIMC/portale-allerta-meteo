/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.parer.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.transaction.Transactional;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import it.eng.parer.model.DatiSpecificiInvio;
import it.eng.parer.service.DatiSpecificiInvioLocalService;
import it.eng.parer.service.persistence.ComponentiInvioPersistence;
import it.eng.parer.service.persistence.DatiSpecificiInvioPersistence;
import it.eng.parer.service.persistence.DocumentiCollegatiPersistence;
import it.eng.parer.service.persistence.ParametriPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the dati specifici invio local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link it.eng.parer.service.impl.DatiSpecificiInvioLocalServiceImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see it.eng.parer.service.impl.DatiSpecificiInvioLocalServiceImpl
 * @generated
 */
@ProviderType
public abstract class DatiSpecificiInvioLocalServiceBaseImpl
	extends BaseLocalServiceImpl
	implements DatiSpecificiInvioLocalService, IdentifiableOSGiService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>DatiSpecificiInvioLocalService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>it.eng.parer.service.DatiSpecificiInvioLocalServiceUtil</code>.
	 */

	/**
	 * Adds the dati specifici invio to the database. Also notifies the appropriate model listeners.
	 *
	 * @param datiSpecificiInvio the dati specifici invio
	 * @return the dati specifici invio that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public DatiSpecificiInvio addDatiSpecificiInvio(
		DatiSpecificiInvio datiSpecificiInvio) {

		datiSpecificiInvio.setNew(true);

		return datiSpecificiInvioPersistence.update(datiSpecificiInvio);
	}

	/**
	 * Creates a new dati specifici invio with the primary key. Does not add the dati specifici invio to the database.
	 *
	 * @param ID_INVIO the primary key for the new dati specifici invio
	 * @return the new dati specifici invio
	 */
	@Override
	@Transactional(enabled = false)
	public DatiSpecificiInvio createDatiSpecificiInvio(long ID_INVIO) {
		return datiSpecificiInvioPersistence.create(ID_INVIO);
	}

	/**
	 * Deletes the dati specifici invio with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param ID_INVIO the primary key of the dati specifici invio
	 * @return the dati specifici invio that was removed
	 * @throws PortalException if a dati specifici invio with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public DatiSpecificiInvio deleteDatiSpecificiInvio(long ID_INVIO)
		throws PortalException {

		return datiSpecificiInvioPersistence.remove(ID_INVIO);
	}

	/**
	 * Deletes the dati specifici invio from the database. Also notifies the appropriate model listeners.
	 *
	 * @param datiSpecificiInvio the dati specifici invio
	 * @return the dati specifici invio that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public DatiSpecificiInvio deleteDatiSpecificiInvio(
		DatiSpecificiInvio datiSpecificiInvio) {

		return datiSpecificiInvioPersistence.remove(datiSpecificiInvio);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(
			DatiSpecificiInvio.class, clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return datiSpecificiInvioPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.parer.model.impl.DatiSpecificiInvioModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(
		DynamicQuery dynamicQuery, int start, int end) {

		return datiSpecificiInvioPersistence.findWithDynamicQuery(
			dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.parer.model.impl.DatiSpecificiInvioModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(
		DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator<T> orderByComparator) {

		return datiSpecificiInvioPersistence.findWithDynamicQuery(
			dynamicQuery, start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return datiSpecificiInvioPersistence.countWithDynamicQuery(
			dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(
		DynamicQuery dynamicQuery, Projection projection) {

		return datiSpecificiInvioPersistence.countWithDynamicQuery(
			dynamicQuery, projection);
	}

	@Override
	public DatiSpecificiInvio fetchDatiSpecificiInvio(long ID_INVIO) {
		return datiSpecificiInvioPersistence.fetchByPrimaryKey(ID_INVIO);
	}

	/**
	 * Returns the dati specifici invio with the primary key.
	 *
	 * @param ID_INVIO the primary key of the dati specifici invio
	 * @return the dati specifici invio
	 * @throws PortalException if a dati specifici invio with the primary key could not be found
	 */
	@Override
	public DatiSpecificiInvio getDatiSpecificiInvio(long ID_INVIO)
		throws PortalException {

		return datiSpecificiInvioPersistence.findByPrimaryKey(ID_INVIO);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery =
			new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(
			datiSpecificiInvioLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(DatiSpecificiInvio.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("ID_INVIO");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery
		getIndexableActionableDynamicQuery() {

		IndexableActionableDynamicQuery indexableActionableDynamicQuery =
			new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(
			datiSpecificiInvioLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(DatiSpecificiInvio.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName("ID_INVIO");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {

		actionableDynamicQuery.setBaseLocalService(
			datiSpecificiInvioLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(DatiSpecificiInvio.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("ID_INVIO");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {

		return datiSpecificiInvioLocalService.deleteDatiSpecificiInvio(
			(DatiSpecificiInvio)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {

		return datiSpecificiInvioPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the dati specifici invios.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.parer.model.impl.DatiSpecificiInvioModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of dati specifici invios
	 * @param end the upper bound of the range of dati specifici invios (not inclusive)
	 * @return the range of dati specifici invios
	 */
	@Override
	public List<DatiSpecificiInvio> getDatiSpecificiInvios(int start, int end) {
		return datiSpecificiInvioPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of dati specifici invios.
	 *
	 * @return the number of dati specifici invios
	 */
	@Override
	public int getDatiSpecificiInviosCount() {
		return datiSpecificiInvioPersistence.countAll();
	}

	/**
	 * Updates the dati specifici invio in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param datiSpecificiInvio the dati specifici invio
	 * @return the dati specifici invio that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public DatiSpecificiInvio updateDatiSpecificiInvio(
		DatiSpecificiInvio datiSpecificiInvio) {

		return datiSpecificiInvioPersistence.update(datiSpecificiInvio);
	}

	/**
	 * Returns the componenti invio local service.
	 *
	 * @return the componenti invio local service
	 */
	public it.eng.parer.service.ComponentiInvioLocalService
		getComponentiInvioLocalService() {

		return componentiInvioLocalService;
	}

	/**
	 * Sets the componenti invio local service.
	 *
	 * @param componentiInvioLocalService the componenti invio local service
	 */
	public void setComponentiInvioLocalService(
		it.eng.parer.service.ComponentiInvioLocalService
			componentiInvioLocalService) {

		this.componentiInvioLocalService = componentiInvioLocalService;
	}

	/**
	 * Returns the componenti invio persistence.
	 *
	 * @return the componenti invio persistence
	 */
	public ComponentiInvioPersistence getComponentiInvioPersistence() {
		return componentiInvioPersistence;
	}

	/**
	 * Sets the componenti invio persistence.
	 *
	 * @param componentiInvioPersistence the componenti invio persistence
	 */
	public void setComponentiInvioPersistence(
		ComponentiInvioPersistence componentiInvioPersistence) {

		this.componentiInvioPersistence = componentiInvioPersistence;
	}

	/**
	 * Returns the dati specifici invio local service.
	 *
	 * @return the dati specifici invio local service
	 */
	public DatiSpecificiInvioLocalService getDatiSpecificiInvioLocalService() {
		return datiSpecificiInvioLocalService;
	}

	/**
	 * Sets the dati specifici invio local service.
	 *
	 * @param datiSpecificiInvioLocalService the dati specifici invio local service
	 */
	public void setDatiSpecificiInvioLocalService(
		DatiSpecificiInvioLocalService datiSpecificiInvioLocalService) {

		this.datiSpecificiInvioLocalService = datiSpecificiInvioLocalService;
	}

	/**
	 * Returns the dati specifici invio persistence.
	 *
	 * @return the dati specifici invio persistence
	 */
	public DatiSpecificiInvioPersistence getDatiSpecificiInvioPersistence() {
		return datiSpecificiInvioPersistence;
	}

	/**
	 * Sets the dati specifici invio persistence.
	 *
	 * @param datiSpecificiInvioPersistence the dati specifici invio persistence
	 */
	public void setDatiSpecificiInvioPersistence(
		DatiSpecificiInvioPersistence datiSpecificiInvioPersistence) {

		this.datiSpecificiInvioPersistence = datiSpecificiInvioPersistence;
	}

	/**
	 * Returns the documenti collegati local service.
	 *
	 * @return the documenti collegati local service
	 */
	public it.eng.parer.service.DocumentiCollegatiLocalService
		getDocumentiCollegatiLocalService() {

		return documentiCollegatiLocalService;
	}

	/**
	 * Sets the documenti collegati local service.
	 *
	 * @param documentiCollegatiLocalService the documenti collegati local service
	 */
	public void setDocumentiCollegatiLocalService(
		it.eng.parer.service.DocumentiCollegatiLocalService
			documentiCollegatiLocalService) {

		this.documentiCollegatiLocalService = documentiCollegatiLocalService;
	}

	/**
	 * Returns the documenti collegati persistence.
	 *
	 * @return the documenti collegati persistence
	 */
	public DocumentiCollegatiPersistence getDocumentiCollegatiPersistence() {
		return documentiCollegatiPersistence;
	}

	/**
	 * Sets the documenti collegati persistence.
	 *
	 * @param documentiCollegatiPersistence the documenti collegati persistence
	 */
	public void setDocumentiCollegatiPersistence(
		DocumentiCollegatiPersistence documentiCollegatiPersistence) {

		this.documentiCollegatiPersistence = documentiCollegatiPersistence;
	}

	/**
	 * Returns the parametri local service.
	 *
	 * @return the parametri local service
	 */
	public it.eng.parer.service.ParametriLocalService
		getParametriLocalService() {

		return parametriLocalService;
	}

	/**
	 * Sets the parametri local service.
	 *
	 * @param parametriLocalService the parametri local service
	 */
	public void setParametriLocalService(
		it.eng.parer.service.ParametriLocalService parametriLocalService) {

		this.parametriLocalService = parametriLocalService;
	}

	/**
	 * Returns the parametri persistence.
	 *
	 * @return the parametri persistence
	 */
	public ParametriPersistence getParametriPersistence() {
		return parametriPersistence;
	}

	/**
	 * Sets the parametri persistence.
	 *
	 * @param parametriPersistence the parametri persistence
	 */
	public void setParametriPersistence(
		ParametriPersistence parametriPersistence) {

		this.parametriPersistence = parametriPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService
		getCounterLocalService() {

		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService
			counterLocalService) {

		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService
		getClassNameLocalService() {

		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService
			classNameLocalService) {

		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {

		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService
		getResourceLocalService() {

		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService
			resourceLocalService) {

		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService
		getUserLocalService() {

		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {

		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register(
			"it.eng.parer.model.DatiSpecificiInvio",
			datiSpecificiInvioLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"it.eng.parer.model.DatiSpecificiInvio");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return DatiSpecificiInvioLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return DatiSpecificiInvio.class;
	}

	protected String getModelClassName() {
		return DatiSpecificiInvio.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource =
				datiSpecificiInvioPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(
		type = it.eng.parer.service.ComponentiInvioLocalService.class
	)
	protected it.eng.parer.service.ComponentiInvioLocalService
		componentiInvioLocalService;

	@BeanReference(type = ComponentiInvioPersistence.class)
	protected ComponentiInvioPersistence componentiInvioPersistence;

	@BeanReference(type = DatiSpecificiInvioLocalService.class)
	protected DatiSpecificiInvioLocalService datiSpecificiInvioLocalService;

	@BeanReference(type = DatiSpecificiInvioPersistence.class)
	protected DatiSpecificiInvioPersistence datiSpecificiInvioPersistence;

	@BeanReference(
		type = it.eng.parer.service.DocumentiCollegatiLocalService.class
	)
	protected it.eng.parer.service.DocumentiCollegatiLocalService
		documentiCollegatiLocalService;

	@BeanReference(type = DocumentiCollegatiPersistence.class)
	protected DocumentiCollegatiPersistence documentiCollegatiPersistence;

	@BeanReference(type = it.eng.parer.service.ParametriLocalService.class)
	protected it.eng.parer.service.ParametriLocalService parametriLocalService;

	@BeanReference(type = ParametriPersistence.class)
	protected ParametriPersistence parametriPersistence;

	@ServiceReference(
		type = com.liferay.counter.kernel.service.CounterLocalService.class
	)
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ClassNameLocalService.class
	)
	protected com.liferay.portal.kernel.service.ClassNameLocalService
		classNameLocalService;

	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ResourceLocalService.class
	)
	protected com.liferay.portal.kernel.service.ResourceLocalService
		resourceLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.UserLocalService.class
	)
	protected com.liferay.portal.kernel.service.UserLocalService
		userLocalService;

	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;

	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry
		persistedModelLocalServiceRegistry;

}