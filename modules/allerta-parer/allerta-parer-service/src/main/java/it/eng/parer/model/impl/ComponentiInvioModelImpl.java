/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.parer.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.parer.model.ComponentiInvio;
import it.eng.parer.model.ComponentiInvioModel;
import it.eng.parer.model.ComponentiInvioSoap;
import it.eng.parer.service.persistence.ComponentiInvioPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ComponentiInvio service. Represents a row in the &quot;parer_ComponentiInvio&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>ComponentiInvioModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ComponentiInvioImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see ComponentiInvioImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ComponentiInvioModelImpl
	extends BaseModelImpl<ComponentiInvio> implements ComponentiInvioModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a componenti invio model instance should use the <code>ComponentiInvio</code> interface instead.
	 */
	public static final String TABLE_NAME = "parer_ComponentiInvio";

	public static final Object[][] TABLE_COLUMNS = {
		{"ID_INVIO", Types.BIGINT}, {"ID_COMPONENTE", Types.BIGINT},
		{"ORDINE_PRESENTAZIONE", Types.BIGINT},
		{"TIPO_COMPONENTE", Types.VARCHAR},
		{"TIPO_SUPPORTO_COMPONENTE", Types.VARCHAR},
		{"NOME_COMPONENTE", Types.VARCHAR},
		{"FORMATO_FILE_VERSATO", Types.VARCHAR},
		{"HASH_VERSATO", Types.VARCHAR}, {"URN_VERSATO", Types.VARCHAR},
		{"ID_COMPONENTE_VERSATO", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ID_INVIO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ID_COMPONENTE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ORDINE_PRESENTAZIONE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("TIPO_COMPONENTE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TIPO_SUPPORTO_COMPONENTE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("NOME_COMPONENTE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMATO_FILE_VERSATO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("HASH_VERSATO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("URN_VERSATO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ID_COMPONENTE_VERSATO", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table parer_ComponentiInvio (ID_INVIO LONG not null,ID_COMPONENTE LONG not null,ORDINE_PRESENTAZIONE LONG,TIPO_COMPONENTE VARCHAR(75) null,TIPO_SUPPORTO_COMPONENTE VARCHAR(75) null,NOME_COMPONENTE VARCHAR(128) null,FORMATO_FILE_VERSATO VARCHAR(75) null,HASH_VERSATO VARCHAR(75) null,URN_VERSATO VARCHAR(128) null,ID_COMPONENTE_VERSATO LONG,primary key (ID_INVIO, ID_COMPONENTE))";

	public static final String TABLE_SQL_DROP =
		"drop table parer_ComponentiInvio";

	public static final String ORDER_BY_JPQL =
		" ORDER BY componentiInvio.id.ID_INVIO ASC, componentiInvio.id.ID_COMPONENTE ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY parer_ComponentiInvio.ID_INVIO ASC, parer_ComponentiInvio.ID_COMPONENTE ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.parer.model.ComponentiInvio"),
		false);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.parer.model.ComponentiInvio"),
		false);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.parer.model.ComponentiInvio"),
		true);

	public static final long ID_INVIO_COLUMN_BITMASK = 1L;

	public static final long ID_COMPONENTE_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ComponentiInvio toModel(ComponentiInvioSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ComponentiInvio model = new ComponentiInvioImpl();

		model.setID_INVIO(soapModel.getID_INVIO());
		model.setID_COMPONENTE(soapModel.getID_COMPONENTE());
		model.setORDINE_PRESENTAZIONE(soapModel.getORDINE_PRESENTAZIONE());
		model.setTIPO_COMPONENTE(soapModel.getTIPO_COMPONENTE());
		model.setTIPO_SUPPORTO_COMPONENTE(
			soapModel.getTIPO_SUPPORTO_COMPONENTE());
		model.setNOME_COMPONENTE(soapModel.getNOME_COMPONENTE());
		model.setFORMATO_FILE_VERSATO(soapModel.getFORMATO_FILE_VERSATO());
		model.setHASH_VERSATO(soapModel.getHASH_VERSATO());
		model.setURN_VERSATO(soapModel.getURN_VERSATO());
		model.setID_COMPONENTE_VERSATO(soapModel.getID_COMPONENTE_VERSATO());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ComponentiInvio> toModels(
		ComponentiInvioSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<ComponentiInvio> models = new ArrayList<ComponentiInvio>(
			soapModels.length);

		for (ComponentiInvioSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.parer.model.ComponentiInvio"));

	public ComponentiInvioModelImpl() {
	}

	@Override
	public ComponentiInvioPK getPrimaryKey() {
		return new ComponentiInvioPK(_ID_INVIO, _ID_COMPONENTE);
	}

	@Override
	public void setPrimaryKey(ComponentiInvioPK primaryKey) {
		setID_INVIO(primaryKey.ID_INVIO);
		setID_COMPONENTE(primaryKey.ID_COMPONENTE);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ComponentiInvioPK(_ID_INVIO, _ID_COMPONENTE);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ComponentiInvioPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ComponentiInvio.class;
	}

	@Override
	public String getModelClassName() {
		return ComponentiInvio.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ComponentiInvio, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ComponentiInvio, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ComponentiInvio, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ComponentiInvio)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ComponentiInvio, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ComponentiInvio, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ComponentiInvio)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ComponentiInvio, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ComponentiInvio, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<ComponentiInvio, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ComponentiInvio, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ComponentiInvio, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<ComponentiInvio, Object>>();
		Map<String, BiConsumer<ComponentiInvio, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<ComponentiInvio, ?>>();

		attributeGetterFunctions.put(
			"ID_INVIO",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getID_INVIO();
				}

			});
		attributeSetterBiConsumers.put(
			"ID_INVIO",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio, Object ID_INVIO) {

					componentiInvio.setID_INVIO((Long)ID_INVIO);
				}

			});
		attributeGetterFunctions.put(
			"ID_COMPONENTE",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getID_COMPONENTE();
				}

			});
		attributeSetterBiConsumers.put(
			"ID_COMPONENTE",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio, Object ID_COMPONENTE) {

					componentiInvio.setID_COMPONENTE((Long)ID_COMPONENTE);
				}

			});
		attributeGetterFunctions.put(
			"ORDINE_PRESENTAZIONE",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getORDINE_PRESENTAZIONE();
				}

			});
		attributeSetterBiConsumers.put(
			"ORDINE_PRESENTAZIONE",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio,
					Object ORDINE_PRESENTAZIONE) {

					componentiInvio.setORDINE_PRESENTAZIONE(
						(Long)ORDINE_PRESENTAZIONE);
				}

			});
		attributeGetterFunctions.put(
			"TIPO_COMPONENTE",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getTIPO_COMPONENTE();
				}

			});
		attributeSetterBiConsumers.put(
			"TIPO_COMPONENTE",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio, Object TIPO_COMPONENTE) {

					componentiInvio.setTIPO_COMPONENTE((String)TIPO_COMPONENTE);
				}

			});
		attributeGetterFunctions.put(
			"TIPO_SUPPORTO_COMPONENTE",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getTIPO_SUPPORTO_COMPONENTE();
				}

			});
		attributeSetterBiConsumers.put(
			"TIPO_SUPPORTO_COMPONENTE",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio,
					Object TIPO_SUPPORTO_COMPONENTE) {

					componentiInvio.setTIPO_SUPPORTO_COMPONENTE(
						(String)TIPO_SUPPORTO_COMPONENTE);
				}

			});
		attributeGetterFunctions.put(
			"NOME_COMPONENTE",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getNOME_COMPONENTE();
				}

			});
		attributeSetterBiConsumers.put(
			"NOME_COMPONENTE",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio, Object NOME_COMPONENTE) {

					componentiInvio.setNOME_COMPONENTE((String)NOME_COMPONENTE);
				}

			});
		attributeGetterFunctions.put(
			"FORMATO_FILE_VERSATO",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getFORMATO_FILE_VERSATO();
				}

			});
		attributeSetterBiConsumers.put(
			"FORMATO_FILE_VERSATO",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio,
					Object FORMATO_FILE_VERSATO) {

					componentiInvio.setFORMATO_FILE_VERSATO(
						(String)FORMATO_FILE_VERSATO);
				}

			});
		attributeGetterFunctions.put(
			"HASH_VERSATO",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getHASH_VERSATO();
				}

			});
		attributeSetterBiConsumers.put(
			"HASH_VERSATO",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio, Object HASH_VERSATO) {

					componentiInvio.setHASH_VERSATO((String)HASH_VERSATO);
				}

			});
		attributeGetterFunctions.put(
			"URN_VERSATO",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getURN_VERSATO();
				}

			});
		attributeSetterBiConsumers.put(
			"URN_VERSATO",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio, Object URN_VERSATO) {

					componentiInvio.setURN_VERSATO((String)URN_VERSATO);
				}

			});
		attributeGetterFunctions.put(
			"ID_COMPONENTE_VERSATO",
			new Function<ComponentiInvio, Object>() {

				@Override
				public Object apply(ComponentiInvio componentiInvio) {
					return componentiInvio.getID_COMPONENTE_VERSATO();
				}

			});
		attributeSetterBiConsumers.put(
			"ID_COMPONENTE_VERSATO",
			new BiConsumer<ComponentiInvio, Object>() {

				@Override
				public void accept(
					ComponentiInvio componentiInvio,
					Object ID_COMPONENTE_VERSATO) {

					componentiInvio.setID_COMPONENTE_VERSATO(
						(Long)ID_COMPONENTE_VERSATO);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getID_INVIO() {
		return _ID_INVIO;
	}

	@Override
	public void setID_INVIO(long ID_INVIO) {
		_columnBitmask |= ID_INVIO_COLUMN_BITMASK;

		if (!_setOriginalID_INVIO) {
			_setOriginalID_INVIO = true;

			_originalID_INVIO = _ID_INVIO;
		}

		_ID_INVIO = ID_INVIO;
	}

	public long getOriginalID_INVIO() {
		return _originalID_INVIO;
	}

	@JSON
	@Override
	public long getID_COMPONENTE() {
		return _ID_COMPONENTE;
	}

	@Override
	public void setID_COMPONENTE(long ID_COMPONENTE) {
		_ID_COMPONENTE = ID_COMPONENTE;
	}

	@JSON
	@Override
	public long getORDINE_PRESENTAZIONE() {
		return _ORDINE_PRESENTAZIONE;
	}

	@Override
	public void setORDINE_PRESENTAZIONE(long ORDINE_PRESENTAZIONE) {
		_ORDINE_PRESENTAZIONE = ORDINE_PRESENTAZIONE;
	}

	@JSON
	@Override
	public String getTIPO_COMPONENTE() {
		if (_TIPO_COMPONENTE == null) {
			return "";
		}
		else {
			return _TIPO_COMPONENTE;
		}
	}

	@Override
	public void setTIPO_COMPONENTE(String TIPO_COMPONENTE) {
		_TIPO_COMPONENTE = TIPO_COMPONENTE;
	}

	@JSON
	@Override
	public String getTIPO_SUPPORTO_COMPONENTE() {
		if (_TIPO_SUPPORTO_COMPONENTE == null) {
			return "";
		}
		else {
			return _TIPO_SUPPORTO_COMPONENTE;
		}
	}

	@Override
	public void setTIPO_SUPPORTO_COMPONENTE(String TIPO_SUPPORTO_COMPONENTE) {
		_TIPO_SUPPORTO_COMPONENTE = TIPO_SUPPORTO_COMPONENTE;
	}

	@JSON
	@Override
	public String getNOME_COMPONENTE() {
		if (_NOME_COMPONENTE == null) {
			return "";
		}
		else {
			return _NOME_COMPONENTE;
		}
	}

	@Override
	public void setNOME_COMPONENTE(String NOME_COMPONENTE) {
		_NOME_COMPONENTE = NOME_COMPONENTE;
	}

	@JSON
	@Override
	public String getFORMATO_FILE_VERSATO() {
		if (_FORMATO_FILE_VERSATO == null) {
			return "";
		}
		else {
			return _FORMATO_FILE_VERSATO;
		}
	}

	@Override
	public void setFORMATO_FILE_VERSATO(String FORMATO_FILE_VERSATO) {
		_FORMATO_FILE_VERSATO = FORMATO_FILE_VERSATO;
	}

	@JSON
	@Override
	public String getHASH_VERSATO() {
		if (_HASH_VERSATO == null) {
			return "";
		}
		else {
			return _HASH_VERSATO;
		}
	}

	@Override
	public void setHASH_VERSATO(String HASH_VERSATO) {
		_HASH_VERSATO = HASH_VERSATO;
	}

	@JSON
	@Override
	public String getURN_VERSATO() {
		if (_URN_VERSATO == null) {
			return "";
		}
		else {
			return _URN_VERSATO;
		}
	}

	@Override
	public void setURN_VERSATO(String URN_VERSATO) {
		_URN_VERSATO = URN_VERSATO;
	}

	@JSON
	@Override
	public long getID_COMPONENTE_VERSATO() {
		return _ID_COMPONENTE_VERSATO;
	}

	@Override
	public void setID_COMPONENTE_VERSATO(long ID_COMPONENTE_VERSATO) {
		_ID_COMPONENTE_VERSATO = ID_COMPONENTE_VERSATO;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ComponentiInvio toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ComponentiInvio)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ComponentiInvioImpl componentiInvioImpl = new ComponentiInvioImpl();

		componentiInvioImpl.setID_INVIO(getID_INVIO());
		componentiInvioImpl.setID_COMPONENTE(getID_COMPONENTE());
		componentiInvioImpl.setORDINE_PRESENTAZIONE(getORDINE_PRESENTAZIONE());
		componentiInvioImpl.setTIPO_COMPONENTE(getTIPO_COMPONENTE());
		componentiInvioImpl.setTIPO_SUPPORTO_COMPONENTE(
			getTIPO_SUPPORTO_COMPONENTE());
		componentiInvioImpl.setNOME_COMPONENTE(getNOME_COMPONENTE());
		componentiInvioImpl.setFORMATO_FILE_VERSATO(getFORMATO_FILE_VERSATO());
		componentiInvioImpl.setHASH_VERSATO(getHASH_VERSATO());
		componentiInvioImpl.setURN_VERSATO(getURN_VERSATO());
		componentiInvioImpl.setID_COMPONENTE_VERSATO(
			getID_COMPONENTE_VERSATO());

		componentiInvioImpl.resetOriginalValues();

		return componentiInvioImpl;
	}

	@Override
	public int compareTo(ComponentiInvio componentiInvio) {
		ComponentiInvioPK primaryKey = componentiInvio.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ComponentiInvio)) {
			return false;
		}

		ComponentiInvio componentiInvio = (ComponentiInvio)obj;

		ComponentiInvioPK primaryKey = componentiInvio.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ComponentiInvioModelImpl componentiInvioModelImpl = this;

		componentiInvioModelImpl._originalID_INVIO =
			componentiInvioModelImpl._ID_INVIO;

		componentiInvioModelImpl._setOriginalID_INVIO = false;

		componentiInvioModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ComponentiInvio> toCacheModel() {
		ComponentiInvioCacheModel componentiInvioCacheModel =
			new ComponentiInvioCacheModel();

		componentiInvioCacheModel.componentiInvioPK = getPrimaryKey();

		componentiInvioCacheModel.ID_INVIO = getID_INVIO();

		componentiInvioCacheModel.ID_COMPONENTE = getID_COMPONENTE();

		componentiInvioCacheModel.ORDINE_PRESENTAZIONE =
			getORDINE_PRESENTAZIONE();

		componentiInvioCacheModel.TIPO_COMPONENTE = getTIPO_COMPONENTE();

		String TIPO_COMPONENTE = componentiInvioCacheModel.TIPO_COMPONENTE;

		if ((TIPO_COMPONENTE != null) && (TIPO_COMPONENTE.length() == 0)) {
			componentiInvioCacheModel.TIPO_COMPONENTE = null;
		}

		componentiInvioCacheModel.TIPO_SUPPORTO_COMPONENTE =
			getTIPO_SUPPORTO_COMPONENTE();

		String TIPO_SUPPORTO_COMPONENTE =
			componentiInvioCacheModel.TIPO_SUPPORTO_COMPONENTE;

		if ((TIPO_SUPPORTO_COMPONENTE != null) &&
			(TIPO_SUPPORTO_COMPONENTE.length() == 0)) {

			componentiInvioCacheModel.TIPO_SUPPORTO_COMPONENTE = null;
		}

		componentiInvioCacheModel.NOME_COMPONENTE = getNOME_COMPONENTE();

		String NOME_COMPONENTE = componentiInvioCacheModel.NOME_COMPONENTE;

		if ((NOME_COMPONENTE != null) && (NOME_COMPONENTE.length() == 0)) {
			componentiInvioCacheModel.NOME_COMPONENTE = null;
		}

		componentiInvioCacheModel.FORMATO_FILE_VERSATO =
			getFORMATO_FILE_VERSATO();

		String FORMATO_FILE_VERSATO =
			componentiInvioCacheModel.FORMATO_FILE_VERSATO;

		if ((FORMATO_FILE_VERSATO != null) &&
			(FORMATO_FILE_VERSATO.length() == 0)) {

			componentiInvioCacheModel.FORMATO_FILE_VERSATO = null;
		}

		componentiInvioCacheModel.HASH_VERSATO = getHASH_VERSATO();

		String HASH_VERSATO = componentiInvioCacheModel.HASH_VERSATO;

		if ((HASH_VERSATO != null) && (HASH_VERSATO.length() == 0)) {
			componentiInvioCacheModel.HASH_VERSATO = null;
		}

		componentiInvioCacheModel.URN_VERSATO = getURN_VERSATO();

		String URN_VERSATO = componentiInvioCacheModel.URN_VERSATO;

		if ((URN_VERSATO != null) && (URN_VERSATO.length() == 0)) {
			componentiInvioCacheModel.URN_VERSATO = null;
		}

		componentiInvioCacheModel.ID_COMPONENTE_VERSATO =
			getID_COMPONENTE_VERSATO();

		return componentiInvioCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ComponentiInvio, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ComponentiInvio, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ComponentiInvio, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((ComponentiInvio)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ComponentiInvio, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ComponentiInvio, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ComponentiInvio, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ComponentiInvio)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		ComponentiInvio.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		ComponentiInvio.class, ModelWrapper.class
	};

	private long _ID_INVIO;

	private long _originalID_INVIO;
	private boolean _setOriginalID_INVIO;

	private long _ID_COMPONENTE;

	private long _ORDINE_PRESENTAZIONE;

	private String _TIPO_COMPONENTE;

	private String _TIPO_SUPPORTO_COMPONENTE;

	private String _NOME_COMPONENTE;

	private String _FORMATO_FILE_VERSATO;

	private String _HASH_VERSATO;

	private String _URN_VERSATO;

	private long _ID_COMPONENTE_VERSATO;

	private long _columnBitmask;
	private ComponentiInvio _escapedModel;

}