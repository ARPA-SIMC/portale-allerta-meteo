/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.parer.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.parer.model.DocumentiCollegati;
import it.eng.parer.model.DocumentiCollegatiModel;
import it.eng.parer.model.DocumentiCollegatiSoap;
import it.eng.parer.service.persistence.DocumentiCollegatiPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the DocumentiCollegati service. Represents a row in the &quot;parer_DocumentiCollegati&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>DocumentiCollegatiModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DocumentiCollegatiImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see DocumentiCollegatiImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class DocumentiCollegatiModelImpl
	extends BaseModelImpl<DocumentiCollegati>
	implements DocumentiCollegatiModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a documenti collegati model instance should use the <code>DocumentiCollegati</code> interface instead.
	 */
	public static final String TABLE_NAME = "parer_DocumentiCollegati";

	public static final Object[][] TABLE_COLUMNS = {
		{"DOC_COLLEGATO_NUMERO", Types.VARCHAR},
		{"DOC_COLLEGATO_ANNO", Types.INTEGER},
		{"DOC_COLLEGATO_TIPO_REGISTRO", Types.VARCHAR},
		{"DESCRIZIONE_COLLEGAMENTO", Types.VARCHAR}, {"ID_INVIO", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("DOC_COLLEGATO_NUMERO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DOC_COLLEGATO_ANNO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("DOC_COLLEGATO_TIPO_REGISTRO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DESCRIZIONE_COLLEGAMENTO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ID_INVIO", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table parer_DocumentiCollegati (DOC_COLLEGATO_NUMERO VARCHAR(75) not null,DOC_COLLEGATO_ANNO INTEGER not null,DOC_COLLEGATO_TIPO_REGISTRO VARCHAR(75) not null,DESCRIZIONE_COLLEGAMENTO TEXT null,ID_INVIO LONG not null,primary key (DOC_COLLEGATO_NUMERO, DOC_COLLEGATO_ANNO, DOC_COLLEGATO_TIPO_REGISTRO, ID_INVIO))";

	public static final String TABLE_SQL_DROP =
		"drop table parer_DocumentiCollegati";

	public static final String ORDER_BY_JPQL =
		" ORDER BY documentiCollegati.id.DOC_COLLEGATO_NUMERO ASC, documentiCollegati.id.DOC_COLLEGATO_ANNO ASC, documentiCollegati.id.DOC_COLLEGATO_TIPO_REGISTRO ASC, documentiCollegati.id.ID_INVIO ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY parer_DocumentiCollegati.DOC_COLLEGATO_NUMERO ASC, parer_DocumentiCollegati.DOC_COLLEGATO_ANNO ASC, parer_DocumentiCollegati.DOC_COLLEGATO_TIPO_REGISTRO ASC, parer_DocumentiCollegati.ID_INVIO ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.parer.model.DocumentiCollegati"),
		false);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.parer.model.DocumentiCollegati"),
		false);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.parer.model.DocumentiCollegati"),
		true);

	public static final long ID_INVIO_COLUMN_BITMASK = 1L;

	public static final long DOC_COLLEGATO_NUMERO_COLUMN_BITMASK = 2L;

	public static final long DOC_COLLEGATO_ANNO_COLUMN_BITMASK = 4L;

	public static final long DOC_COLLEGATO_TIPO_REGISTRO_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DocumentiCollegati toModel(DocumentiCollegatiSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DocumentiCollegati model = new DocumentiCollegatiImpl();

		model.setDOC_COLLEGATO_NUMERO(soapModel.getDOC_COLLEGATO_NUMERO());
		model.setDOC_COLLEGATO_ANNO(soapModel.getDOC_COLLEGATO_ANNO());
		model.setDOC_COLLEGATO_TIPO_REGISTRO(
			soapModel.getDOC_COLLEGATO_TIPO_REGISTRO());
		model.setDESCRIZIONE_COLLEGAMENTO(
			soapModel.getDESCRIZIONE_COLLEGAMENTO());
		model.setID_INVIO(soapModel.getID_INVIO());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DocumentiCollegati> toModels(
		DocumentiCollegatiSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<DocumentiCollegati> models = new ArrayList<DocumentiCollegati>(
			soapModels.length);

		for (DocumentiCollegatiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.allerta.parer.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.parer.model.DocumentiCollegati"));

	public DocumentiCollegatiModelImpl() {
	}

	@Override
	public DocumentiCollegatiPK getPrimaryKey() {
		return new DocumentiCollegatiPK(
			_DOC_COLLEGATO_NUMERO, _DOC_COLLEGATO_ANNO,
			_DOC_COLLEGATO_TIPO_REGISTRO, _ID_INVIO);
	}

	@Override
	public void setPrimaryKey(DocumentiCollegatiPK primaryKey) {
		setDOC_COLLEGATO_NUMERO(primaryKey.DOC_COLLEGATO_NUMERO);
		setDOC_COLLEGATO_ANNO(primaryKey.DOC_COLLEGATO_ANNO);
		setDOC_COLLEGATO_TIPO_REGISTRO(primaryKey.DOC_COLLEGATO_TIPO_REGISTRO);
		setID_INVIO(primaryKey.ID_INVIO);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new DocumentiCollegatiPK(
			_DOC_COLLEGATO_NUMERO, _DOC_COLLEGATO_ANNO,
			_DOC_COLLEGATO_TIPO_REGISTRO, _ID_INVIO);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((DocumentiCollegatiPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return DocumentiCollegati.class;
	}

	@Override
	public String getModelClassName() {
		return DocumentiCollegati.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<DocumentiCollegati, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<DocumentiCollegati, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DocumentiCollegati, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((DocumentiCollegati)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<DocumentiCollegati, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<DocumentiCollegati, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(DocumentiCollegati)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<DocumentiCollegati, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<DocumentiCollegati, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<DocumentiCollegati, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<DocumentiCollegati, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<DocumentiCollegati, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<DocumentiCollegati, Object>>();
		Map<String, BiConsumer<DocumentiCollegati, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<DocumentiCollegati, ?>>();

		attributeGetterFunctions.put(
			"DOC_COLLEGATO_NUMERO",
			new Function<DocumentiCollegati, Object>() {

				@Override
				public Object apply(DocumentiCollegati documentiCollegati) {
					return documentiCollegati.getDOC_COLLEGATO_NUMERO();
				}

			});
		attributeSetterBiConsumers.put(
			"DOC_COLLEGATO_NUMERO",
			new BiConsumer<DocumentiCollegati, Object>() {

				@Override
				public void accept(
					DocumentiCollegati documentiCollegati,
					Object DOC_COLLEGATO_NUMERO) {

					documentiCollegati.setDOC_COLLEGATO_NUMERO(
						(String)DOC_COLLEGATO_NUMERO);
				}

			});
		attributeGetterFunctions.put(
			"DOC_COLLEGATO_ANNO",
			new Function<DocumentiCollegati, Object>() {

				@Override
				public Object apply(DocumentiCollegati documentiCollegati) {
					return documentiCollegati.getDOC_COLLEGATO_ANNO();
				}

			});
		attributeSetterBiConsumers.put(
			"DOC_COLLEGATO_ANNO",
			new BiConsumer<DocumentiCollegati, Object>() {

				@Override
				public void accept(
					DocumentiCollegati documentiCollegati,
					Object DOC_COLLEGATO_ANNO) {

					documentiCollegati.setDOC_COLLEGATO_ANNO(
						(Integer)DOC_COLLEGATO_ANNO);
				}

			});
		attributeGetterFunctions.put(
			"DOC_COLLEGATO_TIPO_REGISTRO",
			new Function<DocumentiCollegati, Object>() {

				@Override
				public Object apply(DocumentiCollegati documentiCollegati) {
					return documentiCollegati.getDOC_COLLEGATO_TIPO_REGISTRO();
				}

			});
		attributeSetterBiConsumers.put(
			"DOC_COLLEGATO_TIPO_REGISTRO",
			new BiConsumer<DocumentiCollegati, Object>() {

				@Override
				public void accept(
					DocumentiCollegati documentiCollegati,
					Object DOC_COLLEGATO_TIPO_REGISTRO) {

					documentiCollegati.setDOC_COLLEGATO_TIPO_REGISTRO(
						(String)DOC_COLLEGATO_TIPO_REGISTRO);
				}

			});
		attributeGetterFunctions.put(
			"DESCRIZIONE_COLLEGAMENTO",
			new Function<DocumentiCollegati, Object>() {

				@Override
				public Object apply(DocumentiCollegati documentiCollegati) {
					return documentiCollegati.getDESCRIZIONE_COLLEGAMENTO();
				}

			});
		attributeSetterBiConsumers.put(
			"DESCRIZIONE_COLLEGAMENTO",
			new BiConsumer<DocumentiCollegati, Object>() {

				@Override
				public void accept(
					DocumentiCollegati documentiCollegati,
					Object DESCRIZIONE_COLLEGAMENTO) {

					documentiCollegati.setDESCRIZIONE_COLLEGAMENTO(
						(String)DESCRIZIONE_COLLEGAMENTO);
				}

			});
		attributeGetterFunctions.put(
			"ID_INVIO",
			new Function<DocumentiCollegati, Object>() {

				@Override
				public Object apply(DocumentiCollegati documentiCollegati) {
					return documentiCollegati.getID_INVIO();
				}

			});
		attributeSetterBiConsumers.put(
			"ID_INVIO",
			new BiConsumer<DocumentiCollegati, Object>() {

				@Override
				public void accept(
					DocumentiCollegati documentiCollegati, Object ID_INVIO) {

					documentiCollegati.setID_INVIO((Long)ID_INVIO);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getDOC_COLLEGATO_NUMERO() {
		if (_DOC_COLLEGATO_NUMERO == null) {
			return "";
		}
		else {
			return _DOC_COLLEGATO_NUMERO;
		}
	}

	@Override
	public void setDOC_COLLEGATO_NUMERO(String DOC_COLLEGATO_NUMERO) {
		_DOC_COLLEGATO_NUMERO = DOC_COLLEGATO_NUMERO;
	}

	@JSON
	@Override
	public int getDOC_COLLEGATO_ANNO() {
		return _DOC_COLLEGATO_ANNO;
	}

	@Override
	public void setDOC_COLLEGATO_ANNO(int DOC_COLLEGATO_ANNO) {
		_DOC_COLLEGATO_ANNO = DOC_COLLEGATO_ANNO;
	}

	@JSON
	@Override
	public String getDOC_COLLEGATO_TIPO_REGISTRO() {
		if (_DOC_COLLEGATO_TIPO_REGISTRO == null) {
			return "";
		}
		else {
			return _DOC_COLLEGATO_TIPO_REGISTRO;
		}
	}

	@Override
	public void setDOC_COLLEGATO_TIPO_REGISTRO(
		String DOC_COLLEGATO_TIPO_REGISTRO) {

		_DOC_COLLEGATO_TIPO_REGISTRO = DOC_COLLEGATO_TIPO_REGISTRO;
	}

	@JSON
	@Override
	public String getDESCRIZIONE_COLLEGAMENTO() {
		if (_DESCRIZIONE_COLLEGAMENTO == null) {
			return "";
		}
		else {
			return _DESCRIZIONE_COLLEGAMENTO;
		}
	}

	@Override
	public void setDESCRIZIONE_COLLEGAMENTO(String DESCRIZIONE_COLLEGAMENTO) {
		_DESCRIZIONE_COLLEGAMENTO = DESCRIZIONE_COLLEGAMENTO;
	}

	@JSON
	@Override
	public long getID_INVIO() {
		return _ID_INVIO;
	}

	@Override
	public void setID_INVIO(long ID_INVIO) {
		_columnBitmask |= ID_INVIO_COLUMN_BITMASK;

		if (!_setOriginalID_INVIO) {
			_setOriginalID_INVIO = true;

			_originalID_INVIO = _ID_INVIO;
		}

		_ID_INVIO = ID_INVIO;
	}

	public long getOriginalID_INVIO() {
		return _originalID_INVIO;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public DocumentiCollegati toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DocumentiCollegati)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DocumentiCollegatiImpl documentiCollegatiImpl =
			new DocumentiCollegatiImpl();

		documentiCollegatiImpl.setDOC_COLLEGATO_NUMERO(
			getDOC_COLLEGATO_NUMERO());
		documentiCollegatiImpl.setDOC_COLLEGATO_ANNO(getDOC_COLLEGATO_ANNO());
		documentiCollegatiImpl.setDOC_COLLEGATO_TIPO_REGISTRO(
			getDOC_COLLEGATO_TIPO_REGISTRO());
		documentiCollegatiImpl.setDESCRIZIONE_COLLEGAMENTO(
			getDESCRIZIONE_COLLEGAMENTO());
		documentiCollegatiImpl.setID_INVIO(getID_INVIO());

		documentiCollegatiImpl.resetOriginalValues();

		return documentiCollegatiImpl;
	}

	@Override
	public int compareTo(DocumentiCollegati documentiCollegati) {
		DocumentiCollegatiPK primaryKey = documentiCollegati.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DocumentiCollegati)) {
			return false;
		}

		DocumentiCollegati documentiCollegati = (DocumentiCollegati)obj;

		DocumentiCollegatiPK primaryKey = documentiCollegati.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		DocumentiCollegatiModelImpl documentiCollegatiModelImpl = this;

		documentiCollegatiModelImpl._originalID_INVIO =
			documentiCollegatiModelImpl._ID_INVIO;

		documentiCollegatiModelImpl._setOriginalID_INVIO = false;

		documentiCollegatiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DocumentiCollegati> toCacheModel() {
		DocumentiCollegatiCacheModel documentiCollegatiCacheModel =
			new DocumentiCollegatiCacheModel();

		documentiCollegatiCacheModel.documentiCollegatiPK = getPrimaryKey();

		documentiCollegatiCacheModel.DOC_COLLEGATO_NUMERO =
			getDOC_COLLEGATO_NUMERO();

		String DOC_COLLEGATO_NUMERO =
			documentiCollegatiCacheModel.DOC_COLLEGATO_NUMERO;

		if ((DOC_COLLEGATO_NUMERO != null) &&
			(DOC_COLLEGATO_NUMERO.length() == 0)) {

			documentiCollegatiCacheModel.DOC_COLLEGATO_NUMERO = null;
		}

		documentiCollegatiCacheModel.DOC_COLLEGATO_ANNO =
			getDOC_COLLEGATO_ANNO();

		documentiCollegatiCacheModel.DOC_COLLEGATO_TIPO_REGISTRO =
			getDOC_COLLEGATO_TIPO_REGISTRO();

		String DOC_COLLEGATO_TIPO_REGISTRO =
			documentiCollegatiCacheModel.DOC_COLLEGATO_TIPO_REGISTRO;

		if ((DOC_COLLEGATO_TIPO_REGISTRO != null) &&
			(DOC_COLLEGATO_TIPO_REGISTRO.length() == 0)) {

			documentiCollegatiCacheModel.DOC_COLLEGATO_TIPO_REGISTRO = null;
		}

		documentiCollegatiCacheModel.DESCRIZIONE_COLLEGAMENTO =
			getDESCRIZIONE_COLLEGAMENTO();

		String DESCRIZIONE_COLLEGAMENTO =
			documentiCollegatiCacheModel.DESCRIZIONE_COLLEGAMENTO;

		if ((DESCRIZIONE_COLLEGAMENTO != null) &&
			(DESCRIZIONE_COLLEGAMENTO.length() == 0)) {

			documentiCollegatiCacheModel.DESCRIZIONE_COLLEGAMENTO = null;
		}

		documentiCollegatiCacheModel.ID_INVIO = getID_INVIO();

		return documentiCollegatiCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<DocumentiCollegati, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<DocumentiCollegati, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DocumentiCollegati, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((DocumentiCollegati)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<DocumentiCollegati, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<DocumentiCollegati, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DocumentiCollegati, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((DocumentiCollegati)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		DocumentiCollegati.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		DocumentiCollegati.class, ModelWrapper.class
	};

	private String _DOC_COLLEGATO_NUMERO;

	private int _DOC_COLLEGATO_ANNO;

	private String _DOC_COLLEGATO_TIPO_REGISTRO;

	private String _DESCRIZIONE_COLLEGAMENTO;

	private long _ID_INVIO;

	private long _originalID_INVIO;
	private boolean _setOriginalID_INVIO;
	private long _columnBitmask;
	private DocumentiCollegati _escapedModel;

}