/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerte.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the RubricaLog service. Represents a row in the &quot;rubrica_RubricaLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>it.eng.allerte.model.impl.RubricaLogModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>it.eng.allerte.model.impl.RubricaLogImpl</code>.
 * </p>
 *
 * @author Pratola_L
 * @see RubricaLog
 * @generated
 */
@ProviderType
public interface RubricaLogModel extends BaseModel<RubricaLog> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a rubrica log model instance should use the {@link RubricaLog} interface instead.
	 */

	/**
	 * Returns the primary key of this rubrica log.
	 *
	 * @return the primary key of this rubrica log
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this rubrica log.
	 *
	 * @param primaryKey the primary key of this rubrica log
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the id_log of this rubrica log.
	 *
	 * @return the id_log of this rubrica log
	 */
	public long getID_LOG();

	/**
	 * Sets the id_log of this rubrica log.
	 *
	 * @param ID_LOG the id_log of this rubrica log
	 */
	public void setID_LOG(long ID_LOG);

	/**
	 * Returns the fk_sito_proprietario of this rubrica log.
	 *
	 * @return the fk_sito_proprietario of this rubrica log
	 */
	public long getFK_SITO_PROPRIETARIO();

	/**
	 * Sets the fk_sito_proprietario of this rubrica log.
	 *
	 * @param FK_SITO_PROPRIETARIO the fk_sito_proprietario of this rubrica log
	 */
	public void setFK_SITO_PROPRIETARIO(long FK_SITO_PROPRIETARIO);

	/**
	 * Returns the tabella of this rubrica log.
	 *
	 * @return the tabella of this rubrica log
	 */
	@AutoEscape
	public String getTABELLA();

	/**
	 * Sets the tabella of this rubrica log.
	 *
	 * @param TABELLA the tabella of this rubrica log
	 */
	public void setTABELLA(String TABELLA);

	/**
	 * Returns the tipo_operazione of this rubrica log.
	 *
	 * @return the tipo_operazione of this rubrica log
	 */
	@AutoEscape
	public String getTIPO_OPERAZIONE();

	/**
	 * Sets the tipo_operazione of this rubrica log.
	 *
	 * @param TIPO_OPERAZIONE the tipo_operazione of this rubrica log
	 */
	public void setTIPO_OPERAZIONE(String TIPO_OPERAZIONE);

	/**
	 * Returns the id_oggetto of this rubrica log.
	 *
	 * @return the id_oggetto of this rubrica log
	 */
	@AutoEscape
	public String getID_OGGETTO();

	/**
	 * Sets the id_oggetto of this rubrica log.
	 *
	 * @param ID_OGGETTO the id_oggetto of this rubrica log
	 */
	public void setID_OGGETTO(String ID_OGGETTO);

	/**
	 * Returns the nuova_descrizione of this rubrica log.
	 *
	 * @return the nuova_descrizione of this rubrica log
	 */
	@AutoEscape
	public String getNUOVA_DESCRIZIONE();

	/**
	 * Sets the nuova_descrizione of this rubrica log.
	 *
	 * @param NUOVA_DESCRIZIONE the nuova_descrizione of this rubrica log
	 */
	public void setNUOVA_DESCRIZIONE(String NUOVA_DESCRIZIONE);

	/**
	 * Returns the fk_utente_modifica of this rubrica log.
	 *
	 * @return the fk_utente_modifica of this rubrica log
	 */
	public long getFK_UTENTE_MODIFICA();

	/**
	 * Sets the fk_utente_modifica of this rubrica log.
	 *
	 * @param FK_UTENTE_MODIFICA the fk_utente_modifica of this rubrica log
	 */
	public void setFK_UTENTE_MODIFICA(long FK_UTENTE_MODIFICA);

	/**
	 * Returns the data_modifica of this rubrica log.
	 *
	 * @return the data_modifica of this rubrica log
	 */
	public Date getDATA_MODIFICA();

	/**
	 * Sets the data_modifica of this rubrica log.
	 *
	 * @param DATA_MODIFICA the data_modifica of this rubrica log
	 */
	public void setDATA_MODIFICA(Date DATA_MODIFICA);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(it.eng.allerte.model.RubricaLog rubricaLog);

	@Override
	public int hashCode();

	@Override
	public CacheModel<it.eng.allerte.model.RubricaLog> toCacheModel();

	@Override
	public it.eng.allerte.model.RubricaLog toEscapedModel();

	@Override
	public it.eng.allerte.model.RubricaLog toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();

}