/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerte.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.allerte.model.RubricaGruppo;
import it.eng.allerte.model.RubricaGruppoModel;
import it.eng.allerte.model.RubricaGruppoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the RubricaGruppo service. Represents a row in the &quot;rubrica_RubricaGruppo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>RubricaGruppoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RubricaGruppoImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see RubricaGruppoImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RubricaGruppoModelImpl
	extends BaseModelImpl<RubricaGruppo> implements RubricaGruppoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rubrica gruppo model instance should use the <code>RubricaGruppo</code> interface instead.
	 */
	public static final String TABLE_NAME = "rubrica_RubricaGruppo";

	public static final Object[][] TABLE_COLUMNS = {
		{"ID_GRUPPO", Types.BIGINT}, {"NOME", Types.VARCHAR},
		{"FK_SITO_PROPRIETARIO", Types.BIGINT}, {"NOTE", Types.VARCHAR},
		{"FK_UTENTE_CREAZIONE", Types.BIGINT},
		{"DATA_CREAZIONE", Types.TIMESTAMP},
		{"FK_UTENTE_MODIFICA", Types.BIGINT},
		{"DATA_MODIFICA", Types.TIMESTAMP}, {"DISABLED", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ID_GRUPPO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("NOME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FK_SITO_PROPRIETARIO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("NOTE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FK_UTENTE_CREAZIONE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DATA_CREAZIONE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("FK_UTENTE_MODIFICA", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DATA_MODIFICA", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("DISABLED", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table rubrica_RubricaGruppo (ID_GRUPPO LONG not null primary key,NOME VARCHAR(512) null,FK_SITO_PROPRIETARIO LONG,NOTE VARCHAR(2048) null,FK_UTENTE_CREAZIONE LONG,DATA_CREAZIONE DATE null,FK_UTENTE_MODIFICA LONG,DATA_MODIFICA DATE null,DISABLED BOOLEAN)";

	public static final String TABLE_SQL_DROP =
		"drop table rubrica_RubricaGruppo";

	public static final String ORDER_BY_JPQL =
		" ORDER BY rubricaGruppo.ID_GRUPPO ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY rubrica_RubricaGruppo.ID_GRUPPO ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.allerte.model.RubricaGruppo"),
		false);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.allerte.model.RubricaGruppo"),
		false);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.allerte.model.RubricaGruppo"),
		true);

	public static final long DISABLED_COLUMN_BITMASK = 1L;

	public static final long FK_SITO_PROPRIETARIO_COLUMN_BITMASK = 2L;

	public static final long ID_GRUPPO_COLUMN_BITMASK = 4L;

	public static final long NOME_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RubricaGruppo toModel(RubricaGruppoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		RubricaGruppo model = new RubricaGruppoImpl();

		model.setID_GRUPPO(soapModel.getID_GRUPPO());
		model.setNOME(soapModel.getNOME());
		model.setFK_SITO_PROPRIETARIO(soapModel.getFK_SITO_PROPRIETARIO());
		model.setNOTE(soapModel.getNOTE());
		model.setFK_UTENTE_CREAZIONE(soapModel.getFK_UTENTE_CREAZIONE());
		model.setDATA_CREAZIONE(soapModel.getDATA_CREAZIONE());
		model.setFK_UTENTE_MODIFICA(soapModel.getFK_UTENTE_MODIFICA());
		model.setDATA_MODIFICA(soapModel.getDATA_MODIFICA());
		model.setDISABLED(soapModel.isDISABLED());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RubricaGruppo> toModels(RubricaGruppoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<RubricaGruppo> models = new ArrayList<RubricaGruppo>(
			soapModels.length);

		for (RubricaGruppoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.rubrica.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.allerte.model.RubricaGruppo"));

	public RubricaGruppoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ID_GRUPPO;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setID_GRUPPO(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ID_GRUPPO;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RubricaGruppo.class;
	}

	@Override
	public String getModelClassName() {
		return RubricaGruppo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<RubricaGruppo, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<RubricaGruppo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppo, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((RubricaGruppo)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<RubricaGruppo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<RubricaGruppo, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(RubricaGruppo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<RubricaGruppo, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<RubricaGruppo, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<RubricaGruppo, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<RubricaGruppo, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<RubricaGruppo, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<RubricaGruppo, Object>>();
		Map<String, BiConsumer<RubricaGruppo, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<RubricaGruppo, ?>>();

		attributeGetterFunctions.put(
			"ID_GRUPPO",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getID_GRUPPO();
				}

			});
		attributeSetterBiConsumers.put(
			"ID_GRUPPO",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(
					RubricaGruppo rubricaGruppo, Object ID_GRUPPO) {

					rubricaGruppo.setID_GRUPPO((Long)ID_GRUPPO);
				}

			});
		attributeGetterFunctions.put(
			"NOME",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getNOME();
				}

			});
		attributeSetterBiConsumers.put(
			"NOME",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(RubricaGruppo rubricaGruppo, Object NOME) {
					rubricaGruppo.setNOME((String)NOME);
				}

			});
		attributeGetterFunctions.put(
			"FK_SITO_PROPRIETARIO",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getFK_SITO_PROPRIETARIO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_SITO_PROPRIETARIO",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(
					RubricaGruppo rubricaGruppo, Object FK_SITO_PROPRIETARIO) {

					rubricaGruppo.setFK_SITO_PROPRIETARIO(
						(Long)FK_SITO_PROPRIETARIO);
				}

			});
		attributeGetterFunctions.put(
			"NOTE",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getNOTE();
				}

			});
		attributeSetterBiConsumers.put(
			"NOTE",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(RubricaGruppo rubricaGruppo, Object NOTE) {
					rubricaGruppo.setNOTE((String)NOTE);
				}

			});
		attributeGetterFunctions.put(
			"FK_UTENTE_CREAZIONE",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getFK_UTENTE_CREAZIONE();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_UTENTE_CREAZIONE",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(
					RubricaGruppo rubricaGruppo, Object FK_UTENTE_CREAZIONE) {

					rubricaGruppo.setFK_UTENTE_CREAZIONE(
						(Long)FK_UTENTE_CREAZIONE);
				}

			});
		attributeGetterFunctions.put(
			"DATA_CREAZIONE",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getDATA_CREAZIONE();
				}

			});
		attributeSetterBiConsumers.put(
			"DATA_CREAZIONE",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(
					RubricaGruppo rubricaGruppo, Object DATA_CREAZIONE) {

					rubricaGruppo.setDATA_CREAZIONE((Date)DATA_CREAZIONE);
				}

			});
		attributeGetterFunctions.put(
			"FK_UTENTE_MODIFICA",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getFK_UTENTE_MODIFICA();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_UTENTE_MODIFICA",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(
					RubricaGruppo rubricaGruppo, Object FK_UTENTE_MODIFICA) {

					rubricaGruppo.setFK_UTENTE_MODIFICA(
						(Long)FK_UTENTE_MODIFICA);
				}

			});
		attributeGetterFunctions.put(
			"DATA_MODIFICA",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getDATA_MODIFICA();
				}

			});
		attributeSetterBiConsumers.put(
			"DATA_MODIFICA",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(
					RubricaGruppo rubricaGruppo, Object DATA_MODIFICA) {

					rubricaGruppo.setDATA_MODIFICA((Date)DATA_MODIFICA);
				}

			});
		attributeGetterFunctions.put(
			"DISABLED",
			new Function<RubricaGruppo, Object>() {

				@Override
				public Object apply(RubricaGruppo rubricaGruppo) {
					return rubricaGruppo.getDISABLED();
				}

			});
		attributeSetterBiConsumers.put(
			"DISABLED",
			new BiConsumer<RubricaGruppo, Object>() {

				@Override
				public void accept(
					RubricaGruppo rubricaGruppo, Object DISABLED) {

					rubricaGruppo.setDISABLED((Boolean)DISABLED);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getID_GRUPPO() {
		return _ID_GRUPPO;
	}

	@Override
	public void setID_GRUPPO(long ID_GRUPPO) {
		_columnBitmask |= ID_GRUPPO_COLUMN_BITMASK;

		if (!_setOriginalID_GRUPPO) {
			_setOriginalID_GRUPPO = true;

			_originalID_GRUPPO = _ID_GRUPPO;
		}

		_ID_GRUPPO = ID_GRUPPO;
	}

	public long getOriginalID_GRUPPO() {
		return _originalID_GRUPPO;
	}

	@JSON
	@Override
	public String getNOME() {
		if (_NOME == null) {
			return "";
		}
		else {
			return _NOME;
		}
	}

	@Override
	public void setNOME(String NOME) {
		_columnBitmask |= NOME_COLUMN_BITMASK;

		if (_originalNOME == null) {
			_originalNOME = _NOME;
		}

		_NOME = NOME;
	}

	public String getOriginalNOME() {
		return GetterUtil.getString(_originalNOME);
	}

	@JSON
	@Override
	public long getFK_SITO_PROPRIETARIO() {
		return _FK_SITO_PROPRIETARIO;
	}

	@Override
	public void setFK_SITO_PROPRIETARIO(long FK_SITO_PROPRIETARIO) {
		_columnBitmask |= FK_SITO_PROPRIETARIO_COLUMN_BITMASK;

		if (!_setOriginalFK_SITO_PROPRIETARIO) {
			_setOriginalFK_SITO_PROPRIETARIO = true;

			_originalFK_SITO_PROPRIETARIO = _FK_SITO_PROPRIETARIO;
		}

		_FK_SITO_PROPRIETARIO = FK_SITO_PROPRIETARIO;
	}

	public long getOriginalFK_SITO_PROPRIETARIO() {
		return _originalFK_SITO_PROPRIETARIO;
	}

	@JSON
	@Override
	public String getNOTE() {
		if (_NOTE == null) {
			return "";
		}
		else {
			return _NOTE;
		}
	}

	@Override
	public void setNOTE(String NOTE) {
		_NOTE = NOTE;
	}

	@JSON
	@Override
	public long getFK_UTENTE_CREAZIONE() {
		return _FK_UTENTE_CREAZIONE;
	}

	@Override
	public void setFK_UTENTE_CREAZIONE(long FK_UTENTE_CREAZIONE) {
		_FK_UTENTE_CREAZIONE = FK_UTENTE_CREAZIONE;
	}

	@JSON
	@Override
	public Date getDATA_CREAZIONE() {
		return _DATA_CREAZIONE;
	}

	@Override
	public void setDATA_CREAZIONE(Date DATA_CREAZIONE) {
		_DATA_CREAZIONE = DATA_CREAZIONE;
	}

	@JSON
	@Override
	public long getFK_UTENTE_MODIFICA() {
		return _FK_UTENTE_MODIFICA;
	}

	@Override
	public void setFK_UTENTE_MODIFICA(long FK_UTENTE_MODIFICA) {
		_FK_UTENTE_MODIFICA = FK_UTENTE_MODIFICA;
	}

	@JSON
	@Override
	public Date getDATA_MODIFICA() {
		return _DATA_MODIFICA;
	}

	@Override
	public void setDATA_MODIFICA(Date DATA_MODIFICA) {
		_DATA_MODIFICA = DATA_MODIFICA;
	}

	@JSON
	@Override
	public boolean getDISABLED() {
		return _DISABLED;
	}

	@JSON
	@Override
	public boolean isDISABLED() {
		return _DISABLED;
	}

	@Override
	public void setDISABLED(boolean DISABLED) {
		_columnBitmask |= DISABLED_COLUMN_BITMASK;

		if (!_setOriginalDISABLED) {
			_setOriginalDISABLED = true;

			_originalDISABLED = _DISABLED;
		}

		_DISABLED = DISABLED;
	}

	public boolean getOriginalDISABLED() {
		return _originalDISABLED;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, RubricaGruppo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RubricaGruppo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RubricaGruppo)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RubricaGruppoImpl rubricaGruppoImpl = new RubricaGruppoImpl();

		rubricaGruppoImpl.setID_GRUPPO(getID_GRUPPO());
		rubricaGruppoImpl.setNOME(getNOME());
		rubricaGruppoImpl.setFK_SITO_PROPRIETARIO(getFK_SITO_PROPRIETARIO());
		rubricaGruppoImpl.setNOTE(getNOTE());
		rubricaGruppoImpl.setFK_UTENTE_CREAZIONE(getFK_UTENTE_CREAZIONE());
		rubricaGruppoImpl.setDATA_CREAZIONE(getDATA_CREAZIONE());
		rubricaGruppoImpl.setFK_UTENTE_MODIFICA(getFK_UTENTE_MODIFICA());
		rubricaGruppoImpl.setDATA_MODIFICA(getDATA_MODIFICA());
		rubricaGruppoImpl.setDISABLED(isDISABLED());

		rubricaGruppoImpl.resetOriginalValues();

		return rubricaGruppoImpl;
	}

	@Override
	public int compareTo(RubricaGruppo rubricaGruppo) {
		long primaryKey = rubricaGruppo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RubricaGruppo)) {
			return false;
		}

		RubricaGruppo rubricaGruppo = (RubricaGruppo)obj;

		long primaryKey = rubricaGruppo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RubricaGruppoModelImpl rubricaGruppoModelImpl = this;

		rubricaGruppoModelImpl._originalID_GRUPPO =
			rubricaGruppoModelImpl._ID_GRUPPO;

		rubricaGruppoModelImpl._setOriginalID_GRUPPO = false;

		rubricaGruppoModelImpl._originalNOME = rubricaGruppoModelImpl._NOME;

		rubricaGruppoModelImpl._originalFK_SITO_PROPRIETARIO =
			rubricaGruppoModelImpl._FK_SITO_PROPRIETARIO;

		rubricaGruppoModelImpl._setOriginalFK_SITO_PROPRIETARIO = false;

		rubricaGruppoModelImpl._originalDISABLED =
			rubricaGruppoModelImpl._DISABLED;

		rubricaGruppoModelImpl._setOriginalDISABLED = false;

		rubricaGruppoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RubricaGruppo> toCacheModel() {
		RubricaGruppoCacheModel rubricaGruppoCacheModel =
			new RubricaGruppoCacheModel();

		rubricaGruppoCacheModel.ID_GRUPPO = getID_GRUPPO();

		rubricaGruppoCacheModel.NOME = getNOME();

		String NOME = rubricaGruppoCacheModel.NOME;

		if ((NOME != null) && (NOME.length() == 0)) {
			rubricaGruppoCacheModel.NOME = null;
		}

		rubricaGruppoCacheModel.FK_SITO_PROPRIETARIO =
			getFK_SITO_PROPRIETARIO();

		rubricaGruppoCacheModel.NOTE = getNOTE();

		String NOTE = rubricaGruppoCacheModel.NOTE;

		if ((NOTE != null) && (NOTE.length() == 0)) {
			rubricaGruppoCacheModel.NOTE = null;
		}

		rubricaGruppoCacheModel.FK_UTENTE_CREAZIONE = getFK_UTENTE_CREAZIONE();

		Date DATA_CREAZIONE = getDATA_CREAZIONE();

		if (DATA_CREAZIONE != null) {
			rubricaGruppoCacheModel.DATA_CREAZIONE = DATA_CREAZIONE.getTime();
		}
		else {
			rubricaGruppoCacheModel.DATA_CREAZIONE = Long.MIN_VALUE;
		}

		rubricaGruppoCacheModel.FK_UTENTE_MODIFICA = getFK_UTENTE_MODIFICA();

		Date DATA_MODIFICA = getDATA_MODIFICA();

		if (DATA_MODIFICA != null) {
			rubricaGruppoCacheModel.DATA_MODIFICA = DATA_MODIFICA.getTime();
		}
		else {
			rubricaGruppoCacheModel.DATA_MODIFICA = Long.MIN_VALUE;
		}

		rubricaGruppoCacheModel.DISABLED = isDISABLED();

		return rubricaGruppoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<RubricaGruppo, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<RubricaGruppo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((RubricaGruppo)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<RubricaGruppo, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<RubricaGruppo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((RubricaGruppo)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		RubricaGruppo.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		RubricaGruppo.class, ModelWrapper.class
	};

	private long _ID_GRUPPO;

	private long _originalID_GRUPPO;
	private boolean _setOriginalID_GRUPPO;

	private String _NOME;

	private String _originalNOME;

	private long _FK_SITO_PROPRIETARIO;

	private long _originalFK_SITO_PROPRIETARIO;
	private boolean _setOriginalFK_SITO_PROPRIETARIO;

	private String _NOTE;

	private long _FK_UTENTE_CREAZIONE;

	private Date _DATA_CREAZIONE;

	private long _FK_UTENTE_MODIFICA;

	private Date _DATA_MODIFICA;

	private boolean _DISABLED;

	private boolean _originalDISABLED;
	private boolean _setOriginalDISABLED;
	private long _columnBitmask;
	private RubricaGruppo _escapedModel;

}