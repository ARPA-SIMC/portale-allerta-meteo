/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerte.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.transaction.Transactional;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import it.eng.allerte.model.RubricaUtenteSito;
import it.eng.allerte.service.RubricaUtenteSitoLocalService;
import it.eng.allerte.service.persistence.RubricaCanalePersistence;
import it.eng.allerte.service.persistence.RubricaContattoFinder;
import it.eng.allerte.service.persistence.RubricaContattoPersistence;
import it.eng.allerte.service.persistence.RubricaGruppoFinder;
import it.eng.allerte.service.persistence.RubricaGruppoGruppiFinder;
import it.eng.allerte.service.persistence.RubricaGruppoGruppiPersistence;
import it.eng.allerte.service.persistence.RubricaGruppoNominativiFinder;
import it.eng.allerte.service.persistence.RubricaGruppoNominativiPersistence;
import it.eng.allerte.service.persistence.RubricaGruppoPersistence;
import it.eng.allerte.service.persistence.RubricaLogFinder;
import it.eng.allerte.service.persistence.RubricaLogPersistence;
import it.eng.allerte.service.persistence.RubricaNominativoFinder;
import it.eng.allerte.service.persistence.RubricaNominativoPersistence;
import it.eng.allerte.service.persistence.RubricaPermessiPersistence;
import it.eng.allerte.service.persistence.RubricaRuoloPermessiPersistence;
import it.eng.allerte.service.persistence.RubricaRuoloPersistence;
import it.eng.allerte.service.persistence.RubricaRuoloRubricaPersistence;
import it.eng.allerte.service.persistence.RubricaSitoPersistence;
import it.eng.allerte.service.persistence.RubricaUtenteSitoPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the rubrica utente sito local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link it.eng.allerte.service.impl.RubricaUtenteSitoLocalServiceImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see it.eng.allerte.service.impl.RubricaUtenteSitoLocalServiceImpl
 * @generated
 */
@ProviderType
public abstract class RubricaUtenteSitoLocalServiceBaseImpl
	extends BaseLocalServiceImpl
	implements RubricaUtenteSitoLocalService, IdentifiableOSGiService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>RubricaUtenteSitoLocalService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>it.eng.allerte.service.RubricaUtenteSitoLocalServiceUtil</code>.
	 */

	/**
	 * Adds the rubrica utente sito to the database. Also notifies the appropriate model listeners.
	 *
	 * @param rubricaUtenteSito the rubrica utente sito
	 * @return the rubrica utente sito that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public RubricaUtenteSito addRubricaUtenteSito(
		RubricaUtenteSito rubricaUtenteSito) {

		rubricaUtenteSito.setNew(true);

		return rubricaUtenteSitoPersistence.update(rubricaUtenteSito);
	}

	/**
	 * Creates a new rubrica utente sito with the primary key. Does not add the rubrica utente sito to the database.
	 *
	 * @param ID_UTENTE the primary key for the new rubrica utente sito
	 * @return the new rubrica utente sito
	 */
	@Override
	@Transactional(enabled = false)
	public RubricaUtenteSito createRubricaUtenteSito(long ID_UTENTE) {
		return rubricaUtenteSitoPersistence.create(ID_UTENTE);
	}

	/**
	 * Deletes the rubrica utente sito with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param ID_UTENTE the primary key of the rubrica utente sito
	 * @return the rubrica utente sito that was removed
	 * @throws PortalException if a rubrica utente sito with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public RubricaUtenteSito deleteRubricaUtenteSito(long ID_UTENTE)
		throws PortalException {

		return rubricaUtenteSitoPersistence.remove(ID_UTENTE);
	}

	/**
	 * Deletes the rubrica utente sito from the database. Also notifies the appropriate model listeners.
	 *
	 * @param rubricaUtenteSito the rubrica utente sito
	 * @return the rubrica utente sito that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public RubricaUtenteSito deleteRubricaUtenteSito(
		RubricaUtenteSito rubricaUtenteSito) {

		return rubricaUtenteSitoPersistence.remove(rubricaUtenteSito);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(
			RubricaUtenteSito.class, clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return rubricaUtenteSitoPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.allerte.model.impl.RubricaUtenteSitoModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(
		DynamicQuery dynamicQuery, int start, int end) {

		return rubricaUtenteSitoPersistence.findWithDynamicQuery(
			dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.allerte.model.impl.RubricaUtenteSitoModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(
		DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator<T> orderByComparator) {

		return rubricaUtenteSitoPersistence.findWithDynamicQuery(
			dynamicQuery, start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return rubricaUtenteSitoPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(
		DynamicQuery dynamicQuery, Projection projection) {

		return rubricaUtenteSitoPersistence.countWithDynamicQuery(
			dynamicQuery, projection);
	}

	@Override
	public RubricaUtenteSito fetchRubricaUtenteSito(long ID_UTENTE) {
		return rubricaUtenteSitoPersistence.fetchByPrimaryKey(ID_UTENTE);
	}

	/**
	 * Returns the rubrica utente sito with the primary key.
	 *
	 * @param ID_UTENTE the primary key of the rubrica utente sito
	 * @return the rubrica utente sito
	 * @throws PortalException if a rubrica utente sito with the primary key could not be found
	 */
	@Override
	public RubricaUtenteSito getRubricaUtenteSito(long ID_UTENTE)
		throws PortalException {

		return rubricaUtenteSitoPersistence.findByPrimaryKey(ID_UTENTE);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery =
			new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(
			rubricaUtenteSitoLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(RubricaUtenteSito.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("ID_UTENTE");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery
		getIndexableActionableDynamicQuery() {

		IndexableActionableDynamicQuery indexableActionableDynamicQuery =
			new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(
			rubricaUtenteSitoLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(RubricaUtenteSito.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName("ID_UTENTE");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {

		actionableDynamicQuery.setBaseLocalService(
			rubricaUtenteSitoLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(RubricaUtenteSito.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("ID_UTENTE");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {

		return rubricaUtenteSitoLocalService.deleteRubricaUtenteSito(
			(RubricaUtenteSito)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {

		return rubricaUtenteSitoPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the rubrica utente sitos.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code> will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not <code>com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS</code>), then the query will include the default ORDER BY logic from <code>it.eng.allerte.model.impl.RubricaUtenteSitoModelImpl</code>. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of rubrica utente sitos
	 * @param end the upper bound of the range of rubrica utente sitos (not inclusive)
	 * @return the range of rubrica utente sitos
	 */
	@Override
	public List<RubricaUtenteSito> getRubricaUtenteSitos(int start, int end) {
		return rubricaUtenteSitoPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of rubrica utente sitos.
	 *
	 * @return the number of rubrica utente sitos
	 */
	@Override
	public int getRubricaUtenteSitosCount() {
		return rubricaUtenteSitoPersistence.countAll();
	}

	/**
	 * Updates the rubrica utente sito in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param rubricaUtenteSito the rubrica utente sito
	 * @return the rubrica utente sito that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public RubricaUtenteSito updateRubricaUtenteSito(
		RubricaUtenteSito rubricaUtenteSito) {

		return rubricaUtenteSitoPersistence.update(rubricaUtenteSito);
	}

	/**
	 * Returns the rubrica canale local service.
	 *
	 * @return the rubrica canale local service
	 */
	public it.eng.allerte.service.RubricaCanaleLocalService
		getRubricaCanaleLocalService() {

		return rubricaCanaleLocalService;
	}

	/**
	 * Sets the rubrica canale local service.
	 *
	 * @param rubricaCanaleLocalService the rubrica canale local service
	 */
	public void setRubricaCanaleLocalService(
		it.eng.allerte.service.RubricaCanaleLocalService
			rubricaCanaleLocalService) {

		this.rubricaCanaleLocalService = rubricaCanaleLocalService;
	}

	/**
	 * Returns the rubrica canale persistence.
	 *
	 * @return the rubrica canale persistence
	 */
	public RubricaCanalePersistence getRubricaCanalePersistence() {
		return rubricaCanalePersistence;
	}

	/**
	 * Sets the rubrica canale persistence.
	 *
	 * @param rubricaCanalePersistence the rubrica canale persistence
	 */
	public void setRubricaCanalePersistence(
		RubricaCanalePersistence rubricaCanalePersistence) {

		this.rubricaCanalePersistence = rubricaCanalePersistence;
	}

	/**
	 * Returns the rubrica contatto local service.
	 *
	 * @return the rubrica contatto local service
	 */
	public it.eng.allerte.service.RubricaContattoLocalService
		getRubricaContattoLocalService() {

		return rubricaContattoLocalService;
	}

	/**
	 * Sets the rubrica contatto local service.
	 *
	 * @param rubricaContattoLocalService the rubrica contatto local service
	 */
	public void setRubricaContattoLocalService(
		it.eng.allerte.service.RubricaContattoLocalService
			rubricaContattoLocalService) {

		this.rubricaContattoLocalService = rubricaContattoLocalService;
	}

	/**
	 * Returns the rubrica contatto persistence.
	 *
	 * @return the rubrica contatto persistence
	 */
	public RubricaContattoPersistence getRubricaContattoPersistence() {
		return rubricaContattoPersistence;
	}

	/**
	 * Sets the rubrica contatto persistence.
	 *
	 * @param rubricaContattoPersistence the rubrica contatto persistence
	 */
	public void setRubricaContattoPersistence(
		RubricaContattoPersistence rubricaContattoPersistence) {

		this.rubricaContattoPersistence = rubricaContattoPersistence;
	}

	/**
	 * Returns the rubrica contatto finder.
	 *
	 * @return the rubrica contatto finder
	 */
	public RubricaContattoFinder getRubricaContattoFinder() {
		return rubricaContattoFinder;
	}

	/**
	 * Sets the rubrica contatto finder.
	 *
	 * @param rubricaContattoFinder the rubrica contatto finder
	 */
	public void setRubricaContattoFinder(
		RubricaContattoFinder rubricaContattoFinder) {

		this.rubricaContattoFinder = rubricaContattoFinder;
	}

	/**
	 * Returns the rubrica gruppo local service.
	 *
	 * @return the rubrica gruppo local service
	 */
	public it.eng.allerte.service.RubricaGruppoLocalService
		getRubricaGruppoLocalService() {

		return rubricaGruppoLocalService;
	}

	/**
	 * Sets the rubrica gruppo local service.
	 *
	 * @param rubricaGruppoLocalService the rubrica gruppo local service
	 */
	public void setRubricaGruppoLocalService(
		it.eng.allerte.service.RubricaGruppoLocalService
			rubricaGruppoLocalService) {

		this.rubricaGruppoLocalService = rubricaGruppoLocalService;
	}

	/**
	 * Returns the rubrica gruppo persistence.
	 *
	 * @return the rubrica gruppo persistence
	 */
	public RubricaGruppoPersistence getRubricaGruppoPersistence() {
		return rubricaGruppoPersistence;
	}

	/**
	 * Sets the rubrica gruppo persistence.
	 *
	 * @param rubricaGruppoPersistence the rubrica gruppo persistence
	 */
	public void setRubricaGruppoPersistence(
		RubricaGruppoPersistence rubricaGruppoPersistence) {

		this.rubricaGruppoPersistence = rubricaGruppoPersistence;
	}

	/**
	 * Returns the rubrica gruppo finder.
	 *
	 * @return the rubrica gruppo finder
	 */
	public RubricaGruppoFinder getRubricaGruppoFinder() {
		return rubricaGruppoFinder;
	}

	/**
	 * Sets the rubrica gruppo finder.
	 *
	 * @param rubricaGruppoFinder the rubrica gruppo finder
	 */
	public void setRubricaGruppoFinder(
		RubricaGruppoFinder rubricaGruppoFinder) {

		this.rubricaGruppoFinder = rubricaGruppoFinder;
	}

	/**
	 * Returns the rubrica gruppo gruppi local service.
	 *
	 * @return the rubrica gruppo gruppi local service
	 */
	public it.eng.allerte.service.RubricaGruppoGruppiLocalService
		getRubricaGruppoGruppiLocalService() {

		return rubricaGruppoGruppiLocalService;
	}

	/**
	 * Sets the rubrica gruppo gruppi local service.
	 *
	 * @param rubricaGruppoGruppiLocalService the rubrica gruppo gruppi local service
	 */
	public void setRubricaGruppoGruppiLocalService(
		it.eng.allerte.service.RubricaGruppoGruppiLocalService
			rubricaGruppoGruppiLocalService) {

		this.rubricaGruppoGruppiLocalService = rubricaGruppoGruppiLocalService;
	}

	/**
	 * Returns the rubrica gruppo gruppi persistence.
	 *
	 * @return the rubrica gruppo gruppi persistence
	 */
	public RubricaGruppoGruppiPersistence getRubricaGruppoGruppiPersistence() {
		return rubricaGruppoGruppiPersistence;
	}

	/**
	 * Sets the rubrica gruppo gruppi persistence.
	 *
	 * @param rubricaGruppoGruppiPersistence the rubrica gruppo gruppi persistence
	 */
	public void setRubricaGruppoGruppiPersistence(
		RubricaGruppoGruppiPersistence rubricaGruppoGruppiPersistence) {

		this.rubricaGruppoGruppiPersistence = rubricaGruppoGruppiPersistence;
	}

	/**
	 * Returns the rubrica gruppo gruppi finder.
	 *
	 * @return the rubrica gruppo gruppi finder
	 */
	public RubricaGruppoGruppiFinder getRubricaGruppoGruppiFinder() {
		return rubricaGruppoGruppiFinder;
	}

	/**
	 * Sets the rubrica gruppo gruppi finder.
	 *
	 * @param rubricaGruppoGruppiFinder the rubrica gruppo gruppi finder
	 */
	public void setRubricaGruppoGruppiFinder(
		RubricaGruppoGruppiFinder rubricaGruppoGruppiFinder) {

		this.rubricaGruppoGruppiFinder = rubricaGruppoGruppiFinder;
	}

	/**
	 * Returns the rubrica gruppo nominativi local service.
	 *
	 * @return the rubrica gruppo nominativi local service
	 */
	public it.eng.allerte.service.RubricaGruppoNominativiLocalService
		getRubricaGruppoNominativiLocalService() {

		return rubricaGruppoNominativiLocalService;
	}

	/**
	 * Sets the rubrica gruppo nominativi local service.
	 *
	 * @param rubricaGruppoNominativiLocalService the rubrica gruppo nominativi local service
	 */
	public void setRubricaGruppoNominativiLocalService(
		it.eng.allerte.service.RubricaGruppoNominativiLocalService
			rubricaGruppoNominativiLocalService) {

		this.rubricaGruppoNominativiLocalService =
			rubricaGruppoNominativiLocalService;
	}

	/**
	 * Returns the rubrica gruppo nominativi persistence.
	 *
	 * @return the rubrica gruppo nominativi persistence
	 */
	public RubricaGruppoNominativiPersistence
		getRubricaGruppoNominativiPersistence() {

		return rubricaGruppoNominativiPersistence;
	}

	/**
	 * Sets the rubrica gruppo nominativi persistence.
	 *
	 * @param rubricaGruppoNominativiPersistence the rubrica gruppo nominativi persistence
	 */
	public void setRubricaGruppoNominativiPersistence(
		RubricaGruppoNominativiPersistence rubricaGruppoNominativiPersistence) {

		this.rubricaGruppoNominativiPersistence =
			rubricaGruppoNominativiPersistence;
	}

	/**
	 * Returns the rubrica gruppo nominativi finder.
	 *
	 * @return the rubrica gruppo nominativi finder
	 */
	public RubricaGruppoNominativiFinder getRubricaGruppoNominativiFinder() {
		return rubricaGruppoNominativiFinder;
	}

	/**
	 * Sets the rubrica gruppo nominativi finder.
	 *
	 * @param rubricaGruppoNominativiFinder the rubrica gruppo nominativi finder
	 */
	public void setRubricaGruppoNominativiFinder(
		RubricaGruppoNominativiFinder rubricaGruppoNominativiFinder) {

		this.rubricaGruppoNominativiFinder = rubricaGruppoNominativiFinder;
	}

	/**
	 * Returns the rubrica log local service.
	 *
	 * @return the rubrica log local service
	 */
	public it.eng.allerte.service.RubricaLogLocalService
		getRubricaLogLocalService() {

		return rubricaLogLocalService;
	}

	/**
	 * Sets the rubrica log local service.
	 *
	 * @param rubricaLogLocalService the rubrica log local service
	 */
	public void setRubricaLogLocalService(
		it.eng.allerte.service.RubricaLogLocalService rubricaLogLocalService) {

		this.rubricaLogLocalService = rubricaLogLocalService;
	}

	/**
	 * Returns the rubrica log persistence.
	 *
	 * @return the rubrica log persistence
	 */
	public RubricaLogPersistence getRubricaLogPersistence() {
		return rubricaLogPersistence;
	}

	/**
	 * Sets the rubrica log persistence.
	 *
	 * @param rubricaLogPersistence the rubrica log persistence
	 */
	public void setRubricaLogPersistence(
		RubricaLogPersistence rubricaLogPersistence) {

		this.rubricaLogPersistence = rubricaLogPersistence;
	}

	/**
	 * Returns the rubrica log finder.
	 *
	 * @return the rubrica log finder
	 */
	public RubricaLogFinder getRubricaLogFinder() {
		return rubricaLogFinder;
	}

	/**
	 * Sets the rubrica log finder.
	 *
	 * @param rubricaLogFinder the rubrica log finder
	 */
	public void setRubricaLogFinder(RubricaLogFinder rubricaLogFinder) {
		this.rubricaLogFinder = rubricaLogFinder;
	}

	/**
	 * Returns the rubrica nominativo local service.
	 *
	 * @return the rubrica nominativo local service
	 */
	public it.eng.allerte.service.RubricaNominativoLocalService
		getRubricaNominativoLocalService() {

		return rubricaNominativoLocalService;
	}

	/**
	 * Sets the rubrica nominativo local service.
	 *
	 * @param rubricaNominativoLocalService the rubrica nominativo local service
	 */
	public void setRubricaNominativoLocalService(
		it.eng.allerte.service.RubricaNominativoLocalService
			rubricaNominativoLocalService) {

		this.rubricaNominativoLocalService = rubricaNominativoLocalService;
	}

	/**
	 * Returns the rubrica nominativo persistence.
	 *
	 * @return the rubrica nominativo persistence
	 */
	public RubricaNominativoPersistence getRubricaNominativoPersistence() {
		return rubricaNominativoPersistence;
	}

	/**
	 * Sets the rubrica nominativo persistence.
	 *
	 * @param rubricaNominativoPersistence the rubrica nominativo persistence
	 */
	public void setRubricaNominativoPersistence(
		RubricaNominativoPersistence rubricaNominativoPersistence) {

		this.rubricaNominativoPersistence = rubricaNominativoPersistence;
	}

	/**
	 * Returns the rubrica nominativo finder.
	 *
	 * @return the rubrica nominativo finder
	 */
	public RubricaNominativoFinder getRubricaNominativoFinder() {
		return rubricaNominativoFinder;
	}

	/**
	 * Sets the rubrica nominativo finder.
	 *
	 * @param rubricaNominativoFinder the rubrica nominativo finder
	 */
	public void setRubricaNominativoFinder(
		RubricaNominativoFinder rubricaNominativoFinder) {

		this.rubricaNominativoFinder = rubricaNominativoFinder;
	}

	/**
	 * Returns the rubrica permessi persistence.
	 *
	 * @return the rubrica permessi persistence
	 */
	public RubricaPermessiPersistence getRubricaPermessiPersistence() {
		return rubricaPermessiPersistence;
	}

	/**
	 * Sets the rubrica permessi persistence.
	 *
	 * @param rubricaPermessiPersistence the rubrica permessi persistence
	 */
	public void setRubricaPermessiPersistence(
		RubricaPermessiPersistence rubricaPermessiPersistence) {

		this.rubricaPermessiPersistence = rubricaPermessiPersistence;
	}

	/**
	 * Returns the rubrica ruolo local service.
	 *
	 * @return the rubrica ruolo local service
	 */
	public it.eng.allerte.service.RubricaRuoloLocalService
		getRubricaRuoloLocalService() {

		return rubricaRuoloLocalService;
	}

	/**
	 * Sets the rubrica ruolo local service.
	 *
	 * @param rubricaRuoloLocalService the rubrica ruolo local service
	 */
	public void setRubricaRuoloLocalService(
		it.eng.allerte.service.RubricaRuoloLocalService
			rubricaRuoloLocalService) {

		this.rubricaRuoloLocalService = rubricaRuoloLocalService;
	}

	/**
	 * Returns the rubrica ruolo persistence.
	 *
	 * @return the rubrica ruolo persistence
	 */
	public RubricaRuoloPersistence getRubricaRuoloPersistence() {
		return rubricaRuoloPersistence;
	}

	/**
	 * Sets the rubrica ruolo persistence.
	 *
	 * @param rubricaRuoloPersistence the rubrica ruolo persistence
	 */
	public void setRubricaRuoloPersistence(
		RubricaRuoloPersistence rubricaRuoloPersistence) {

		this.rubricaRuoloPersistence = rubricaRuoloPersistence;
	}

	/**
	 * Returns the rubrica ruolo permessi local service.
	 *
	 * @return the rubrica ruolo permessi local service
	 */
	public it.eng.allerte.service.RubricaRuoloPermessiLocalService
		getRubricaRuoloPermessiLocalService() {

		return rubricaRuoloPermessiLocalService;
	}

	/**
	 * Sets the rubrica ruolo permessi local service.
	 *
	 * @param rubricaRuoloPermessiLocalService the rubrica ruolo permessi local service
	 */
	public void setRubricaRuoloPermessiLocalService(
		it.eng.allerte.service.RubricaRuoloPermessiLocalService
			rubricaRuoloPermessiLocalService) {

		this.rubricaRuoloPermessiLocalService =
			rubricaRuoloPermessiLocalService;
	}

	/**
	 * Returns the rubrica ruolo permessi persistence.
	 *
	 * @return the rubrica ruolo permessi persistence
	 */
	public RubricaRuoloPermessiPersistence
		getRubricaRuoloPermessiPersistence() {

		return rubricaRuoloPermessiPersistence;
	}

	/**
	 * Sets the rubrica ruolo permessi persistence.
	 *
	 * @param rubricaRuoloPermessiPersistence the rubrica ruolo permessi persistence
	 */
	public void setRubricaRuoloPermessiPersistence(
		RubricaRuoloPermessiPersistence rubricaRuoloPermessiPersistence) {

		this.rubricaRuoloPermessiPersistence = rubricaRuoloPermessiPersistence;
	}

	/**
	 * Returns the rubrica ruolo rubrica local service.
	 *
	 * @return the rubrica ruolo rubrica local service
	 */
	public it.eng.allerte.service.RubricaRuoloRubricaLocalService
		getRubricaRuoloRubricaLocalService() {

		return rubricaRuoloRubricaLocalService;
	}

	/**
	 * Sets the rubrica ruolo rubrica local service.
	 *
	 * @param rubricaRuoloRubricaLocalService the rubrica ruolo rubrica local service
	 */
	public void setRubricaRuoloRubricaLocalService(
		it.eng.allerte.service.RubricaRuoloRubricaLocalService
			rubricaRuoloRubricaLocalService) {

		this.rubricaRuoloRubricaLocalService = rubricaRuoloRubricaLocalService;
	}

	/**
	 * Returns the rubrica ruolo rubrica persistence.
	 *
	 * @return the rubrica ruolo rubrica persistence
	 */
	public RubricaRuoloRubricaPersistence getRubricaRuoloRubricaPersistence() {
		return rubricaRuoloRubricaPersistence;
	}

	/**
	 * Sets the rubrica ruolo rubrica persistence.
	 *
	 * @param rubricaRuoloRubricaPersistence the rubrica ruolo rubrica persistence
	 */
	public void setRubricaRuoloRubricaPersistence(
		RubricaRuoloRubricaPersistence rubricaRuoloRubricaPersistence) {

		this.rubricaRuoloRubricaPersistence = rubricaRuoloRubricaPersistence;
	}

	/**
	 * Returns the rubrica sito local service.
	 *
	 * @return the rubrica sito local service
	 */
	public it.eng.allerte.service.RubricaSitoLocalService
		getRubricaSitoLocalService() {

		return rubricaSitoLocalService;
	}

	/**
	 * Sets the rubrica sito local service.
	 *
	 * @param rubricaSitoLocalService the rubrica sito local service
	 */
	public void setRubricaSitoLocalService(
		it.eng.allerte.service.RubricaSitoLocalService
			rubricaSitoLocalService) {

		this.rubricaSitoLocalService = rubricaSitoLocalService;
	}

	/**
	 * Returns the rubrica sito persistence.
	 *
	 * @return the rubrica sito persistence
	 */
	public RubricaSitoPersistence getRubricaSitoPersistence() {
		return rubricaSitoPersistence;
	}

	/**
	 * Sets the rubrica sito persistence.
	 *
	 * @param rubricaSitoPersistence the rubrica sito persistence
	 */
	public void setRubricaSitoPersistence(
		RubricaSitoPersistence rubricaSitoPersistence) {

		this.rubricaSitoPersistence = rubricaSitoPersistence;
	}

	/**
	 * Returns the rubrica utente sito local service.
	 *
	 * @return the rubrica utente sito local service
	 */
	public RubricaUtenteSitoLocalService getRubricaUtenteSitoLocalService() {
		return rubricaUtenteSitoLocalService;
	}

	/**
	 * Sets the rubrica utente sito local service.
	 *
	 * @param rubricaUtenteSitoLocalService the rubrica utente sito local service
	 */
	public void setRubricaUtenteSitoLocalService(
		RubricaUtenteSitoLocalService rubricaUtenteSitoLocalService) {

		this.rubricaUtenteSitoLocalService = rubricaUtenteSitoLocalService;
	}

	/**
	 * Returns the rubrica utente sito persistence.
	 *
	 * @return the rubrica utente sito persistence
	 */
	public RubricaUtenteSitoPersistence getRubricaUtenteSitoPersistence() {
		return rubricaUtenteSitoPersistence;
	}

	/**
	 * Sets the rubrica utente sito persistence.
	 *
	 * @param rubricaUtenteSitoPersistence the rubrica utente sito persistence
	 */
	public void setRubricaUtenteSitoPersistence(
		RubricaUtenteSitoPersistence rubricaUtenteSitoPersistence) {

		this.rubricaUtenteSitoPersistence = rubricaUtenteSitoPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService
		getCounterLocalService() {

		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService
			counterLocalService) {

		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService
		getClassNameLocalService() {

		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService
			classNameLocalService) {

		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {

		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService
		getResourceLocalService() {

		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService
			resourceLocalService) {

		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService
		getUserLocalService() {

		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {

		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register(
			"it.eng.allerte.model.RubricaUtenteSito",
			rubricaUtenteSitoLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"it.eng.allerte.model.RubricaUtenteSito");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return RubricaUtenteSitoLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return RubricaUtenteSito.class;
	}

	protected String getModelClassName() {
		return RubricaUtenteSito.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource =
				rubricaUtenteSitoPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(
		type = it.eng.allerte.service.RubricaCanaleLocalService.class
	)
	protected it.eng.allerte.service.RubricaCanaleLocalService
		rubricaCanaleLocalService;

	@BeanReference(type = RubricaCanalePersistence.class)
	protected RubricaCanalePersistence rubricaCanalePersistence;

	@BeanReference(
		type = it.eng.allerte.service.RubricaContattoLocalService.class
	)
	protected it.eng.allerte.service.RubricaContattoLocalService
		rubricaContattoLocalService;

	@BeanReference(type = RubricaContattoPersistence.class)
	protected RubricaContattoPersistence rubricaContattoPersistence;

	@BeanReference(type = RubricaContattoFinder.class)
	protected RubricaContattoFinder rubricaContattoFinder;

	@BeanReference(
		type = it.eng.allerte.service.RubricaGruppoLocalService.class
	)
	protected it.eng.allerte.service.RubricaGruppoLocalService
		rubricaGruppoLocalService;

	@BeanReference(type = RubricaGruppoPersistence.class)
	protected RubricaGruppoPersistence rubricaGruppoPersistence;

	@BeanReference(type = RubricaGruppoFinder.class)
	protected RubricaGruppoFinder rubricaGruppoFinder;

	@BeanReference(
		type = it.eng.allerte.service.RubricaGruppoGruppiLocalService.class
	)
	protected it.eng.allerte.service.RubricaGruppoGruppiLocalService
		rubricaGruppoGruppiLocalService;

	@BeanReference(type = RubricaGruppoGruppiPersistence.class)
	protected RubricaGruppoGruppiPersistence rubricaGruppoGruppiPersistence;

	@BeanReference(type = RubricaGruppoGruppiFinder.class)
	protected RubricaGruppoGruppiFinder rubricaGruppoGruppiFinder;

	@BeanReference(
		type = it.eng.allerte.service.RubricaGruppoNominativiLocalService.class
	)
	protected it.eng.allerte.service.RubricaGruppoNominativiLocalService
		rubricaGruppoNominativiLocalService;

	@BeanReference(type = RubricaGruppoNominativiPersistence.class)
	protected RubricaGruppoNominativiPersistence
		rubricaGruppoNominativiPersistence;

	@BeanReference(type = RubricaGruppoNominativiFinder.class)
	protected RubricaGruppoNominativiFinder rubricaGruppoNominativiFinder;

	@BeanReference(type = it.eng.allerte.service.RubricaLogLocalService.class)
	protected it.eng.allerte.service.RubricaLogLocalService
		rubricaLogLocalService;

	@BeanReference(type = RubricaLogPersistence.class)
	protected RubricaLogPersistence rubricaLogPersistence;

	@BeanReference(type = RubricaLogFinder.class)
	protected RubricaLogFinder rubricaLogFinder;

	@BeanReference(
		type = it.eng.allerte.service.RubricaNominativoLocalService.class
	)
	protected it.eng.allerte.service.RubricaNominativoLocalService
		rubricaNominativoLocalService;

	@BeanReference(type = RubricaNominativoPersistence.class)
	protected RubricaNominativoPersistence rubricaNominativoPersistence;

	@BeanReference(type = RubricaNominativoFinder.class)
	protected RubricaNominativoFinder rubricaNominativoFinder;

	@BeanReference(type = RubricaPermessiPersistence.class)
	protected RubricaPermessiPersistence rubricaPermessiPersistence;

	@BeanReference(type = it.eng.allerte.service.RubricaRuoloLocalService.class)
	protected it.eng.allerte.service.RubricaRuoloLocalService
		rubricaRuoloLocalService;

	@BeanReference(type = RubricaRuoloPersistence.class)
	protected RubricaRuoloPersistence rubricaRuoloPersistence;

	@BeanReference(
		type = it.eng.allerte.service.RubricaRuoloPermessiLocalService.class
	)
	protected it.eng.allerte.service.RubricaRuoloPermessiLocalService
		rubricaRuoloPermessiLocalService;

	@BeanReference(type = RubricaRuoloPermessiPersistence.class)
	protected RubricaRuoloPermessiPersistence rubricaRuoloPermessiPersistence;

	@BeanReference(
		type = it.eng.allerte.service.RubricaRuoloRubricaLocalService.class
	)
	protected it.eng.allerte.service.RubricaRuoloRubricaLocalService
		rubricaRuoloRubricaLocalService;

	@BeanReference(type = RubricaRuoloRubricaPersistence.class)
	protected RubricaRuoloRubricaPersistence rubricaRuoloRubricaPersistence;

	@BeanReference(type = it.eng.allerte.service.RubricaSitoLocalService.class)
	protected it.eng.allerte.service.RubricaSitoLocalService
		rubricaSitoLocalService;

	@BeanReference(type = RubricaSitoPersistence.class)
	protected RubricaSitoPersistence rubricaSitoPersistence;

	@BeanReference(type = RubricaUtenteSitoLocalService.class)
	protected RubricaUtenteSitoLocalService rubricaUtenteSitoLocalService;

	@BeanReference(type = RubricaUtenteSitoPersistence.class)
	protected RubricaUtenteSitoPersistence rubricaUtenteSitoPersistence;

	@ServiceReference(
		type = com.liferay.counter.kernel.service.CounterLocalService.class
	)
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ClassNameLocalService.class
	)
	protected com.liferay.portal.kernel.service.ClassNameLocalService
		classNameLocalService;

	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ResourceLocalService.class
	)
	protected com.liferay.portal.kernel.service.ResourceLocalService
		resourceLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.UserLocalService.class
	)
	protected com.liferay.portal.kernel.service.UserLocalService
		userLocalService;

	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;

	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry
		persistedModelLocalServiceRegistry;

}