/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerte.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.allerte.model.RubricaContatto;
import it.eng.allerte.model.RubricaContattoModel;
import it.eng.allerte.model.RubricaContattoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the RubricaContatto service. Represents a row in the &quot;rubrica_RubricaContatto&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>RubricaContattoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RubricaContattoImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see RubricaContattoImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RubricaContattoModelImpl
	extends BaseModelImpl<RubricaContatto> implements RubricaContattoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rubrica contatto model instance should use the <code>RubricaContatto</code> interface instead.
	 */
	public static final String TABLE_NAME = "rubrica_RubricaContatto";

	public static final Object[][] TABLE_COLUMNS = {
		{"ID_CONTATTO", Types.BIGINT}, {"FK_NOMINATIVO", Types.BIGINT},
		{"FK_CANALE", Types.BIGINT}, {"CONTATTO", Types.VARCHAR},
		{"ALLERTAMENTO", Types.BOOLEAN}, {"FK_UTENTE_CREAZIONE", Types.BIGINT},
		{"DATA_CREAZIONE", Types.TIMESTAMP},
		{"FK_UTENTE_MODIFICA", Types.BIGINT},
		{"DATA_MODIFICA", Types.TIMESTAMP},
		{"DATA_FINE_VALIDITA", Types.TIMESTAMP},
		{"MODIFICA_MINORE", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ID_CONTATTO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("FK_NOMINATIVO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("FK_CANALE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("CONTATTO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ALLERTAMENTO", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("FK_UTENTE_CREAZIONE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DATA_CREAZIONE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("FK_UTENTE_MODIFICA", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DATA_MODIFICA", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("DATA_FINE_VALIDITA", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("MODIFICA_MINORE", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table rubrica_RubricaContatto (ID_CONTATTO LONG not null primary key,FK_NOMINATIVO LONG,FK_CANALE LONG,CONTATTO VARCHAR(128) null,ALLERTAMENTO BOOLEAN,FK_UTENTE_CREAZIONE LONG,DATA_CREAZIONE DATE null,FK_UTENTE_MODIFICA LONG,DATA_MODIFICA DATE null,DATA_FINE_VALIDITA DATE null,MODIFICA_MINORE BOOLEAN)";

	public static final String TABLE_SQL_DROP =
		"drop table rubrica_RubricaContatto";

	public static final String ORDER_BY_JPQL =
		" ORDER BY rubricaContatto.ID_CONTATTO ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY rubrica_RubricaContatto.ID_CONTATTO ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.allerte.model.RubricaContatto"),
		false);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.allerte.model.RubricaContatto"),
		false);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.allerte.model.RubricaContatto"),
		true);

	public static final long DATA_CREAZIONE_COLUMN_BITMASK = 1L;

	public static final long DATA_MODIFICA_COLUMN_BITMASK = 2L;

	public static final long FK_CANALE_COLUMN_BITMASK = 4L;

	public static final long FK_NOMINATIVO_COLUMN_BITMASK = 8L;

	public static final long FK_UTENTE_CREAZIONE_COLUMN_BITMASK = 16L;

	public static final long FK_UTENTE_MODIFICA_COLUMN_BITMASK = 32L;

	public static final long ID_CONTATTO_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RubricaContatto toModel(RubricaContattoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		RubricaContatto model = new RubricaContattoImpl();

		model.setID_CONTATTO(soapModel.getID_CONTATTO());
		model.setFK_NOMINATIVO(soapModel.getFK_NOMINATIVO());
		model.setFK_CANALE(soapModel.getFK_CANALE());
		model.setCONTATTO(soapModel.getCONTATTO());
		model.setALLERTAMENTO(soapModel.isALLERTAMENTO());
		model.setFK_UTENTE_CREAZIONE(soapModel.getFK_UTENTE_CREAZIONE());
		model.setDATA_CREAZIONE(soapModel.getDATA_CREAZIONE());
		model.setFK_UTENTE_MODIFICA(soapModel.getFK_UTENTE_MODIFICA());
		model.setDATA_MODIFICA(soapModel.getDATA_MODIFICA());
		model.setDATA_FINE_VALIDITA(soapModel.getDATA_FINE_VALIDITA());
		model.setMODIFICA_MINORE(soapModel.isMODIFICA_MINORE());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RubricaContatto> toModels(
		RubricaContattoSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<RubricaContatto> models = new ArrayList<RubricaContatto>(
			soapModels.length);

		for (RubricaContattoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.rubrica.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.allerte.model.RubricaContatto"));

	public RubricaContattoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ID_CONTATTO;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setID_CONTATTO(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ID_CONTATTO;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RubricaContatto.class;
	}

	@Override
	public String getModelClassName() {
		return RubricaContatto.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<RubricaContatto, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<RubricaContatto, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaContatto, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((RubricaContatto)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<RubricaContatto, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<RubricaContatto, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(RubricaContatto)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<RubricaContatto, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<RubricaContatto, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<RubricaContatto, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<RubricaContatto, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<RubricaContatto, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<RubricaContatto, Object>>();
		Map<String, BiConsumer<RubricaContatto, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<RubricaContatto, ?>>();

		attributeGetterFunctions.put(
			"ID_CONTATTO",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getID_CONTATTO();
				}

			});
		attributeSetterBiConsumers.put(
			"ID_CONTATTO",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object ID_CONTATTO) {

					rubricaContatto.setID_CONTATTO((Long)ID_CONTATTO);
				}

			});
		attributeGetterFunctions.put(
			"FK_NOMINATIVO",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getFK_NOMINATIVO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_NOMINATIVO",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object FK_NOMINATIVO) {

					rubricaContatto.setFK_NOMINATIVO((Long)FK_NOMINATIVO);
				}

			});
		attributeGetterFunctions.put(
			"FK_CANALE",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getFK_CANALE();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_CANALE",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object FK_CANALE) {

					rubricaContatto.setFK_CANALE((Long)FK_CANALE);
				}

			});
		attributeGetterFunctions.put(
			"CONTATTO",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getCONTATTO();
				}

			});
		attributeSetterBiConsumers.put(
			"CONTATTO",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object CONTATTO) {

					rubricaContatto.setCONTATTO((String)CONTATTO);
				}

			});
		attributeGetterFunctions.put(
			"ALLERTAMENTO",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getALLERTAMENTO();
				}

			});
		attributeSetterBiConsumers.put(
			"ALLERTAMENTO",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object ALLERTAMENTO) {

					rubricaContatto.setALLERTAMENTO((Boolean)ALLERTAMENTO);
				}

			});
		attributeGetterFunctions.put(
			"FK_UTENTE_CREAZIONE",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getFK_UTENTE_CREAZIONE();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_UTENTE_CREAZIONE",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto,
					Object FK_UTENTE_CREAZIONE) {

					rubricaContatto.setFK_UTENTE_CREAZIONE(
						(Long)FK_UTENTE_CREAZIONE);
				}

			});
		attributeGetterFunctions.put(
			"DATA_CREAZIONE",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getDATA_CREAZIONE();
				}

			});
		attributeSetterBiConsumers.put(
			"DATA_CREAZIONE",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object DATA_CREAZIONE) {

					rubricaContatto.setDATA_CREAZIONE((Date)DATA_CREAZIONE);
				}

			});
		attributeGetterFunctions.put(
			"FK_UTENTE_MODIFICA",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getFK_UTENTE_MODIFICA();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_UTENTE_MODIFICA",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto,
					Object FK_UTENTE_MODIFICA) {

					rubricaContatto.setFK_UTENTE_MODIFICA(
						(Long)FK_UTENTE_MODIFICA);
				}

			});
		attributeGetterFunctions.put(
			"DATA_MODIFICA",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getDATA_MODIFICA();
				}

			});
		attributeSetterBiConsumers.put(
			"DATA_MODIFICA",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object DATA_MODIFICA) {

					rubricaContatto.setDATA_MODIFICA((Date)DATA_MODIFICA);
				}

			});
		attributeGetterFunctions.put(
			"DATA_FINE_VALIDITA",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getDATA_FINE_VALIDITA();
				}

			});
		attributeSetterBiConsumers.put(
			"DATA_FINE_VALIDITA",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto,
					Object DATA_FINE_VALIDITA) {

					rubricaContatto.setDATA_FINE_VALIDITA(
						(Date)DATA_FINE_VALIDITA);
				}

			});
		attributeGetterFunctions.put(
			"MODIFICA_MINORE",
			new Function<RubricaContatto, Object>() {

				@Override
				public Object apply(RubricaContatto rubricaContatto) {
					return rubricaContatto.getMODIFICA_MINORE();
				}

			});
		attributeSetterBiConsumers.put(
			"MODIFICA_MINORE",
			new BiConsumer<RubricaContatto, Object>() {

				@Override
				public void accept(
					RubricaContatto rubricaContatto, Object MODIFICA_MINORE) {

					rubricaContatto.setMODIFICA_MINORE(
						(Boolean)MODIFICA_MINORE);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getID_CONTATTO() {
		return _ID_CONTATTO;
	}

	@Override
	public void setID_CONTATTO(long ID_CONTATTO) {
		_ID_CONTATTO = ID_CONTATTO;
	}

	@JSON
	@Override
	public long getFK_NOMINATIVO() {
		return _FK_NOMINATIVO;
	}

	@Override
	public void setFK_NOMINATIVO(long FK_NOMINATIVO) {
		_columnBitmask |= FK_NOMINATIVO_COLUMN_BITMASK;

		if (!_setOriginalFK_NOMINATIVO) {
			_setOriginalFK_NOMINATIVO = true;

			_originalFK_NOMINATIVO = _FK_NOMINATIVO;
		}

		_FK_NOMINATIVO = FK_NOMINATIVO;
	}

	public long getOriginalFK_NOMINATIVO() {
		return _originalFK_NOMINATIVO;
	}

	@JSON
	@Override
	public long getFK_CANALE() {
		return _FK_CANALE;
	}

	@Override
	public void setFK_CANALE(long FK_CANALE) {
		_columnBitmask |= FK_CANALE_COLUMN_BITMASK;

		if (!_setOriginalFK_CANALE) {
			_setOriginalFK_CANALE = true;

			_originalFK_CANALE = _FK_CANALE;
		}

		_FK_CANALE = FK_CANALE;
	}

	public long getOriginalFK_CANALE() {
		return _originalFK_CANALE;
	}

	@JSON
	@Override
	public String getCONTATTO() {
		if (_CONTATTO == null) {
			return "";
		}
		else {
			return _CONTATTO;
		}
	}

	@Override
	public void setCONTATTO(String CONTATTO) {
		_CONTATTO = CONTATTO;
	}

	@JSON
	@Override
	public boolean getALLERTAMENTO() {
		return _ALLERTAMENTO;
	}

	@JSON
	@Override
	public boolean isALLERTAMENTO() {
		return _ALLERTAMENTO;
	}

	@Override
	public void setALLERTAMENTO(boolean ALLERTAMENTO) {
		_ALLERTAMENTO = ALLERTAMENTO;
	}

	@JSON
	@Override
	public long getFK_UTENTE_CREAZIONE() {
		return _FK_UTENTE_CREAZIONE;
	}

	@Override
	public void setFK_UTENTE_CREAZIONE(long FK_UTENTE_CREAZIONE) {
		_columnBitmask |= FK_UTENTE_CREAZIONE_COLUMN_BITMASK;

		if (!_setOriginalFK_UTENTE_CREAZIONE) {
			_setOriginalFK_UTENTE_CREAZIONE = true;

			_originalFK_UTENTE_CREAZIONE = _FK_UTENTE_CREAZIONE;
		}

		_FK_UTENTE_CREAZIONE = FK_UTENTE_CREAZIONE;
	}

	public long getOriginalFK_UTENTE_CREAZIONE() {
		return _originalFK_UTENTE_CREAZIONE;
	}

	@JSON
	@Override
	public Date getDATA_CREAZIONE() {
		return _DATA_CREAZIONE;
	}

	@Override
	public void setDATA_CREAZIONE(Date DATA_CREAZIONE) {
		_columnBitmask |= DATA_CREAZIONE_COLUMN_BITMASK;

		if (_originalDATA_CREAZIONE == null) {
			_originalDATA_CREAZIONE = _DATA_CREAZIONE;
		}

		_DATA_CREAZIONE = DATA_CREAZIONE;
	}

	public Date getOriginalDATA_CREAZIONE() {
		return _originalDATA_CREAZIONE;
	}

	@JSON
	@Override
	public long getFK_UTENTE_MODIFICA() {
		return _FK_UTENTE_MODIFICA;
	}

	@Override
	public void setFK_UTENTE_MODIFICA(long FK_UTENTE_MODIFICA) {
		_columnBitmask |= FK_UTENTE_MODIFICA_COLUMN_BITMASK;

		if (!_setOriginalFK_UTENTE_MODIFICA) {
			_setOriginalFK_UTENTE_MODIFICA = true;

			_originalFK_UTENTE_MODIFICA = _FK_UTENTE_MODIFICA;
		}

		_FK_UTENTE_MODIFICA = FK_UTENTE_MODIFICA;
	}

	public long getOriginalFK_UTENTE_MODIFICA() {
		return _originalFK_UTENTE_MODIFICA;
	}

	@JSON
	@Override
	public Date getDATA_MODIFICA() {
		return _DATA_MODIFICA;
	}

	@Override
	public void setDATA_MODIFICA(Date DATA_MODIFICA) {
		_columnBitmask |= DATA_MODIFICA_COLUMN_BITMASK;

		if (_originalDATA_MODIFICA == null) {
			_originalDATA_MODIFICA = _DATA_MODIFICA;
		}

		_DATA_MODIFICA = DATA_MODIFICA;
	}

	public Date getOriginalDATA_MODIFICA() {
		return _originalDATA_MODIFICA;
	}

	@JSON
	@Override
	public Date getDATA_FINE_VALIDITA() {
		return _DATA_FINE_VALIDITA;
	}

	@Override
	public void setDATA_FINE_VALIDITA(Date DATA_FINE_VALIDITA) {
		_DATA_FINE_VALIDITA = DATA_FINE_VALIDITA;
	}

	@JSON
	@Override
	public boolean getMODIFICA_MINORE() {
		return _MODIFICA_MINORE;
	}

	@JSON
	@Override
	public boolean isMODIFICA_MINORE() {
		return _MODIFICA_MINORE;
	}

	@Override
	public void setMODIFICA_MINORE(boolean MODIFICA_MINORE) {
		_MODIFICA_MINORE = MODIFICA_MINORE;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, RubricaContatto.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RubricaContatto toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RubricaContatto)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RubricaContattoImpl rubricaContattoImpl = new RubricaContattoImpl();

		rubricaContattoImpl.setID_CONTATTO(getID_CONTATTO());
		rubricaContattoImpl.setFK_NOMINATIVO(getFK_NOMINATIVO());
		rubricaContattoImpl.setFK_CANALE(getFK_CANALE());
		rubricaContattoImpl.setCONTATTO(getCONTATTO());
		rubricaContattoImpl.setALLERTAMENTO(isALLERTAMENTO());
		rubricaContattoImpl.setFK_UTENTE_CREAZIONE(getFK_UTENTE_CREAZIONE());
		rubricaContattoImpl.setDATA_CREAZIONE(getDATA_CREAZIONE());
		rubricaContattoImpl.setFK_UTENTE_MODIFICA(getFK_UTENTE_MODIFICA());
		rubricaContattoImpl.setDATA_MODIFICA(getDATA_MODIFICA());
		rubricaContattoImpl.setDATA_FINE_VALIDITA(getDATA_FINE_VALIDITA());
		rubricaContattoImpl.setMODIFICA_MINORE(isMODIFICA_MINORE());

		rubricaContattoImpl.resetOriginalValues();

		return rubricaContattoImpl;
	}

	@Override
	public int compareTo(RubricaContatto rubricaContatto) {
		long primaryKey = rubricaContatto.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RubricaContatto)) {
			return false;
		}

		RubricaContatto rubricaContatto = (RubricaContatto)obj;

		long primaryKey = rubricaContatto.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RubricaContattoModelImpl rubricaContattoModelImpl = this;

		rubricaContattoModelImpl._originalFK_NOMINATIVO =
			rubricaContattoModelImpl._FK_NOMINATIVO;

		rubricaContattoModelImpl._setOriginalFK_NOMINATIVO = false;

		rubricaContattoModelImpl._originalFK_CANALE =
			rubricaContattoModelImpl._FK_CANALE;

		rubricaContattoModelImpl._setOriginalFK_CANALE = false;

		rubricaContattoModelImpl._originalFK_UTENTE_CREAZIONE =
			rubricaContattoModelImpl._FK_UTENTE_CREAZIONE;

		rubricaContattoModelImpl._setOriginalFK_UTENTE_CREAZIONE = false;

		rubricaContattoModelImpl._originalDATA_CREAZIONE =
			rubricaContattoModelImpl._DATA_CREAZIONE;

		rubricaContattoModelImpl._originalFK_UTENTE_MODIFICA =
			rubricaContattoModelImpl._FK_UTENTE_MODIFICA;

		rubricaContattoModelImpl._setOriginalFK_UTENTE_MODIFICA = false;

		rubricaContattoModelImpl._originalDATA_MODIFICA =
			rubricaContattoModelImpl._DATA_MODIFICA;

		rubricaContattoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RubricaContatto> toCacheModel() {
		RubricaContattoCacheModel rubricaContattoCacheModel =
			new RubricaContattoCacheModel();

		rubricaContattoCacheModel.ID_CONTATTO = getID_CONTATTO();

		rubricaContattoCacheModel.FK_NOMINATIVO = getFK_NOMINATIVO();

		rubricaContattoCacheModel.FK_CANALE = getFK_CANALE();

		rubricaContattoCacheModel.CONTATTO = getCONTATTO();

		String CONTATTO = rubricaContattoCacheModel.CONTATTO;

		if ((CONTATTO != null) && (CONTATTO.length() == 0)) {
			rubricaContattoCacheModel.CONTATTO = null;
		}

		rubricaContattoCacheModel.ALLERTAMENTO = isALLERTAMENTO();

		rubricaContattoCacheModel.FK_UTENTE_CREAZIONE =
			getFK_UTENTE_CREAZIONE();

		Date DATA_CREAZIONE = getDATA_CREAZIONE();

		if (DATA_CREAZIONE != null) {
			rubricaContattoCacheModel.DATA_CREAZIONE = DATA_CREAZIONE.getTime();
		}
		else {
			rubricaContattoCacheModel.DATA_CREAZIONE = Long.MIN_VALUE;
		}

		rubricaContattoCacheModel.FK_UTENTE_MODIFICA = getFK_UTENTE_MODIFICA();

		Date DATA_MODIFICA = getDATA_MODIFICA();

		if (DATA_MODIFICA != null) {
			rubricaContattoCacheModel.DATA_MODIFICA = DATA_MODIFICA.getTime();
		}
		else {
			rubricaContattoCacheModel.DATA_MODIFICA = Long.MIN_VALUE;
		}

		Date DATA_FINE_VALIDITA = getDATA_FINE_VALIDITA();

		if (DATA_FINE_VALIDITA != null) {
			rubricaContattoCacheModel.DATA_FINE_VALIDITA =
				DATA_FINE_VALIDITA.getTime();
		}
		else {
			rubricaContattoCacheModel.DATA_FINE_VALIDITA = Long.MIN_VALUE;
		}

		rubricaContattoCacheModel.MODIFICA_MINORE = isMODIFICA_MINORE();

		return rubricaContattoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<RubricaContatto, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<RubricaContatto, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaContatto, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((RubricaContatto)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<RubricaContatto, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<RubricaContatto, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaContatto, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((RubricaContatto)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		RubricaContatto.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		RubricaContatto.class, ModelWrapper.class
	};

	private long _ID_CONTATTO;

	private long _FK_NOMINATIVO;

	private long _originalFK_NOMINATIVO;
	private boolean _setOriginalFK_NOMINATIVO;

	private long _FK_CANALE;

	private long _originalFK_CANALE;
	private boolean _setOriginalFK_CANALE;

	private String _CONTATTO;

	private boolean _ALLERTAMENTO;

	private long _FK_UTENTE_CREAZIONE;

	private long _originalFK_UTENTE_CREAZIONE;
	private boolean _setOriginalFK_UTENTE_CREAZIONE;

	private Date _DATA_CREAZIONE;

	private Date _originalDATA_CREAZIONE;

	private long _FK_UTENTE_MODIFICA;

	private long _originalFK_UTENTE_MODIFICA;
	private boolean _setOriginalFK_UTENTE_MODIFICA;

	private Date _DATA_MODIFICA;

	private Date _originalDATA_MODIFICA;

	private Date _DATA_FINE_VALIDITA;

	private boolean _MODIFICA_MINORE;

	private long _columnBitmask;
	private RubricaContatto _escapedModel;

}