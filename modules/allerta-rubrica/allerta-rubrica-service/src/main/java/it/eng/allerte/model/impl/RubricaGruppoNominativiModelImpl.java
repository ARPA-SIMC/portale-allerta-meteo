/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerte.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.allerte.model.RubricaGruppoNominativi;
import it.eng.allerte.model.RubricaGruppoNominativiModel;
import it.eng.allerte.model.RubricaGruppoNominativiSoap;
import it.eng.allerte.service.persistence.RubricaGruppoNominativiPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the RubricaGruppoNominativi service. Represents a row in the &quot;rubrica_RubricaGruppoNominativi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>RubricaGruppoNominativiModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RubricaGruppoNominativiImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see RubricaGruppoNominativiImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RubricaGruppoNominativiModelImpl
	extends BaseModelImpl<RubricaGruppoNominativi>
	implements RubricaGruppoNominativiModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rubrica gruppo nominativi model instance should use the <code>RubricaGruppoNominativi</code> interface instead.
	 */
	public static final String TABLE_NAME = "rubrica_RubricaGruppoNominativi";

	public static final Object[][] TABLE_COLUMNS = {
		{"FK_GRUPPO", Types.BIGINT}, {"FK_NOMINATIVO", Types.BIGINT},
		{"FK_RUOLO", Types.BIGINT}, {"SPECIFICA_RUOLO", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("FK_GRUPPO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("FK_NOMINATIVO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("FK_RUOLO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("SPECIFICA_RUOLO", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table rubrica_RubricaGruppoNominativi (FK_GRUPPO LONG not null,FK_NOMINATIVO LONG not null,FK_RUOLO LONG,SPECIFICA_RUOLO VARCHAR(75) null,primary key (FK_GRUPPO, FK_NOMINATIVO))";

	public static final String TABLE_SQL_DROP =
		"drop table rubrica_RubricaGruppoNominativi";

	public static final String ORDER_BY_JPQL =
		" ORDER BY rubricaGruppoNominativi.id.FK_GRUPPO ASC, rubricaGruppoNominativi.id.FK_NOMINATIVO ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY rubrica_RubricaGruppoNominativi.FK_GRUPPO ASC, rubrica_RubricaGruppoNominativi.FK_NOMINATIVO ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.allerte.model.RubricaGruppoNominativi"),
		false);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.allerte.model.RubricaGruppoNominativi"),
		false);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.allerte.model.RubricaGruppoNominativi"),
		true);

	public static final long FK_GRUPPO_COLUMN_BITMASK = 1L;

	public static final long FK_NOMINATIVO_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RubricaGruppoNominativi toModel(
		RubricaGruppoNominativiSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		RubricaGruppoNominativi model = new RubricaGruppoNominativiImpl();

		model.setFK_GRUPPO(soapModel.getFK_GRUPPO());
		model.setFK_NOMINATIVO(soapModel.getFK_NOMINATIVO());
		model.setFK_RUOLO(soapModel.getFK_RUOLO());
		model.setSPECIFICA_RUOLO(soapModel.getSPECIFICA_RUOLO());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RubricaGruppoNominativi> toModels(
		RubricaGruppoNominativiSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<RubricaGruppoNominativi> models =
			new ArrayList<RubricaGruppoNominativi>(soapModels.length);

		for (RubricaGruppoNominativiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.rubrica.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.allerte.model.RubricaGruppoNominativi"));

	public RubricaGruppoNominativiModelImpl() {
	}

	@Override
	public RubricaGruppoNominativiPK getPrimaryKey() {
		return new RubricaGruppoNominativiPK(_FK_GRUPPO, _FK_NOMINATIVO);
	}

	@Override
	public void setPrimaryKey(RubricaGruppoNominativiPK primaryKey) {
		setFK_GRUPPO(primaryKey.FK_GRUPPO);
		setFK_NOMINATIVO(primaryKey.FK_NOMINATIVO);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new RubricaGruppoNominativiPK(_FK_GRUPPO, _FK_NOMINATIVO);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((RubricaGruppoNominativiPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return RubricaGruppoNominativi.class;
	}

	@Override
	public String getModelClassName() {
		return RubricaGruppoNominativi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<RubricaGruppoNominativi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<RubricaGruppoNominativi, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppoNominativi, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((RubricaGruppoNominativi)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<RubricaGruppoNominativi, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<RubricaGruppoNominativi, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(RubricaGruppoNominativi)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<RubricaGruppoNominativi, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<RubricaGruppoNominativi, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<RubricaGruppoNominativi, Object>>
		_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<RubricaGruppoNominativi, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<RubricaGruppoNominativi, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<RubricaGruppoNominativi, Object>>();
		Map<String, BiConsumer<RubricaGruppoNominativi, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<RubricaGruppoNominativi, ?>>();

		attributeGetterFunctions.put(
			"FK_GRUPPO",
			new Function<RubricaGruppoNominativi, Object>() {

				@Override
				public Object apply(
					RubricaGruppoNominativi rubricaGruppoNominativi) {

					return rubricaGruppoNominativi.getFK_GRUPPO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_GRUPPO",
			new BiConsumer<RubricaGruppoNominativi, Object>() {

				@Override
				public void accept(
					RubricaGruppoNominativi rubricaGruppoNominativi,
					Object FK_GRUPPO) {

					rubricaGruppoNominativi.setFK_GRUPPO((Long)FK_GRUPPO);
				}

			});
		attributeGetterFunctions.put(
			"FK_NOMINATIVO",
			new Function<RubricaGruppoNominativi, Object>() {

				@Override
				public Object apply(
					RubricaGruppoNominativi rubricaGruppoNominativi) {

					return rubricaGruppoNominativi.getFK_NOMINATIVO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_NOMINATIVO",
			new BiConsumer<RubricaGruppoNominativi, Object>() {

				@Override
				public void accept(
					RubricaGruppoNominativi rubricaGruppoNominativi,
					Object FK_NOMINATIVO) {

					rubricaGruppoNominativi.setFK_NOMINATIVO(
						(Long)FK_NOMINATIVO);
				}

			});
		attributeGetterFunctions.put(
			"FK_RUOLO",
			new Function<RubricaGruppoNominativi, Object>() {

				@Override
				public Object apply(
					RubricaGruppoNominativi rubricaGruppoNominativi) {

					return rubricaGruppoNominativi.getFK_RUOLO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_RUOLO",
			new BiConsumer<RubricaGruppoNominativi, Object>() {

				@Override
				public void accept(
					RubricaGruppoNominativi rubricaGruppoNominativi,
					Object FK_RUOLO) {

					rubricaGruppoNominativi.setFK_RUOLO((Long)FK_RUOLO);
				}

			});
		attributeGetterFunctions.put(
			"SPECIFICA_RUOLO",
			new Function<RubricaGruppoNominativi, Object>() {

				@Override
				public Object apply(
					RubricaGruppoNominativi rubricaGruppoNominativi) {

					return rubricaGruppoNominativi.getSPECIFICA_RUOLO();
				}

			});
		attributeSetterBiConsumers.put(
			"SPECIFICA_RUOLO",
			new BiConsumer<RubricaGruppoNominativi, Object>() {

				@Override
				public void accept(
					RubricaGruppoNominativi rubricaGruppoNominativi,
					Object SPECIFICA_RUOLO) {

					rubricaGruppoNominativi.setSPECIFICA_RUOLO(
						(String)SPECIFICA_RUOLO);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getFK_GRUPPO() {
		return _FK_GRUPPO;
	}

	@Override
	public void setFK_GRUPPO(long FK_GRUPPO) {
		_columnBitmask |= FK_GRUPPO_COLUMN_BITMASK;

		if (!_setOriginalFK_GRUPPO) {
			_setOriginalFK_GRUPPO = true;

			_originalFK_GRUPPO = _FK_GRUPPO;
		}

		_FK_GRUPPO = FK_GRUPPO;
	}

	public long getOriginalFK_GRUPPO() {
		return _originalFK_GRUPPO;
	}

	@JSON
	@Override
	public long getFK_NOMINATIVO() {
		return _FK_NOMINATIVO;
	}

	@Override
	public void setFK_NOMINATIVO(long FK_NOMINATIVO) {
		_columnBitmask |= FK_NOMINATIVO_COLUMN_BITMASK;

		if (!_setOriginalFK_NOMINATIVO) {
			_setOriginalFK_NOMINATIVO = true;

			_originalFK_NOMINATIVO = _FK_NOMINATIVO;
		}

		_FK_NOMINATIVO = FK_NOMINATIVO;
	}

	public long getOriginalFK_NOMINATIVO() {
		return _originalFK_NOMINATIVO;
	}

	@JSON
	@Override
	public long getFK_RUOLO() {
		return _FK_RUOLO;
	}

	@Override
	public void setFK_RUOLO(long FK_RUOLO) {
		_FK_RUOLO = FK_RUOLO;
	}

	@JSON
	@Override
	public String getSPECIFICA_RUOLO() {
		if (_SPECIFICA_RUOLO == null) {
			return "";
		}
		else {
			return _SPECIFICA_RUOLO;
		}
	}

	@Override
	public void setSPECIFICA_RUOLO(String SPECIFICA_RUOLO) {
		_SPECIFICA_RUOLO = SPECIFICA_RUOLO;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public RubricaGruppoNominativi toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RubricaGruppoNominativi)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RubricaGruppoNominativiImpl rubricaGruppoNominativiImpl =
			new RubricaGruppoNominativiImpl();

		rubricaGruppoNominativiImpl.setFK_GRUPPO(getFK_GRUPPO());
		rubricaGruppoNominativiImpl.setFK_NOMINATIVO(getFK_NOMINATIVO());
		rubricaGruppoNominativiImpl.setFK_RUOLO(getFK_RUOLO());
		rubricaGruppoNominativiImpl.setSPECIFICA_RUOLO(getSPECIFICA_RUOLO());

		rubricaGruppoNominativiImpl.resetOriginalValues();

		return rubricaGruppoNominativiImpl;
	}

	@Override
	public int compareTo(RubricaGruppoNominativi rubricaGruppoNominativi) {
		RubricaGruppoNominativiPK primaryKey =
			rubricaGruppoNominativi.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RubricaGruppoNominativi)) {
			return false;
		}

		RubricaGruppoNominativi rubricaGruppoNominativi =
			(RubricaGruppoNominativi)obj;

		RubricaGruppoNominativiPK primaryKey =
			rubricaGruppoNominativi.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RubricaGruppoNominativiModelImpl rubricaGruppoNominativiModelImpl =
			this;

		rubricaGruppoNominativiModelImpl._originalFK_GRUPPO =
			rubricaGruppoNominativiModelImpl._FK_GRUPPO;

		rubricaGruppoNominativiModelImpl._setOriginalFK_GRUPPO = false;

		rubricaGruppoNominativiModelImpl._originalFK_NOMINATIVO =
			rubricaGruppoNominativiModelImpl._FK_NOMINATIVO;

		rubricaGruppoNominativiModelImpl._setOriginalFK_NOMINATIVO = false;

		rubricaGruppoNominativiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RubricaGruppoNominativi> toCacheModel() {
		RubricaGruppoNominativiCacheModel rubricaGruppoNominativiCacheModel =
			new RubricaGruppoNominativiCacheModel();

		rubricaGruppoNominativiCacheModel.rubricaGruppoNominativiPK =
			getPrimaryKey();

		rubricaGruppoNominativiCacheModel.FK_GRUPPO = getFK_GRUPPO();

		rubricaGruppoNominativiCacheModel.FK_NOMINATIVO = getFK_NOMINATIVO();

		rubricaGruppoNominativiCacheModel.FK_RUOLO = getFK_RUOLO();

		rubricaGruppoNominativiCacheModel.SPECIFICA_RUOLO =
			getSPECIFICA_RUOLO();

		String SPECIFICA_RUOLO =
			rubricaGruppoNominativiCacheModel.SPECIFICA_RUOLO;

		if ((SPECIFICA_RUOLO != null) && (SPECIFICA_RUOLO.length() == 0)) {
			rubricaGruppoNominativiCacheModel.SPECIFICA_RUOLO = null;
		}

		return rubricaGruppoNominativiCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<RubricaGruppoNominativi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<RubricaGruppoNominativi, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppoNominativi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply((RubricaGruppoNominativi)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<RubricaGruppoNominativi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<RubricaGruppoNominativi, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppoNominativi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((RubricaGruppoNominativi)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		RubricaGruppoNominativi.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		RubricaGruppoNominativi.class, ModelWrapper.class
	};

	private long _FK_GRUPPO;

	private long _originalFK_GRUPPO;
	private boolean _setOriginalFK_GRUPPO;

	private long _FK_NOMINATIVO;

	private long _originalFK_NOMINATIVO;
	private boolean _setOriginalFK_NOMINATIVO;

	private long _FK_RUOLO;

	private String _SPECIFICA_RUOLO;

	private long _columnBitmask;
	private RubricaGruppoNominativi _escapedModel;

}