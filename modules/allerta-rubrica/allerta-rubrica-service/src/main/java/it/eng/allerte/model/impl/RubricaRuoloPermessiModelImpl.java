/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerte.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.allerte.model.RubricaRuoloPermessi;
import it.eng.allerte.model.RubricaRuoloPermessiModel;
import it.eng.allerte.model.RubricaRuoloPermessiSoap;
import it.eng.allerte.service.persistence.RubricaRuoloPermessiPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the RubricaRuoloPermessi service. Represents a row in the &quot;rubrica_RubricaRuoloPermessi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>RubricaRuoloPermessiModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RubricaRuoloPermessiImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see RubricaRuoloPermessiImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RubricaRuoloPermessiModelImpl
	extends BaseModelImpl<RubricaRuoloPermessi>
	implements RubricaRuoloPermessiModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rubrica ruolo permessi model instance should use the <code>RubricaRuoloPermessi</code> interface instead.
	 */
	public static final String TABLE_NAME = "rubrica_RubricaRuoloPermessi";

	public static final Object[][] TABLE_COLUMNS = {
		{"FK_ID_RUOLO", Types.BIGINT}, {"FK_ID_PERMESSO", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("FK_ID_RUOLO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("FK_ID_PERMESSO", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table rubrica_RubricaRuoloPermessi (FK_ID_RUOLO LONG not null,FK_ID_PERMESSO VARCHAR(75) not null,primary key (FK_ID_RUOLO, FK_ID_PERMESSO))";

	public static final String TABLE_SQL_DROP =
		"drop table rubrica_RubricaRuoloPermessi";

	public static final String ORDER_BY_JPQL =
		" ORDER BY rubricaRuoloPermessi.id.FK_ID_RUOLO ASC, rubricaRuoloPermessi.id.FK_ID_PERMESSO ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY rubrica_RubricaRuoloPermessi.FK_ID_RUOLO ASC, rubrica_RubricaRuoloPermessi.FK_ID_PERMESSO ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.allerte.model.RubricaRuoloPermessi"),
		false);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.allerte.model.RubricaRuoloPermessi"),
		false);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.allerte.model.RubricaRuoloPermessi"),
		true);

	public static final long FK_ID_RUOLO_COLUMN_BITMASK = 1L;

	public static final long FK_ID_PERMESSO_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RubricaRuoloPermessi toModel(
		RubricaRuoloPermessiSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		RubricaRuoloPermessi model = new RubricaRuoloPermessiImpl();

		model.setFK_ID_RUOLO(soapModel.getFK_ID_RUOLO());
		model.setFK_ID_PERMESSO(soapModel.getFK_ID_PERMESSO());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RubricaRuoloPermessi> toModels(
		RubricaRuoloPermessiSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<RubricaRuoloPermessi> models = new ArrayList<RubricaRuoloPermessi>(
			soapModels.length);

		for (RubricaRuoloPermessiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.rubrica.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.allerte.model.RubricaRuoloPermessi"));

	public RubricaRuoloPermessiModelImpl() {
	}

	@Override
	public RubricaRuoloPermessiPK getPrimaryKey() {
		return new RubricaRuoloPermessiPK(_FK_ID_RUOLO, _FK_ID_PERMESSO);
	}

	@Override
	public void setPrimaryKey(RubricaRuoloPermessiPK primaryKey) {
		setFK_ID_RUOLO(primaryKey.FK_ID_RUOLO);
		setFK_ID_PERMESSO(primaryKey.FK_ID_PERMESSO);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new RubricaRuoloPermessiPK(_FK_ID_RUOLO, _FK_ID_PERMESSO);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((RubricaRuoloPermessiPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return RubricaRuoloPermessi.class;
	}

	@Override
	public String getModelClassName() {
		return RubricaRuoloPermessi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<RubricaRuoloPermessi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<RubricaRuoloPermessi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaRuoloPermessi, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((RubricaRuoloPermessi)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<RubricaRuoloPermessi, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<RubricaRuoloPermessi, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(RubricaRuoloPermessi)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<RubricaRuoloPermessi, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<RubricaRuoloPermessi, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<RubricaRuoloPermessi, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<RubricaRuoloPermessi, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<RubricaRuoloPermessi, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<RubricaRuoloPermessi, Object>>();
		Map<String, BiConsumer<RubricaRuoloPermessi, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<RubricaRuoloPermessi, ?>>();

		attributeGetterFunctions.put(
			"FK_ID_RUOLO",
			new Function<RubricaRuoloPermessi, Object>() {

				@Override
				public Object apply(RubricaRuoloPermessi rubricaRuoloPermessi) {
					return rubricaRuoloPermessi.getFK_ID_RUOLO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_ID_RUOLO",
			new BiConsumer<RubricaRuoloPermessi, Object>() {

				@Override
				public void accept(
					RubricaRuoloPermessi rubricaRuoloPermessi,
					Object FK_ID_RUOLO) {

					rubricaRuoloPermessi.setFK_ID_RUOLO((Long)FK_ID_RUOLO);
				}

			});
		attributeGetterFunctions.put(
			"FK_ID_PERMESSO",
			new Function<RubricaRuoloPermessi, Object>() {

				@Override
				public Object apply(RubricaRuoloPermessi rubricaRuoloPermessi) {
					return rubricaRuoloPermessi.getFK_ID_PERMESSO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_ID_PERMESSO",
			new BiConsumer<RubricaRuoloPermessi, Object>() {

				@Override
				public void accept(
					RubricaRuoloPermessi rubricaRuoloPermessi,
					Object FK_ID_PERMESSO) {

					rubricaRuoloPermessi.setFK_ID_PERMESSO(
						(String)FK_ID_PERMESSO);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getFK_ID_RUOLO() {
		return _FK_ID_RUOLO;
	}

	@Override
	public void setFK_ID_RUOLO(long FK_ID_RUOLO) {
		_columnBitmask |= FK_ID_RUOLO_COLUMN_BITMASK;

		if (!_setOriginalFK_ID_RUOLO) {
			_setOriginalFK_ID_RUOLO = true;

			_originalFK_ID_RUOLO = _FK_ID_RUOLO;
		}

		_FK_ID_RUOLO = FK_ID_RUOLO;
	}

	public long getOriginalFK_ID_RUOLO() {
		return _originalFK_ID_RUOLO;
	}

	@JSON
	@Override
	public String getFK_ID_PERMESSO() {
		if (_FK_ID_PERMESSO == null) {
			return "";
		}
		else {
			return _FK_ID_PERMESSO;
		}
	}

	@Override
	public void setFK_ID_PERMESSO(String FK_ID_PERMESSO) {
		_FK_ID_PERMESSO = FK_ID_PERMESSO;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public RubricaRuoloPermessi toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RubricaRuoloPermessi)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RubricaRuoloPermessiImpl rubricaRuoloPermessiImpl =
			new RubricaRuoloPermessiImpl();

		rubricaRuoloPermessiImpl.setFK_ID_RUOLO(getFK_ID_RUOLO());
		rubricaRuoloPermessiImpl.setFK_ID_PERMESSO(getFK_ID_PERMESSO());

		rubricaRuoloPermessiImpl.resetOriginalValues();

		return rubricaRuoloPermessiImpl;
	}

	@Override
	public int compareTo(RubricaRuoloPermessi rubricaRuoloPermessi) {
		RubricaRuoloPermessiPK primaryKey =
			rubricaRuoloPermessi.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RubricaRuoloPermessi)) {
			return false;
		}

		RubricaRuoloPermessi rubricaRuoloPermessi = (RubricaRuoloPermessi)obj;

		RubricaRuoloPermessiPK primaryKey =
			rubricaRuoloPermessi.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RubricaRuoloPermessiModelImpl rubricaRuoloPermessiModelImpl = this;

		rubricaRuoloPermessiModelImpl._originalFK_ID_RUOLO =
			rubricaRuoloPermessiModelImpl._FK_ID_RUOLO;

		rubricaRuoloPermessiModelImpl._setOriginalFK_ID_RUOLO = false;

		rubricaRuoloPermessiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RubricaRuoloPermessi> toCacheModel() {
		RubricaRuoloPermessiCacheModel rubricaRuoloPermessiCacheModel =
			new RubricaRuoloPermessiCacheModel();

		rubricaRuoloPermessiCacheModel.rubricaRuoloPermessiPK = getPrimaryKey();

		rubricaRuoloPermessiCacheModel.FK_ID_RUOLO = getFK_ID_RUOLO();

		rubricaRuoloPermessiCacheModel.FK_ID_PERMESSO = getFK_ID_PERMESSO();

		String FK_ID_PERMESSO = rubricaRuoloPermessiCacheModel.FK_ID_PERMESSO;

		if ((FK_ID_PERMESSO != null) && (FK_ID_PERMESSO.length() == 0)) {
			rubricaRuoloPermessiCacheModel.FK_ID_PERMESSO = null;
		}

		return rubricaRuoloPermessiCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<RubricaRuoloPermessi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<RubricaRuoloPermessi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaRuoloPermessi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply((RubricaRuoloPermessi)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<RubricaRuoloPermessi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<RubricaRuoloPermessi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaRuoloPermessi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((RubricaRuoloPermessi)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		RubricaRuoloPermessi.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		RubricaRuoloPermessi.class, ModelWrapper.class
	};

	private long _FK_ID_RUOLO;

	private long _originalFK_ID_RUOLO;
	private boolean _setOriginalFK_ID_RUOLO;

	private String _FK_ID_PERMESSO;

	private long _columnBitmask;
	private RubricaRuoloPermessi _escapedModel;

}