/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.eng.allerte.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import it.eng.allerte.model.RubricaGruppoGruppi;
import it.eng.allerte.model.RubricaGruppoGruppiModel;
import it.eng.allerte.model.RubricaGruppoGruppiSoap;
import it.eng.allerte.service.persistence.RubricaGruppoGruppiPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the RubricaGruppoGruppi service. Represents a row in the &quot;rubrica_RubricaGruppoGruppi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>RubricaGruppoGruppiModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RubricaGruppoGruppiImpl}.
 * </p>
 *
 * @author Pratola_L
 * @see RubricaGruppoGruppiImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RubricaGruppoGruppiModelImpl
	extends BaseModelImpl<RubricaGruppoGruppi>
	implements RubricaGruppoGruppiModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rubrica gruppo gruppi model instance should use the <code>RubricaGruppoGruppi</code> interface instead.
	 */
	public static final String TABLE_NAME = "rubrica_RubricaGruppoGruppi";

	public static final Object[][] TABLE_COLUMNS = {
		{"FK_GRUPPO_PADRE", Types.BIGINT}, {"FK_GRUPPO_FIGLIO", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("FK_GRUPPO_PADRE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("FK_GRUPPO_FIGLIO", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table rubrica_RubricaGruppoGruppi (FK_GRUPPO_PADRE LONG not null,FK_GRUPPO_FIGLIO LONG not null,primary key (FK_GRUPPO_PADRE, FK_GRUPPO_FIGLIO))";

	public static final String TABLE_SQL_DROP =
		"drop table rubrica_RubricaGruppoGruppi";

	public static final String ORDER_BY_JPQL =
		" ORDER BY rubricaGruppoGruppi.id.FK_GRUPPO_PADRE ASC, rubricaGruppoGruppi.id.FK_GRUPPO_FIGLIO ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY rubrica_RubricaGruppoGruppi.FK_GRUPPO_PADRE ASC, rubrica_RubricaGruppoGruppi.FK_GRUPPO_FIGLIO ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.it.eng.allerte.model.RubricaGruppoGruppi"),
		false);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.it.eng.allerte.model.RubricaGruppoGruppi"),
		false);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		it.eng.rubrica.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.it.eng.allerte.model.RubricaGruppoGruppi"),
		true);

	public static final long FK_GRUPPO_FIGLIO_COLUMN_BITMASK = 1L;

	public static final long FK_GRUPPO_PADRE_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RubricaGruppoGruppi toModel(
		RubricaGruppoGruppiSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		RubricaGruppoGruppi model = new RubricaGruppoGruppiImpl();

		model.setFK_GRUPPO_PADRE(soapModel.getFK_GRUPPO_PADRE());
		model.setFK_GRUPPO_FIGLIO(soapModel.getFK_GRUPPO_FIGLIO());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RubricaGruppoGruppi> toModels(
		RubricaGruppoGruppiSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<RubricaGruppoGruppi> models = new ArrayList<RubricaGruppoGruppi>(
			soapModels.length);

		for (RubricaGruppoGruppiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		it.eng.rubrica.service.util.ServiceProps.get(
			"lock.expiration.time.it.eng.allerte.model.RubricaGruppoGruppi"));

	public RubricaGruppoGruppiModelImpl() {
	}

	@Override
	public RubricaGruppoGruppiPK getPrimaryKey() {
		return new RubricaGruppoGruppiPK(_FK_GRUPPO_PADRE, _FK_GRUPPO_FIGLIO);
	}

	@Override
	public void setPrimaryKey(RubricaGruppoGruppiPK primaryKey) {
		setFK_GRUPPO_PADRE(primaryKey.FK_GRUPPO_PADRE);
		setFK_GRUPPO_FIGLIO(primaryKey.FK_GRUPPO_FIGLIO);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new RubricaGruppoGruppiPK(_FK_GRUPPO_PADRE, _FK_GRUPPO_FIGLIO);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((RubricaGruppoGruppiPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return RubricaGruppoGruppi.class;
	}

	@Override
	public String getModelClassName() {
		return RubricaGruppoGruppi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<RubricaGruppoGruppi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<RubricaGruppoGruppi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppoGruppi, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((RubricaGruppoGruppi)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<RubricaGruppoGruppi, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<RubricaGruppoGruppi, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(RubricaGruppoGruppi)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<RubricaGruppoGruppi, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<RubricaGruppoGruppi, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<RubricaGruppoGruppi, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<RubricaGruppoGruppi, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<RubricaGruppoGruppi, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<RubricaGruppoGruppi, Object>>();
		Map<String, BiConsumer<RubricaGruppoGruppi, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<RubricaGruppoGruppi, ?>>();

		attributeGetterFunctions.put(
			"FK_GRUPPO_PADRE",
			new Function<RubricaGruppoGruppi, Object>() {

				@Override
				public Object apply(RubricaGruppoGruppi rubricaGruppoGruppi) {
					return rubricaGruppoGruppi.getFK_GRUPPO_PADRE();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_GRUPPO_PADRE",
			new BiConsumer<RubricaGruppoGruppi, Object>() {

				@Override
				public void accept(
					RubricaGruppoGruppi rubricaGruppoGruppi,
					Object FK_GRUPPO_PADRE) {

					rubricaGruppoGruppi.setFK_GRUPPO_PADRE(
						(Long)FK_GRUPPO_PADRE);
				}

			});
		attributeGetterFunctions.put(
			"FK_GRUPPO_FIGLIO",
			new Function<RubricaGruppoGruppi, Object>() {

				@Override
				public Object apply(RubricaGruppoGruppi rubricaGruppoGruppi) {
					return rubricaGruppoGruppi.getFK_GRUPPO_FIGLIO();
				}

			});
		attributeSetterBiConsumers.put(
			"FK_GRUPPO_FIGLIO",
			new BiConsumer<RubricaGruppoGruppi, Object>() {

				@Override
				public void accept(
					RubricaGruppoGruppi rubricaGruppoGruppi,
					Object FK_GRUPPO_FIGLIO) {

					rubricaGruppoGruppi.setFK_GRUPPO_FIGLIO(
						(Long)FK_GRUPPO_FIGLIO);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getFK_GRUPPO_PADRE() {
		return _FK_GRUPPO_PADRE;
	}

	@Override
	public void setFK_GRUPPO_PADRE(long FK_GRUPPO_PADRE) {
		_columnBitmask |= FK_GRUPPO_PADRE_COLUMN_BITMASK;

		if (!_setOriginalFK_GRUPPO_PADRE) {
			_setOriginalFK_GRUPPO_PADRE = true;

			_originalFK_GRUPPO_PADRE = _FK_GRUPPO_PADRE;
		}

		_FK_GRUPPO_PADRE = FK_GRUPPO_PADRE;
	}

	public long getOriginalFK_GRUPPO_PADRE() {
		return _originalFK_GRUPPO_PADRE;
	}

	@JSON
	@Override
	public long getFK_GRUPPO_FIGLIO() {
		return _FK_GRUPPO_FIGLIO;
	}

	@Override
	public void setFK_GRUPPO_FIGLIO(long FK_GRUPPO_FIGLIO) {
		_columnBitmask |= FK_GRUPPO_FIGLIO_COLUMN_BITMASK;

		if (!_setOriginalFK_GRUPPO_FIGLIO) {
			_setOriginalFK_GRUPPO_FIGLIO = true;

			_originalFK_GRUPPO_FIGLIO = _FK_GRUPPO_FIGLIO;
		}

		_FK_GRUPPO_FIGLIO = FK_GRUPPO_FIGLIO;
	}

	public long getOriginalFK_GRUPPO_FIGLIO() {
		return _originalFK_GRUPPO_FIGLIO;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public RubricaGruppoGruppi toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RubricaGruppoGruppi)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RubricaGruppoGruppiImpl rubricaGruppoGruppiImpl =
			new RubricaGruppoGruppiImpl();

		rubricaGruppoGruppiImpl.setFK_GRUPPO_PADRE(getFK_GRUPPO_PADRE());
		rubricaGruppoGruppiImpl.setFK_GRUPPO_FIGLIO(getFK_GRUPPO_FIGLIO());

		rubricaGruppoGruppiImpl.resetOriginalValues();

		return rubricaGruppoGruppiImpl;
	}

	@Override
	public int compareTo(RubricaGruppoGruppi rubricaGruppoGruppi) {
		RubricaGruppoGruppiPK primaryKey = rubricaGruppoGruppi.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RubricaGruppoGruppi)) {
			return false;
		}

		RubricaGruppoGruppi rubricaGruppoGruppi = (RubricaGruppoGruppi)obj;

		RubricaGruppoGruppiPK primaryKey = rubricaGruppoGruppi.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RubricaGruppoGruppiModelImpl rubricaGruppoGruppiModelImpl = this;

		rubricaGruppoGruppiModelImpl._originalFK_GRUPPO_PADRE =
			rubricaGruppoGruppiModelImpl._FK_GRUPPO_PADRE;

		rubricaGruppoGruppiModelImpl._setOriginalFK_GRUPPO_PADRE = false;

		rubricaGruppoGruppiModelImpl._originalFK_GRUPPO_FIGLIO =
			rubricaGruppoGruppiModelImpl._FK_GRUPPO_FIGLIO;

		rubricaGruppoGruppiModelImpl._setOriginalFK_GRUPPO_FIGLIO = false;

		rubricaGruppoGruppiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RubricaGruppoGruppi> toCacheModel() {
		RubricaGruppoGruppiCacheModel rubricaGruppoGruppiCacheModel =
			new RubricaGruppoGruppiCacheModel();

		rubricaGruppoGruppiCacheModel.rubricaGruppoGruppiPK = getPrimaryKey();

		rubricaGruppoGruppiCacheModel.FK_GRUPPO_PADRE = getFK_GRUPPO_PADRE();

		rubricaGruppoGruppiCacheModel.FK_GRUPPO_FIGLIO = getFK_GRUPPO_FIGLIO();

		return rubricaGruppoGruppiCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<RubricaGruppoGruppi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<RubricaGruppoGruppi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppoGruppi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((RubricaGruppoGruppi)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<RubricaGruppoGruppi, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<RubricaGruppoGruppi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RubricaGruppoGruppi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((RubricaGruppoGruppi)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		RubricaGruppoGruppi.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		RubricaGruppoGruppi.class, ModelWrapper.class
	};

	private long _FK_GRUPPO_PADRE;

	private long _originalFK_GRUPPO_PADRE;
	private boolean _setOriginalFK_GRUPPO_PADRE;

	private long _FK_GRUPPO_FIGLIO;

	private long _originalFK_GRUPPO_FIGLIO;
	private boolean _setOriginalFK_GRUPPO_FIGLIO;
	private long _columnBitmask;
	private RubricaGruppoGruppi _escapedModel;

}